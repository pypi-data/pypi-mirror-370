[project]
name = "gitbuilding"
version = "0.15.0a5.dev0"
description = "For documenting hardware projects with minimal effort, so you can stop writing and GitBuilding."
readme = "README.md"
requires-python = ">= 3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.9"]
keywords = ['Documentation', 'Hardware']
authors = [
    { name = "Julian Stirling", email = "julian@julianstirling.co.uk" },
]
dependencies = [
    "argparse",
    "pyyaml>=5.1",
    "python-frontmatter",
    "flask",
    "flask_cors",
    "requests",
    "markdown>=3.2",
    "latex2mathml",
    "colorama",
    "marshmallow>=03.22",
    "jinja2",
    "regex>=2022.1.18",
    "waitress",
    "defusedxml>=0.7.1",
    "pygments>=2.14",
    "pathspec>=0.11",
    "watchdog>=3.0",
    "exsource-tools>=0.0.7",
    "weasyprint>=60.1",
    "jsonschema",
]

[project.urls]
Homepage = "https://gitbuilding.io/"
"Bug Tracker" = "https://gitlab.com/gitbuilding/gitbuilding/issues"
"Source Code" = "https://gitlab.com/gitbuilding/gitbuilding"


[project.optional-dependencies]
gui = [
    "PyQt5",
    "PyQtWebEngine"
]
dev = [
    "pylint",
    "coverage",
    "beautifulsoup4",
    "html5lib",
    "curlylint",
    "pydeps",
    "twine",
    "build",
    "hatchling>=1.22.2",
    "pkginfo>=1.10.0"
]

[project.scripts]
gitbuilding = "gitbuilding.__main__:main"

[project.gui-scripts]
gitbuilding-gui = "gitbuilding.gui:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "gitbuilding"
]
artifacts = [
  "gitbuilding/static/*.js",
  "gitbuilding/static/webapp/"
]

[tool.hatch.build.targets.wheel]
artifacts = [
  "gitbuilding/static/*.js",
  "gitbuilding/static/webapp/"
]

[tool.coverage.run]
branch = true
source = ["gitbuilding"]
command_line = "-m unittest discover -s tests/"

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
ignore_errors = true
omit = ["tests/*"]
fail_under = 60

[tool.curlylint.rules]

# All role attributes must be valid.
# See https://www.curlylint.org/docs/rules/aria_role.
aria_role = true

# Forms cannot be rendered with as_table, as_ul, or as_p
# See https://www.curlylint.org/docs/rules/django_forms_rendering.
django_forms_rendering = true

# Uncomment once GitBuilding supports multiple languages
# The `lang` attribute must be present.
# See https://www.curlylint.org/docs/rules/html_has_lang.
# html_has_lang = true

# The `alt` attribute must be present.
# See https://www.curlylint.org/docs/rules/image_alt.
image_alt = true

# Uncomment to enable indentation checks
# See https://www.curlylint.org/docs/rules/indent.
# indent = 4

# `user-scalable=no` must not be used, and `maximum-scale` should be 2 or above.
# See https://www.curlylint.org/docs/rules/meta_viewport.
meta_viewport = true

# The `autofocus` attribute must not be used.
# See https://www.curlylint.org/docs/rules/no_autofocus.
no_autofocus = true

# Avoid positive `tabindex` values, change the order of elements on the page instead.
# See https://www.curlylint.org/docs/rules/tabindex_no_positive.
tabindex_no_positive = true
