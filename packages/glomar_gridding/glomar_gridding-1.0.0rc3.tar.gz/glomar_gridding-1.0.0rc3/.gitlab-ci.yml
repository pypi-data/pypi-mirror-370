variables:
  UV_VERSION: "0.7.19"
  PYTHON_VERSION: "3.12"
  BASE_LAYER: "bookworm-slim"
  UV_CACHE_DIR: ".uv-cache"
  UV_SYSTEM_PYTHON: "1"
stages:
  - build
  - test
  - lint
pre-commit:
  stage: build
  image: python:3.11
  script:
    - pip install pre-commit
    - pre-commit run --all-files
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PROJECT_NAMESPACE == "nocsurfaceprocesses"
pytest:
  stage: test
  image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
  script:
    - apt update
    - apt install -y git g++
    - echo "installed deps from apt"
    - uv --version
    - uv sync --all-extras
    - uv pip list
    - uv run pytest test --cov=glomar_gridding --junitxml=test_results.xml
  coverage: '/TOTAL.*? (100(?:\.0+)?\%\|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      junit: test_results.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PROJECT_NAMESPACE == "nocsurfaceprocesses"
ruff:
  stage: lint
  interruptible: true
  image:
    name: ghcr.io/astral-sh/ruff:0.12.2-alpine
  before_script:
    - cd $CI_PROJECT_DIR
    - ruff --version
  script:
    - ruff check --output-format=gitlab > code-quality-report.json
  artifacts:
    reports:
      codequality: $CI_PROJECT_DIR/code-quality-report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PROJECT_NAMESPACE == "nocsurfaceprocesses"
