name: glomar_gridding Testing Suite
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    name: py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1 # Fetch only current version
      - name: Set environment variables
        run: |
          echo "UV_ENV_FILE=pyproject.toml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "UV_CACHE_DIR=/tmp/.uv-cache" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}-${{ hashFiles(env.UV_ENV_FILE) }}
          restore-keys: |
            uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}-${{ hashFiles(env.UV_ENV_FILE) }}
            uv-${{ runner.os }}-${{runner.arch}}-py${{matrix.python-version}}

      - name: Install glomar_gridding
        run: |
          uv sync --extra test

      - name: Version info
        run: |
          uv version
          uv pip list

      - name: Import glomar_gridding toolbox
        run: |
          uv run python -c "import glomar_gridding"

      - name: Run tests
        timeout-minutes: 10
        run: uv run pytest test
          --cov=glomar_gridding
          --cov-report=xml
          --junitxml=test-results/${{ runner.os }}-${{ matrix.python-version }}.xml

      - name: Minimise uv cache
        run: uv cache prune --ci
