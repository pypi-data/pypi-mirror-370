{{ project_name }} Quick Start
{{ "=" * (project_name|length + 12) }}

Welcome to {{ project_name }}! This guide will get you up and running in under 5 minutes.

.. contents:: Table of Contents
   :local:
   :depth: 2

Installation
------------

Install {{ project_name }} using pip::

    pip install {{ package_name|default(project_name|lower|replace(' ', '-')) }}

Or with Poetry::

    poetry add {{ package_name|default(project_name|lower|replace(' ', '-')) }}

Or for development::

    git clone https://github.com/{{ github_org|default('org') }}/{{ github_repo|default('repo') }}.git
    cd {{ github_repo|default('repo') }}
    poetry install

First Steps
-----------

1. **Initialize Documentation**

   Navigate to your Python project and run::

       pydevelop-docs init

   This creates a ``docs/`` directory with everything configured.

2. **Build Documentation**

   Generate your documentation::

       pydevelop-docs build

   Or for a clean build::

       pydevelop-docs build --clean

3. **View Documentation**

   Open ``docs/build/html/index.html`` in your browser, or serve it locally::

       python -m http.server 8000 --directory docs/build/html

   Then visit http://localhost:8000

What You Get
------------

PyDevelop-Docs automatically configures:

âœ… **Automatic API Documentation**
   Your entire codebase is documented with AutoAPI

âœ… **40+ Sphinx Extensions**
   All the best documentation tools, pre-configured

âœ… **Beautiful Theme**
   Modern, responsive Furo theme with dark mode

âœ… **Search Functionality**
   Full-text search across all documentation

âœ… **Hierarchical Navigation**
   Nested module structure, not flat lists

Example Project Structure
-------------------------

After initialization::

    your-project/
    â”œâ”€â”€ docs/
    â”‚   â”œâ”€â”€ source/
    â”‚   â”‚   â”œâ”€â”€ conf.py          # Sphinx configuration
    â”‚   â”‚   â”œâ”€â”€ index.rst        # Main documentation page
    â”‚   â”‚   â”œâ”€â”€ _static/         # CSS/JS customizations
    â”‚   â”‚   â””â”€â”€ _templates/      # Custom templates
    â”‚   â””â”€â”€ build/               # Generated documentation
    â”œâ”€â”€ src/                     # Your source code
    â””â”€â”€ pyproject.toml          # Project configuration

Configuration
-------------

The generated ``conf.py`` uses our shared configuration system. To customize, edit ``docs/source/conf.py``:

.. code-block:: python

    # Add custom extensions
    extensions.append("sphinx_click")
    
    # Change theme
    html_theme = "sphinx_rtd_theme"
    
    # Add custom CSS
    html_css_files = ["custom.css"]

Common Commands
---------------

.. code-block:: bash

    # Initialize with all sections
    pydevelop-docs init --with-examples --with-tutorials --with-guides
    
    # Build specific package (monorepo)
    pydevelop-docs build --package my-package
    
    # Clean all build artifacts
    pydevelop-docs clean
    
    # Check for issues
    pydevelop-docs doctor

Troubleshooting
---------------

**Import Errors**
    Ensure your package is installed::
    
        pip install -e .

**Missing API Documentation**
    Check ``autoapi_dirs`` in ``conf.py`` points to your source code.

**Build Warnings**
    Run with ``--keep-going`` to see all issues::
    
        poetry run sphinx-build -b html docs/source docs/build -W --keep-going

Next Steps
----------

- :doc:`/guides/configuration` - Customize your documentation
- :doc:`/tutorials/first_steps` - Detailed walkthrough
- :doc:`/examples/index` - See real examples
- :doc:`/cli/commands` - CLI reference

Getting Help
------------

{# djlint:off H025 #}
- `Documentation <https://pydevelop-docs.readthedocs.io>`_
- `GitHub Issues <https://github.com/{{ github_org|default('org') }}/{{ github_repo|default('repo') }}/issues>`_
- `Discussions <https://github.com/{{ github_org|default('org') }}/{{ github_repo|default('repo') }}/discussions>`_
{# djlint:on #}

Happy documenting! ðŸš€