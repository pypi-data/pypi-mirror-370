[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-vcs", "hatchling", "jsonschema-gentypes", "nbformat" ]

[project]
name = "nbformat-types"
description = "Types for notebook formats."
readme = "README.rst"
license = "BSD-3-Clause"
authors = [ { name = "Philipp Angerer" } ]
requires-python = ">=3.11"
classifiers = [
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [ "version" ]

dependencies = [  ]
optional-dependencies.test = [ "pytest" ]
#Documentation = "https://???.readthedocs.io/"
urls.Source = "https://github.com/flying-sheep/nbformat-types"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.custom]
dir = "src/nbformat_types/versions"

[tool.hatch.envs.default]
dependencies = [
  "hatchling",
  "jsonschema-gentypes",
  "nbformat",
]

[tool.hatch.envs.hatch-test]
default-args = [  ]
features = [ "test" ]
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.11", "3.13" ]

[tool.ruff]
src = [ "src" ]

format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
  "C408",   # dict() syntax is preferable for dicts used as kwargs
  "COM812", # Formatter handles trailing commas
  "D203",   # No blank line before class body instead of one (D211)
  "D213",   # Multi-line docstring summary should start at the first line, not second (D212)
  "INP001", # Pytest directories are not namespace packages
  "TID252", # We use relative imports from parent modules
]
lint.per-file-ignores."tests/*" = [ "D100", "D103", "S101" ]
lint.allowed-confusables = [ "×", "–", "’", "α" ]
lint.flake8-type-checking.exempt-modules = [  ]
lint.flake8-type-checking.strict = true
lint.isort.known-first-party = [ "nbformat_types" ]
lint.isort.required-imports = [ "from __future__ import annotations" ]

[tool.pytest.ini_options]
addopts = [
  "--import-mode=importlib",
  "--strict-markers",
  "--doctest-modules",
  "--pyargs",
]
filterwarnings = [ "error" ]
testpaths = [ "nbformat_types", "./tests" ]
xfail_strict = true
