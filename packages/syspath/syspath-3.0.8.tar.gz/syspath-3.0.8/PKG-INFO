Metadata-Version: 2.4
Name: syspath
Version: 3.0.8
Summary: Easily add common paths to sys.path
Author-email: Albert Wang <git@albertyw.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/albertyw/syspath
Keywords: python,path,utility
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Topic :: Software Development
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: test
Requires-Dist: coverage==7.10.4; extra == "test"
Requires-Dist: ruff==0.12.9; extra == "test"
Requires-Dist: mypy==1.17.1; extra == "test"
Dynamic: license-file

SysPath
=======

[![PyPI](https://img.shields.io/pypi/v/syspath.svg)]( https://pypi.python.org/pypi/syspath/)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/syspath)
![PyPI - License](https://img.shields.io/pypi/l/syspath)

[![Build Status](https://drone.albertyw.com/api/badges/albertyw/syspath/status.svg)](https://drone.albertyw.com/albertyw/syspath)
[![Maintainability](https://qlty.sh/gh/albertyw/projects/syspath/maintainability.svg)](https://qlty.sh/gh/albertyw/projects/syspath)
[![Code Coverage](https://qlty.sh/gh/albertyw/projects/syspath/coverage.svg)](https://qlty.sh/gh/albertyw/projects/syspath)


SysPath is a package to easily set common paths into `sys.path`. Instead
of having to do a lot of path manipulation to properly import files, a
file can import from SysPath instead.

Installation
------------

```bash
pip install syspath
```

Usage
-----

To append the current file's directory to `sys.path`:

```python
import syspath
syspath.append_current_path()
# or
from syspath import current_path
```

To append the current file's parent directory to `sys.path`:

```python
import syspath
syspath.append_parent_path()
# or
from syspath import parent_path
```

To append the current file's git repository root to `sys.path`:

```python
import syspath
syspath.append_git_root()
# or
from syspath import git_root
```

Each of the shortcut modules also provide a `path` variable that can be
used to get the path added.

Development
-----------

```bash
pip install -e .[test]
ruff check .
mypy .
coverage run -m unittest
coverage report -m
ruff check .
```

Publishing
----------

1.  Update `CHANGELOG.md`
2.  Update `syspath/__version__.py`
3.  Commit, tag with the version number, and push
