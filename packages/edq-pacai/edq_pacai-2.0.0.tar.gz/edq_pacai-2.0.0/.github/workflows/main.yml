name: Main

on:
  - push
  - pull_request

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        os: ['ubuntu-22.04', 'ubuntu-24.04', 'macos-13', 'macos-14', 'macos-15', 'windows-2022', 'windows-2025']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Dependencies
        shell: bash
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Check Python Version Compatibility
        shell: bash
        run: scripts/check_python_version.sh

      - name: Check Types
        shell: bash
        run: ./scripts/check_types.sh

      - name: Check Lint
        shell: bash
        run: ./scripts/check_lint.sh

      - name: Run Tests
        shell: bash
        run: ./scripts/run_tests.sh

      - name: Generate Documentation
        if: runner.os == 'Linux'
        shell: bash
        run: ./scripts/gen_docs.sh

  docs:
    needs: test
    if: ${{ github.event_name == 'push' && github.repository_owner == 'edulinq' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    strategy:
      matrix:
        python-version: ['3.11']
        os: ['ubuntu-24.04']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Dependencies
        shell: bash
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build Site
        shell: bash
        run: |
            git checkout main
            ./.ci/build_site.sh

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '._site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy:
    needs: docs

    strategy:
      matrix:
        python-version: ['3.11']
        os: ['ubuntu-24.04']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Python Dependencies
        shell: bash
        run: pip3 install -r requirements.txt -r requirements-dev.txt

      - name: Deploy
        uses: casperdcl/deploy-pypi@10cf4cd83fc885003a8d4f37f93a5a0f0fc2d2f4  # v2.4.1
        with:
          build: --sdist --wheel --outdir dist .
          # Only upload if a tag is pushed (otherwise just build & check).
          upload: ${{ github.event_name == 'push' && github.repository_owner == 'edulinq' && startsWith(github.event.ref, 'refs/tags') }}
          password: ${{ secrets.PYPI_TOKEN }}
