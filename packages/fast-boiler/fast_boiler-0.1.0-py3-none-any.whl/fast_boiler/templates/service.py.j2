from app.repositories.{{ name }}_repo import {{ ClassName }}Repository
from app.schemas.{{ name }}_schema import {{ ClassName }}Create
from app.models.{{ name }}_model import {{ ClassName }}

class {{ ClassName }}Service:
    def __init__(self, repo: {{ ClassName }}Repository):
        self.repo = repo

    # UPDATED: All methods are now async
    async def get_{{ name }}_by_id(self, {{ name }}_id: int) -> {{ ClassName }} | None:
        return await self.repo.get_by_id({{ name }}_id)

    async def create_{{ name }}(self, payload: {{ ClassName }}Create) -> {{ ClassName }}:
        # Business logic can go here before creation
        return await self.repo.create(payload)