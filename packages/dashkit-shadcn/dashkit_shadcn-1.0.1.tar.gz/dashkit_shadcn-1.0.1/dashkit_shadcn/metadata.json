{"src/ts/components/charts/AreaChart.tsx":{"displayName":"AreaChart","description":"AreaChart renders an area chart using shadcn/ui styling and Recharts.","props":{"id":{"description":"The ID used to identify this component in Dash callbacks.","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"className":{"description":"Custom CSS class for the container","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"config":{"description":"Chart configuration object with data key mappings and colors","required":false,"defaultValue":{"value":"{}","computed":false},"type":{"name":"union","value":[{"name":"object","raw":"object"}],"raw":"object | undefined"}},"data":{"description":"Array of data points for the chart","required":false,"defaultValue":{"value":"[]","computed":false},"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"object","raw":"object"},"raw":"object[]"}],"raw":"object[] | undefined"}},"dataKey":{"description":"The key in data objects to use for the area values","required":false,"defaultValue":{"value":"'value'","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"xAxisKey":{"description":"The key in data objects to use for x-axis labels","required":false,"defaultValue":{"value":"'name'","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"yAxisKey":{"description":"The key in data objects to use for y-axis labels","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"showXAxis":{"description":"Whether to show the x-axis","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showYAxis":{"description":"Whether to show the y-axis","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showGrid":{"description":"Whether to show the grid","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showTooltip":{"description":"Whether to show tooltips","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showLegend":{"description":"Whether to show the legend","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"stackId":{"description":"Stack ID for stacked areas","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"fillOpacity":{"description":"Fill opacity for the area","required":false,"defaultValue":{"value":"0.6","computed":false},"type":{"name":"union","value":[{"name":"number","raw":"number"}],"raw":"number | undefined"}},"strokeWidth":{"description":"Stroke width for the area line","required":false,"defaultValue":{"value":"2","computed":false},"type":{"name":"union","value":[{"name":"number","raw":"number"}],"raw":"number | undefined"}},"curve":{"description":"Curve type for the area","required":false,"defaultValue":{"value":"'monotone'","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"style":{"description":"Custom styling","required":false,"type":{"name":"any","raw":"CSSProperties | undefined"}},"children":{"description":"Children components","required":false,"type":{"name":"node","raw":"ReactNode"}},"setProps":{"description":"Callback used by Dash to push prop changes from the client","required":false,"type":{"name":"union","value":[{"name":"func","raw":"(props: Partial<AreaChartProps>) => void"}],"raw":"((props: Partial<AreaChartProps>) => void) | undefined"}}},"isContext":false},"src/ts/components/charts/BarChart.tsx":{"displayName":"BarChart","description":"BarChart renders a bar chart using shadcn/ui styling and Recharts.","props":{"id":{"description":"The ID used to identify this component in Dash callbacks.","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"className":{"description":"Custom CSS class for the container","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"config":{"description":"Chart configuration object with data key mappings and colors","required":false,"defaultValue":{"value":"{}","computed":false},"type":{"name":"union","value":[{"name":"object","raw":"object"}],"raw":"object | undefined"}},"data":{"description":"Array of data points for the chart","required":false,"defaultValue":{"value":"[]","computed":false},"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"object","raw":"object"},"raw":"object[]"}],"raw":"object[] | undefined"}},"dataKey":{"description":"The key in data objects to use for the bar values","required":false,"defaultValue":{"value":"'value'","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"xAxisKey":{"description":"The key in data objects to use for x-axis labels","required":false,"defaultValue":{"value":"'name'","computed":false},"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"yAxisKey":{"description":"The key in data objects to use for y-axis labels","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"showXAxis":{"description":"Whether to show the x-axis","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showYAxis":{"description":"Whether to show the y-axis","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showGrid":{"description":"Whether to show the grid","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showTooltip":{"description":"Whether to show tooltips","required":false,"defaultValue":{"value":"true","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"showLegend":{"description":"Whether to show the legend","required":false,"defaultValue":{"value":"false","computed":false},"type":{"name":"any","raw":"boolean | undefined"}},"stackId":{"description":"Stack ID for stacked bars","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"radius":{"description":"Border radius for the bars","required":false,"defaultValue":{"value":"4","computed":false},"type":{"name":"union","value":[{"name":"number","raw":"number"}],"raw":"number | undefined"}},"maxBarSize":{"description":"Maximum bar size","required":false,"type":{"name":"union","value":[{"name":"number","raw":"number"}],"raw":"number | undefined"}},"style":{"description":"Custom styling","required":false,"type":{"name":"any","raw":"CSSProperties | undefined"}},"children":{"description":"Children components","required":false,"type":{"name":"node","raw":"ReactNode"}},"setProps":{"description":"Callback used by Dash to push prop changes from the client","required":false,"type":{"name":"union","value":[{"name":"func","raw":"(props: Partial<BarChartProps>) => void"}],"raw":"((props: Partial<BarChartProps>) => void) | undefined"}}},"isContext":false},"src/ts/components/charts/ChartContainer.tsx":{"displayName":"ChartContainer","description":"","props":{"id":{"description":"","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"className":{"description":"","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"}},"config":{"description":"","required":true,"type":{"name":"objectOf","value":{"name":"shape","value":{"label":{"description":"","required":false,"name":"node","raw":"ReactNode"},"icon":{"description":"","required":false,"name":"any","raw":"ComponentType<{}> | undefined"},"color":{"description":"","required":false,"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | undefined"},"theme":{"description":"","required":false,"name":"union","value":[{"name":"shape","value":{"light":{"description":"","required":true,"name":"string","raw":"string"},"dark":{"description":"","required":true,"name":"string","raw":"string"}},"raw":"{ light: string; dark: string; }"}],"raw":"{ light: string; dark: string; } | undefined"}},"raw":"{ label?: ReactNode; icon?: ComponentType<{}> | undefined; color?: string | undefined; theme?: { light: string; dark: string; } | undefined; }"},"raw":"ChartConfig"}},"children":{"description":"","required":true,"type":{"name":"shape","value":{"type":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"},{"name":"func","raw":"(props: any, deprecatedLegacyContext?: any) => ReactNode"},{"name":"func","raw":"new (props: any, deprecatedLegacyContext?: any) => Component<any, any, any>"}],"raw":"string | JSXElementConstructor<any>"},"props":{"description":"","required":true,"name":"any","raw":"any"},"key":{"description":"","required":true,"name":"union","value":[{"name":"string","raw":"string"}],"raw":"string | null"}},"raw":"ReactElement<any, string | JSXElementConstructor<any>>"}},"ref":{"description":"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@,see,,{@link ,https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs,}","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"func","raw":"(instance: HTMLDivElement | null) => void"}],"raw":"LegacyRef<HTMLDivElement> | undefined"}},"key":{"description":"","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"Key | null | undefined"}}},"isContext":false},"src/ts/components/charts/ChartLegend.tsx":{"displayName":"ChartLegend","description":"","props":{"ref":{"description":"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@,see,,{@link ,https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs,}","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"func","raw":"(instance: HTMLDivElement | null) => void"}],"raw":"LegacyRef<HTMLDivElement> | undefined"}},"key":{"description":"","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"Key | null | undefined"}}},"isContext":false},"src/ts/components/charts/ChartTooltip.tsx":{"displayName":"ChartTooltip","description":"","props":{"ref":{"description":"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@,see,,{@link ,https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs,}","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"func","raw":"(instance: HTMLDivElement | null) => void"}],"raw":"LegacyRef<HTMLDivElement> | undefined"}},"key":{"description":"","required":false,"type":{"name":"union","value":[{"name":"string","raw":"string"},{"name":"number","raw":"number"}],"raw":"Key | null | undefined"}}},"isContext":false}}