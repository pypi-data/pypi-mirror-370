name: Release to TestPyPI

on:
  push:
    branches: [ develop ]
    paths:
      - 'src/**'
      - 'pyproject.toml'
      - 'uv.lock'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run tests
      run: |
        uv run pytest tests/ -v
        uv run ruff check .
        uv run ruff format --check .

  test-release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    environment:
      name: testpypi
      url: https://test.pypi.org/p/claude-wrapper

    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Generate development version
      id: dev-version
      run: |
        # Install the package in development mode to get dynamic version
        uv sync --dev

        # Get the current dynamic version from hatch-vcs
        CURRENT_VERSION=$(uv run python -c "from claude_wrapper import __version__; print(__version__)")
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current dynamic version: $CURRENT_VERSION"

        # For TestPyPI, we want to ensure each push gets a unique version
        # The dynamic version already includes dev info from hatch-vcs
        # If it's already a dev version, we're good. If not, make it a dev version.
        if [[ "$CURRENT_VERSION" == *"dev"* ]]; then
          DEV_VERSION="$CURRENT_VERSION"
        else
          # Add dev suffix with timestamp and commit hash for uniqueness
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
          DEV_VERSION="${CURRENT_VERSION}.dev${TIMESTAMP}+${SHORT_SHA}"
        fi

        echo "dev_version=$DEV_VERSION" >> $GITHUB_OUTPUT
        echo "Final development version: $DEV_VERSION"

    - name: Build package
      run: uv build

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
        print-hash: true

    - name: Test installation from TestPyPI
      run: |
        # Wait a bit for TestPyPI to process the upload
        sleep 30

        # Create a fresh virtual environment and test installation
        python -m venv test_env
        source test_env/bin/activate

        # Install from TestPyPI with a timeout and allow pre-releases
        pip install --index-url https://test.pypi.org/simple/ \
                   --extra-index-url https://pypi.org/simple/ \
                   --pre \
                   --timeout 300 \
                   claude-wrapper==${{ steps.dev-version.outputs.dev_version }}

        # Basic smoke test
        python -c "from claude_wrapper import ClaudeClient; print('âœ“ Import successful')"

        # Test CLI (basic help command)
        claude-wrapper --help

        echo "âœ“ TestPyPI installation and basic functionality verified"

    - name: Create development release comment
      uses: actions/github-script@v7
      with:
        script: |
          const devVersion = '${{ steps.dev-version.outputs.dev_version }}';
          const testPypiUrl = `https://test.pypi.org/project/claude-wrapper/${devVersion}/`;

          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: |
              ðŸš€ **Development release published to TestPyPI**

              **Version:** `${devVersion}`
              **TestPyPI:** ${testPypiUrl}

              **Install for testing:**
              ```bash
              pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ --pre claude-wrapper==${devVersion}
              ```

              *This is an automated development release from the develop branch.*
          });
