name: Release to PyPI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'pyproject.toml'
      - 'uv.lock'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run tests
      run: |
        uv run pytest tests/ -v
        uv run ruff check .
        uv run ruff format --check .

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    environment:
      name: pypi
      url: https://pypi.org/p/claude-wrapper

    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for version detection

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Check if version changed
      id: version-check
      run: |
        # Install package to get dynamic version from hatch-vcs
        uv sync --dev

        # Get current dynamic version
        CURRENT_VERSION=$(uv run python -c "from claude_wrapper import __version__; print(__version__)")
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

        # Check if this version exists on PyPI
        PYPI_CHECK=$(curl -s "https://pypi.org/pypi/claude-wrapper/$CURRENT_VERSION/json" | jq -r '.info.version // "not_found"')

        if [ "$PYPI_CHECK" == "not_found" ]; then
          echo "should_release=true" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION not found on PyPI, proceeding with release"
        else
          echo "should_release=false" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION already exists on PyPI, skipping release"
        fi

    - name: Build package
      if: steps.version-check.outputs.should_release == 'true'
      run: uv build

    - name: Publish to PyPI
      if: steps.version-check.outputs.should_release == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true

    - name: Create GitHub Release
      if: steps.version-check.outputs.should_release == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-check.outputs.current_version }}
        release_name: Release v${{ steps.version-check.outputs.current_version }}
        body: |
          ## Changes

          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

          ## Installation

          ```bash
          pip install claude-wrapper==${{ steps.version-check.outputs.current_version }}
          ```
        draft: false
        prerelease: false
