Metadata-Version: 2.3
Name: django-user-defined-fields
Version: 0.0.23
Summary: A Django app for user defined fields
License: MIT
Keywords: django,custom,fields,json
Author: Aidan Lister
Author-email: aidan@uptickhq.com
Requires-Python: >=3.7,<4
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Dist: Django (>=2.2.24)
Project-URL: Homepage, https://github.com/uptick/django-user-defined-fields/
Project-URL: Repository, https://github.com/uptick/django-user-defined-fields/
Description-Content-Type: text/markdown

# django-user-defined-fields

[![PyPI version](https://badge.fury.io/py/django-user-defined-fields.svg)](https://badge.fury.io/py/django-user-defined-fields)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

Django Used Defined Fields is a simple way to allow your users to add extra fields to your models, based on JSONField.


## Installation

Standard pip install:

```bash
pip install django-user-defined-fields
```


## Quickstart

```python
from userdefinedfields.models import ExtraFieldsJSONField


class Example(models.Model):
  extra_fields = ExtraFieldsJSONField()

```

## Tests
Run tests in example directory with `python manage.py test library`


# Settings
```
USERDEFINEDFIELDS_INPUT_CLASSES = 'd-none'  # hide the textarea if you're using a frontend solution
```

