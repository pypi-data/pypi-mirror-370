{
  "version": 6,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 25,
    "patch": 2
  },
  "configurePresets": [
    {
      "name": "common",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "build"
    },
    {
      "name": "common-default-generator",
      "hidden": true,
      "binaryDir": "build"
    },
    {
      "name": "common-linux",
      "hidden": true,
      "inherits": "common"
    },
    {
      "name": "common-windows",
      "inherits": "common",
      "hidden": true
    },
    {
      "name": "gcc",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      },
      "hidden": true
    },
    {
      "name": "clang",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      },
      "hidden": true
    },
    {
      "name": "clang-cuda",
      "cacheVariables": {
        "CMAKE_CUDA_COMPILER": "clang++",
        "CMAKE_CUDA_FLAGS_INIT": "-ansi"
      },
      "hidden": true
    },
    {
      "name": "msvc",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_CXX_COMPILER": "cl"
      }
    },
    {
      "name": "sanitizer-address",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fsanitize=address"
      }
    },
    {
      "name": "sanitizer-leak",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fsanitize=leak"
      }
    },
    {
      "name": "sanitizer-memory",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fsanitize=memory"
      }
    },
    {
      "name": "sanitizer-thread",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fsanitize=thread"
      },
      "hidden": true
    },
    {
      "name": "sanitizer-undefined",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fsanitize=undefined"
      },
      "hidden": true
    },
    {
      "name": "coverage",
      "cacheVariables": {
        "ENABLE_TEST_COVERAGE": "ON"
      },
      "hidden": true
    },
    {
      "name": "debug",
      "inherits": [
        "common"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "release",
      "inherits": [
        "common"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "ReleaseWithDebInfo"
      }
    },
    {
      "name": "release-default-generator",
      "inherits": [
        "common-default-generator"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "ReleaseWithDebInfo"
      }
    },
    {
      "name": "linux-debug",
      "hidden": true,
      "inherits": [
        "common-linux",
        "debug"
      ]
    },
    {
      "name": "linux-release",
      "hidden": true,
      "inherits": [
        "common-linux",
        "release"
      ]
    },
    {
      "name": "linux-gcc-debug",
      "inherits": [
        "linux-debug",
        "gcc"
      ]
    },
    {
      "name": "linux-gcc-release",
      "inherits": [
        "linux-release",
        "gcc"
      ]
    },
    {
      "name": "linux-clang-debug",
      "inherits": [
        "linux-debug",
        "clang"
      ]
    },
    {
      "name": "linux-clang-host-device-debug",
      "inherits": [
        "linux-debug",
        "clang",
        "clang-cuda"
      ]
    },
    {
      "name": "linux-clang-release",
      "inherits": [
        "linux-release",
        "clang"
      ]
    },
    {
      "name": "linux-clang-host-device-release",
      "inherits": [
        "linux-release",
        "clang",
        "clang-cuda"
      ]
    },
    {
      "name": "linux-gcc-debug-sanitizer-address",
      "inherits": [
        "linux-gcc-debug",
        "sanitizer-address"
      ]
    },
    {
      "name": "linux-gcc-debug-sanitizer-ub",
      "inherits": [
        "linux-gcc-debug",
        "sanitizer-undefined"
      ]
    },
    {
      "name": "linux-gcc-debug-sanitizer-ub-coverage",
      "inherits": [
        "linux-gcc-debug-sanitizer-ub",
        "coverage"
      ]
    },
    {
      "name": "linux-gcc-debug-sanitizer-thread",
      "inherits": [
        "linux-gcc-debug",
        "sanitizer-thread"
      ]
    },
    {
      "name": "linux-gcc-debug-sanitizer-address-ub",
      "inherits": [
        "linux-gcc-debug-sanitizer-address",
        "sanitizer-undefined"
      ]
    },
    {
      "name": "linux-clang-debug-sanitizer-address",
      "inherits": [
        "linux-clang-debug",
        "sanitizer-address"
      ]
    },
    {
      "name": "linux-clang-debug-sanitizer-ub",
      "inherits": [
        "linux-clang-debug",
        "sanitizer-undefined"
      ]
    },
    {
      "name": "linux-clang-debug-sanitizer-thread",
      "inherits": [
        "linux-clang-debug",
        "sanitizer-thread"
      ]
    },
    {
      "name": "linux-clang-debug-sanitizer-address-ub",
      "inherits": [
        "linux-clang-debug-sanitizer-address",
        "sanitizer-undefined"
      ]
    }
  ],
  "buildPresets": [
    {
      "name": "debug",
      "configurePreset": "debug",
      "displayName": "Build in debug mode"
    },
    {
      "name": "release",
      "displayName": "Build in release mode",
      "configurePreset": "release"
    }
  ],
  "testPresets": [
    {
      "name": "common",
      "hidden": true,
      "execution": {
        "stopOnFailure": true
      },
      "output": {
        "outputOnFailure": true
      }
    },
    {
      "name": "sanitizer-address",
      "environment": {
        "ASAN_OPTIONS": "protect_shadow_gap=0"
      },
      "hidden": true
    },
    {
      "name": "debug",
      "configurePreset": "debug",
      "inherits": [
        "common"
      ]
    },
    {
      "name": "debug-sanitizer-address",
      "inherits": [
        "debug",
        "sanitizer-address"
      ]
    }
  ],
  "workflowPresets": [
    {
      "name": "dev",
      "description": "Developer workflow without installation",
      "steps": [
        {
          "type": "configure",
          "name": "debug"
        },
        {
          "type": "build",
          "name": "debug"
        },
        {
          "type": "test",
          "name": "debug"
        }
      ]
    },
    {
      "name": "release",
      "description": "Release build without installation",
      "steps": [
        {
          "type": "configure",
          "name": "release"
        },
        {
          "type": "build",
          "name": "release"
        }
      ]
    }
  ]
}
