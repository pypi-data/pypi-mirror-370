cmake_minimum_required(VERSION 3.8 FATAL_ERROR)


# check type sizes
include(CheckTypeSize)
check_type_size("int64_t" SIZEOF_INT64_T)
check_type_size("long" SIZEOF_LONG)
check_type_size("long long" SIZEOF_LONG_LONG)
if(SIZEOF_INT64_T EQUAL "8")
  set(COIN_INT64_T "int64_t")
elseif(SIZEOF_LONG EQUAL "8")
  set(COIN_INT64_T "long")
elseif(SIZEOF_LONG_LONG EQUAL "8")
  set(COIN_INT64_T "long long")
else()
  message(FATAL_ERROR "Can't find suitable int64_t")
endif()
check_type_size("uint64_t" SIZEOF_UINT64_T)
check_type_size("unsigned long" SIZEOF_UNSIGNED_LONG)
check_type_size("unsigned long long" SIZEOF_UNSIGNED_LONG_LONG)
if(SIZEOF_UINT64_T EQUAL "8")
  set(COIN_UINT64_T "uint64_t")
elseif(SIZEOF_UNSIGNED_LONG EQUAL "8")
  set(COIN_UINT64_T "unsigned long")
elseif(SIZEOF_UNSIGNED_LONG_LONG EQUAL "8")
  set(COIN_UINT64_T "unsigned long long")
else()
  message(FATAL_ERROR "Can't find suitable uint64_t")
endif()
check_type_size("intptr_t" SIZEOF_INT_PTR)
set(COIN_INTPTR_T "intptr_t")

#check endianess
include(TestBigEndian)
test_big_endian(isBigEndian)
if(isBigEndian)
	set(__BYTE_ORDER "__BIG_ENDIAN")
else()
	set(__BYTE_ORDER "__LITTLE_ENDIAN")
endif()

# check includes
include(CheckIncludeFile)
include(CheckIncludeFileCXX)
check_include_file_CXX(cfloat HAVE_CFLOAT)
check_include_file_CXX(cieeefp HAVE_CIEEEFP)
check_include_file_CXX(cmath HAVE_CMATH)
check_include_file_CXX(cinttypes HAVE_CINTTYPES)
check_include_file(stdlib.h HAVE_STDLIB_H)
check_include_file(stdint.h HAVE_STDINT_H)
check_include_file(stdint.h COINUTILS_HAS_STDINT_H)
check_include_file(cstdint.h COINUTILS_HAS_CSTDINT)
check_include_file(cstdint.h HAVE_CSTDINT)
check_include_file(memory.h HAVE_MEMORY_H)
check_include_file(readline/readline.h HAVE_READLINE_READLINE_H)
check_include_file(strings.h HAVE_STRINGS_H)
check_include_file(string.h  HAVE_STRING_H)
check_include_file(sys/stat.h HAVE_SYS_STAT_H)
check_include_file(sys/types.h HAVE_SYS_TYPES_H)
check_include_file(dlfcn.h HAVE_DLFCN_H)
check_include_file(inttypes.h HAVE_INTTYPES_H)
check_include_file(unistd.h HAVE_UNISTD_H)
check_include_file(float.h HAVE_FLOAT_H)
check_include_file(ieeefp.h HAVE_IEEEFP_H)
check_include_file(endian.h HAVE_ENDIAN_H)
check_include_file_CXX(math HAVE_MATH_H)
check_include_file(endian.h HAVE_ENDIAN_H)
check_include_file(windows.h HAVE_WINDOWS_H)
check_include_file(zlib.h HAVE_ZLIB_H)

# check functions
include(CheckFunctionExists)
check_function_exists(finite COIN_C_FINITE)
check_function_exists(std::isnan COIN_C_ISNAN)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/configHclp.h.in ${CLP_SRCDIR}/config.h)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/configHcoinutils.h.in ${CLP_COINDIR}/config.h)