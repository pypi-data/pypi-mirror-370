[project]
authors = [{ name = "AJ Slater", email = "aj@slater.net" }]
name = "bochord"
readme = "README.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
]
dependencies = ["termcolor~=3.0", "typing-extensions~=4.13"]
description = "Backup iCloud Books to usable ePubs"
keywords = ["epub", "iCloud", "book", "backup"]
license = "GPL-3.0-only"
requires-python = "<4.0,>=3.10"
version = "1.2.2"

[project.urls]
News = "https://github.com/ajslater/"
"Report Issues" = "https://github.com/ajslater/issues/"
homepage = "https://github.com/ajslater/bochord"
repository = "https://github.com/ajslater/bochord"
documentation = "https://github.com/ajslater/bochord"

[project.scripts]
bochord = "bochord.cli:main"

[dependency-groups]
dev = [
  "basedpyright~=1.29.1",
  "codespell~=2.4.0",
  "coverage[toml]~=7.0",
  "neovim~=0.3.1",
  "pyclean~=3.1.0",
  "pytest-cov~=6.0.0",
  "pytest-gitignore~=1.3",
  "radon[toml]~=6.0.1",
  "ruff~=0.12",
  "toml-cli~=0.8.0",
  "ty>=0.0.1a18",
  "types-python-dateutil~=2.9",
  "vulture~=2.3",
]

[build-system]
requires = ["uv_build~=0.8.7"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = ""
source-include = [
  ".circlci/**",
  ".*ignore",
  ".shellcheckrc",
  "bin/**",
  "eslint.config.js",
  "frontend/**",
  "Makefile",
  "package-lock.json",
  "package.json",
  "tests/**",
  "uv.lock",
  "vulture_ignorelist.py",
]
source-exclude = ["**/*\\~", "**/.DS_Store"]
wheel-exclude = []

[tool.basedpyright]
exclude = [
  "**/.*",
  "**/__pycache__",
  "**/node_modules",
  "dist",
  "test-results",
  "typings",
  "vulture_whitelist.py",
]
pythonVersion = "3.10"
failOnWarnings = false
reportAny = false
reportExplicitAny = false
reportImportCycles = true
reportIncompatibleUnannotatedOverride = true
reportMissingParameterType = false
reportMissingTypeArgument = false
reportPrivateUsage = false # ruff does this
reportUnannotatedClassAttribute = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedCallResult = false
reportUnusedParameter = false # ruff does this 
reportMissingTypeStubs = false

[tool.codespell]
skip = ".*,*~,./dist,./node_modules,./package.json,./package-lock.json,./uv.lock,./test-results"
builtin = 'clear,rare,code'
check-hidden = true
ignore-words-list = 'thead,ro,jupyter,searched,ws'

[tool.coverage.html]
directory = "test-results/coverage"

[tool.coverage.run]
source = [""]
branch = true
concurrency = ["multiprocessing"]
omit = [
  "*/.*",
  "*__pycache__*",
  "dist/*",
  "node_modules/*",
  "test-results/*",
  "typings/*",
]

[tool.pytest.ini_options]
addopts = """
    --junit-xml=test-results/pytest/results.xml
    -ra
    --strict-config
    --strict-markers
    --cov
    --cov-append
    --cov-report=html
    --cov-report=term
"""
testpaths = "tests"
junit_family = "xunit2"

[tool.radon]
exclude = "*~,.*,.*/*,__pycache__/*,dist/*,node_modules/*,test-results/*,typings/*"
target-version = "py310"

[tool.ruff]
extend-exclude = ["**/.*", "**/__pycache__", "dist", "test-results", "typings"]

[tool.ruff.lint]
extend-ignore = [
  "BLE001",  # catch bare exception
  "COM812",  # missing trailing comma
  "COM819",  # prohibit trailing comma
  "D203",    # blank line before class docstring
  "D206",    # formatted
  "D212",    # first line multi line docstring.
  "E111",    # formatted
  "E114",    # formatted
  "E117",    # over-indented
  "E501",    # 88 char line
  "FBT001",  # boolean params
  "ISC001",  # formatted
  "PERF203", # try block in loop
  "S101",    # assert
  "W191",    # formatted
]
extend-select = [
  "A",
  # "AIR",
  # "ANN",
  "ARG",
  "ASYNC",
  "B",
  "B9",
  "BLE",
  "C",
  "C4",
  "C90",
  "COM",
  # "CPY",
  "D",
  "DJ",
  # "DOC",
  "DTZ",
  "E",
  "EM",
  "ERA",
  "EXE",
  "F",
  "FA",
  # "FAST",
  "FBT",
  "FIX",
  "FLY",
  # "FURB", # Preview 0.7.4
  # "G",
  "I",
  "ICN",
  "INP",
  "INT",
  "ISC",
  "LOG",
  # "PD",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  # "Q", Formatted
  "N",
  # NPY,
  "RET",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "SLF",
  "SLOT",
  "T10",
  "T20",
  "TC",
  "TCH",
  # "TD",
  "TID",
  "TRY",
  "UP",
  "W",
  "YTT",
]
external = ["V101"]
task-tags = ["TODO", "FIXME", "XXX", "http", "HACK"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["SLF001", "T201", "T203"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.vulture]
exclude = [
  "*/.*",
  "*/__pycache__*",
  "*/node_modules*",
  "dist/",
  "test-results/",
  "typings/",
]
min_confidence = 61
sort_by_size = true
