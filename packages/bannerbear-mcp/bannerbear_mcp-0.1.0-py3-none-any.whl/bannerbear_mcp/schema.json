{
  "openapi": "3.1.0",
  "info": {
    "title": "Bannerbear API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.bannerbear.com"
    }
  ],
  "paths": {
    "/v2/templates": {
      "post": {
        "summary": "Create a blank template",
        "description": "Create a new blank template on Bannerbear.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the new blank template."
                  },
                  "width": {
                    "type": "integer",
                    "description": "The width of the new blank template."
                  },
                  "height": {
                    "type": "integer",
                    "description": "The height of the new blank template."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Any metadata that you need to store e.g. ID of a record in your DB."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of tags for this template."
                  }
                },
                "required": [
                  "name",
                  "width",
                  "height"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all templates",
        "description": "List templates in the project on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page of results you would like to retrieve. Defaults to 1."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Number of items per page (max 100). Defaults to 25."
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "List items only with this tag."
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "List items that partially match this name."
          },
          {
            "name": "extended",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true to return an extended response including current layer defaults."
          }
        ]
      }
    },
    "/v2/templates/{uid}": {
      "get": {
        "summary": "Retrieve a template",
        "description": "Retrieve a single template by UID on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The template uid that you want to retrieve."
          },
          {
            "name": "extended",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true to return an extended response including current layer defaults."
          }
        ]
      },
      "patch": {
        "summary": "Update a template",
        "description": "Update a template's basic attributes on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The template uid that you want to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the template."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Any metadata that you need to store e.g. ID of a record in your DB."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of tags for this template."
                  },
                  "width": {
                    "type": "integer",
                    "description": "The new width of the template."
                  },
                  "height": {
                    "type": "integer",
                    "description": "The new height of the template."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a template",
        "description": "Permanently delete a template from your project on Bannerbear. Cannot be undone.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The template uid that you want to delete."
          }
        ]
      }
    },
    "/v2/images": {
      "post": {
        "summary": "Create an image",
        "description": "Generate an image by applying modifications to a template on Bannerbear. API responds with 202 Accepted, image is queued to generate. Supports synchronous generation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string",
                    "description": "The template uid that you want to use."
                  },
                  "modifications": {
                    "type": "array",
                    "description": "A list of modifications you want to make.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the layer you want to change."
                        },
                        "color": {
                          "type": "string",
                          "description": "Color in hex format e.g. \"#FF0000\"."
                        },
                        "text": {
                          "type": "string",
                          "description": "Replacement text you want to use."
                        },
                        "background": {
                          "type": "string",
                          "description": "Background color in hex format e.g. \"#FF0000\"."
                        },
                        "background_border_color": {
                          "type": "string",
                          "description": "Background border color in hex format e.g. \"#FF0000\"."
                        },
                        "font_family": {
                          "type": "string",
                          "description": "Change the font."
                        },
                        "text_align_h": {
                          "type": "string",
                          "description": "Horizontal alignment (left, center, right)."
                        },
                        "text_align_v": {
                          "type": "string",
                          "description": "Vertical alignment (top, center, bottom)."
                        },
                        "font_family_2": {
                          "type": "string",
                          "description": "Change the secondary font."
                        },
                        "color_2": {
                          "type": "string",
                          "description": "Change the secondary font color."
                        },
                        "image_url": {
                          "type": "string",
                          "description": "Change the image."
                        },
                        "effect": {
                          "type": "string",
                          "description": "Change the effect."
                        },
                        "anchor_x": {
                          "type": "string",
                          "description": "Change the anchor point (left, center, right)."
                        },
                        "anchor_y": {
                          "type": "string",
                          "description": "Change the anchor point (top, center, bottom)."
                        },
                        "fill_type": {
                          "type": "string",
                          "description": "Change the fill type (fill, fit)."
                        },
                        "disable_face_detect": {
                          "type": "boolean",
                          "description": "Set to true to disable face detect for this request."
                        },
                        "disable_smart_crop": {
                          "type": "boolean",
                          "description": "Set to true to disable smart crop for this request."
                        },
                        "chart_data": {
                          "type": "string",
                          "description": "Comma-delimited list of numbers to use as data."
                        },
                        "rating": {
                          "type": "integer",
                          "description": "Number from 0 to 100 to use as the rating."
                        },
                        "target": {
                          "type": "string",
                          "description": "URL or text to use as the code target (for QR Code) or clickable link in PDF."
                        },
                        "bar_code_data": {
                          "type": "string",
                          "description": "Text to encode as a bar code."
                        },
                        "gradient": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Fill with gradient e.g. [\"#000\",\"#FFF\"]."
                        },
                        "shadow": {
                          "type": "string",
                          "description": "Add a shadow e.g. \"5px 5px 0 #CCC\"."
                        },
                        "border_width": {
                          "type": "integer",
                          "description": "Width of the object border."
                        },
                        "border_color": {
                          "type": "string",
                          "description": "Border color in hex format e.g. \"#FF0000\"."
                        },
                        "shift_x": {
                          "type": "integer",
                          "description": "Shift layer along the x axis."
                        },
                        "shift_y": {
                          "type": "integer",
                          "description": "Shift layer along the y axis."
                        },
                        "hide": {
                          "type": "boolean",
                          "description": "Set to true to hide a layer."
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "A url to POST the full Image object to upon rendering completed."
                  },
                  "transparent": {
                    "type": "boolean",
                    "description": "Render a PNG with a transparent background. Default is false."
                  },
                  "render_pdf": {
                    "type": "boolean",
                    "description": "Render a PDF. This feature costs 3x quota."
                  },
                  "template_version": {
                    "type": "integer",
                    "description": "Create image based on a specific version of the template."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Any metadata that you need to store e.g. ID of a record in your DB."
                  }
                },
                "required": [
                  "template",
                  "modifications"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all images",
        "description": "Lists images inside a project on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page of results you would like to retrieve."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Number of items per page (max 100). Defaults to 25."
          }
        ]
      }
    },
    "/v2/images/{uid}": {
      "get": {
        "summary": "Retrieve an image",
        "description": "Retrieve a single Image object referenced by its unique ID on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The image uid that you want to retrieve."
          }
        ]
      }
    },
    "/v2/video_templates": {
      "post": {
        "summary": "Create a video template",
        "description": "Create a new video template on Bannerbear.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string",
                    "description": "The image template on which to base this video template."
                  },
                  "render_type": {
                    "type": "string",
                    "description": "The Build Pack to use: overlay, transcribe, or multi_overlay"
                  },
                  "approval_required": {
                    "type": "boolean",
                    "description": "Whether to require approval before rendering (only applies to the transcribe Build Pack)"
                  },
                  "transcription_layer_name": {
                    "type": "string",
                    "description": "Text layer for transcriptions (only applies to the transcribe Build Pack)"
                  }
                },
                "required": [
                  "template",
                  "render_type"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List video templates",
        "description": "List all video templates on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page of results you would like to retrieve. The API returns 25 items per page."
          }
        ]
      }
    },
    "/v2/video_templates/{uid}": {
      "get": {
        "summary": "Retrieve a video template",
        "description": "Retrieve a single video template object by UID on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The video template uid you want to retrieve."
          }
        ]
      }
    },
    "/v2/videos": {
      "post": {
        "summary": "Create a video",
        "description": "Generate a video with static overlays or multiple frames overlays on Bannerbear.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "video_template": {
                    "type": "string",
                    "description": "The video_template ID to use."
                  },
                  "input_media_url": {
                    "type": "string",
                    "description": "URL of the base video to overlay."
                  },
                  "modifications": {
                    "type": "array",
                    "description": "List of modifications to apply (static overlays).",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The layer name to modify."
                        },
                        "text": {
                          "type": "string",
                          "description": "Replacement text."
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "frames": {
                    "type": "array",
                    "description": "Multiple frames of modifications displayed sequentially.",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Layer name."
                          },
                          "text": {
                            "type": "string",
                            "description": "Replacement text."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "trim_to_length_in_seconds": {
                    "type": "integer",
                    "description": "Trim video to this length (seconds)."
                  }
                },
                "required": [
                  "video_template",
                  "input_media_url"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List videos",
        "description": "List of video objects on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "description": "The page of results you would like to retrieve. The API returns 25 items per page."
          }
        ]
      },
      "patch": {
        "summary": "Update a video",
        "description": "Update a video object on Bannerbear, e.g., edit transcription, approve to render.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "The video uid to update."
                  },
                  "transcription": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Replacement transcription lines."
                  },
                  "approved": {
                    "type": "boolean",
                    "description": "Set to true to approve the video and start rendering."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/videos/{uid}": {
      "get": {
        "summary": "Retrieve a video",
        "description": "Fetch a video object by its unique identifier on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The video uid to retrieve."
          }
        ]
      }
    },
    "/v2/screenshots": {
      "post": {
        "summary": "Create a screenshot",
        "description": "Generate a screenshot of a website with specified dimensions on Bannerbear.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The website URL to capture."
                  },
                  "width": {
                    "type": "integer",
                    "description": "Width of the screenshot."
                  },
                  "height": {
                    "type": "integer",
                    "description": "Height of the screenshot."
                  },
                  "mobile": {
                    "type": "boolean",
                    "description": "Use mobile user agent. Default is false."
                  },
                  "language": {
                    "type": "string",
                    "description": "Set the browser language using a two-letter ISO 639-1 code. Only languages using Latin, Japanese, Korean, Chinese and Thai alphabets are supported."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Any metadata that you need to store e.g. ID of a record in your DB."
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "A URL to POST the full Screenshot object upon completion."
                  }
                },
                "required": [
                  "url"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List screenshots",
        "description": "Retrieve a list of screenshots on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results you would like to retrieve. The API returns 25 items per page."
          }
        ]
      }
    },
    "/v2/screenshots/{uid}": {
      "get": {
        "summary": "Retrieve a screenshot",
        "description": "Retrieve a screenshot object by its uid on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The screenshot uid to retrieve."
          }
        ]
      }
    },
    "/v2/template_sets": {
      "post": {
        "summary": "Create a template set",
        "description": "Create a new template set from existing templates on Bannerbear",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A name for this template set."
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of template UIDs to add to this template set."
                  }
                },
                "required": [
                  "templates"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "List template sets",
        "description": "List all template sets on Bannerbear.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The page of results you would like to retrieve. The API returns 25 items per page."
          },
          {
            "name": "extended",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true to return an extended response including current layer defaults."
          }
        ]
      }
    },
    "/v2/template_sets/{uid}": {
      "get": {
        "summary": "Retrieve a template set",
        "description": "Retrieve a single template set by UID on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The template set uid that you want to retrieve."
          },
          {
            "name": "extended",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to true to return an extended response including current layer defaults."
          }
        ]
      },
      "patch": {
        "summary": "Update a template set",
        "description": "Update the attributes of a template set on Bannerbear.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The template set uid to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A name for this template set."
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of template UIDs to add to this template set."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}