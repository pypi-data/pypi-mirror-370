[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "denvr"
dynamic = ["version"]
description = 'Python SDK for the Denvr Cloud API'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "rofinn", email = "rory@denvrdata.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["requests>=2.27", "toml~=0.10", "urllib3>=2.2.3"]

[project.urls]
Documentation = "https://github.com/denvrdata/denvrpy#readme"
Issues = "https://github.com/denvrdata/denvrpy/issues"
Source = "https://github.com/denvrdata/denvrpy"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "denvr/__about__.py"

[dependency-groups]
cov = ["coverage>=7.6.1"]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.8",
    "mkdocstrings[python]>=0.26.1",
    "pymdown-extensions>=10.14.3",
]
lint = ["mypy>=1.14.1", "ruff>=0.11.0"]
test = ["pytest>=8.3.5", "pytest-cov>=5.0.0", "pytest-httpserver>=1.1.1"]

[tool.uv]
default-groups = ["cov", "docs", "lint", "test"]

[[tool.mypy.overrides]]
module = ["requests.*", "toml.*"]
follow_untyped_imports = true

[tool.ruff]
line-length = 96

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 96
skip-magic-trailing-comma = true

[tool.ruff.lint.per-file-ignores]
"denvr/api/*" = ["A002"] # shadowing likely in generated code
"scripts/apigen.py" = [
    "INP001",
    "RET505",
] # we don't need an __init__.py for a script
"tests/*" = [
    "SLF001",
    "S105",
    "PLR2004",
] # Manipulating private hardcoded values is fine in tests
"*" = [
    "EM101",  # I have mixed opinion about signing exception strings to a variable first
    "EM102",  # Same as above
    "S101",   # asserts are fine for now
    "S113",   # requests timeouts N/A yet
    "TRY002", # we'll add custom exceptions later
    "TRY003", # again, we'll add exceptions later
]

[tool.coverage.run]
source_pkgs = ["denvr", "tests"]
branch = true
parallel = true
omit = ["denvr/__about__.py"]

[tool.coverage.paths]
denvr = ["denvr"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "mock_config",
]

[tool.pyright]
venvPath = "."
venv = "venv"

[tool.pytest.ini_options]
markers = [
    "integration: Test against mock-server at localhost:1080 (deselect with '-m \"not integration\"')",
]

# [tool.hatch.envs.default]
# dependencies = ["jinja2", "requests", "toml"]
# # path = "venv"

# [tool.hatch.envs.types]
# extra-dependencies = ["mypy>=1.0.0"]
# [tool.hatch.envs.types.scripts]
# check = "mypy --install-types --non-interactive {args:denvr tests}"

# [tool.hatch.envs.docs]
# dependencies = [
#     "mkdocs",
#     "mkdocstrings[python]",
#     "mkdocs-material",
#     "pymdown-extensions",
# ]
# [tool.hatch.envs.docs.scripts]
# build = "mkdocs build --clean"
# serve = "mkdocs serve --dev-addr localhost:8000"
# deploy = "mkdocs gh-deploy --force"

# # By default don't run integration tests
# [tool.hatch.envs.hatch-test]
# extra-dependencies = ["pytest-httpserver"]
# extra-args = ["-m", "not integration"]

# # Run full tests including integration
# [tool.hatch.envs.integration]
# dependencies = ["coverage", "pytest", "pytest-cov", "pytest-httpserver"]
# [[tool.hatch.envs.integration.matrix]]
# python = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
# [tool.hatch.envs.integration.scripts]
# test = "coverage run --data-file .coverage -m pytest tests"
# cov-combine = "coverage combine"
# cov-report = "coverage report -m"
# cov-total = "coverage report -m --format=total"
# cov-lcov = "coverage lcov"
