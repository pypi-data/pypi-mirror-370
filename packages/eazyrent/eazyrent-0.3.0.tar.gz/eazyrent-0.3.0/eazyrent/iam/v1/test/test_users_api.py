# coding: utf-8

"""
    Eazyrent IAM API

    EazyRent IAM API ==================  Description -------------  The EazyRent IAM API provides robust identity and access management capabilities, enabling efficient account management and permission controls across the platform. Tailored for the SaaS environment, this API allows administrators to handle user authentication, manage roles, and define permissions to secure access to various resources. By centralizing user accounts and access rules, the IAM API ensures a secure, organized, and scalable approach to managing tenant and staff permissions.  Target Audience ------------------   * **Real Estate Agencies and Social Housing Providers:** Organizations requiring a secure, structured way to manage access for staff and tenants, ensuring that only authorized users can access specific resources and functionalities.   * **Rent Guarantee Insurers:** Companies that need to manage and restrict access to sensitive information, allowing only certain roles to handle tenant verification and risk assessment data.  Purpose --------  The purpose of the EazyRent IAM API is to centralize identity and permission management for platform users. Through this API, businesses can handle account creation, manage user roles, assign permissions, and track access to critical resources, all while ensuring compliance and data security. This results in streamlined operations, allowing clients to configure role-based access in alignment with organizational policies and requirements.  How to use this API -----------------------  To start using the EazyRent IAM API, consult our detailed documentation, which provides information on authentication, endpoint definitions, and integration best practices. This documentation covers the steps required to manage user identities, roles, and permissions within your existing systems, ensuring secure and efficient access control across the platform.

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eazyrent.iam.v1.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_change_my_password(self) -> None:
        """Test case for change_my_password

        Change my password
        """
        pass

    def test_create_profile_avatar(self) -> None:
        """Test case for create_profile_avatar

        Create profile avatar
        """
        pass

    def test_delete_my_user(self) -> None:
        """Test case for delete_my_user

        Delete my user
        """
        pass

    def test_delete_profile_avatar(self) -> None:
        """Test case for delete_profile_avatar

        Delete profile avatar
        """
        pass

    def test_get_my_config(self) -> None:
        """Test case for get_my_config

        Get my config
        """
        pass

    def test_get_my_user(self) -> None:
        """Test case for get_my_user

        Get my user
        """
        pass

    def test_get_user_notification_preferences(self) -> None:
        """Test case for get_user_notification_preferences

        Get user notification preferences
        """
        pass

    def test_partial_update_my_user(self) -> None:
        """Test case for partial_update_my_user

        Partial update my user
        """
        pass

    def test_sync_my_user_from_auth_service(self) -> None:
        """Test case for sync_my_user_from_auth_service

        Sync my user from auth service
        """
        pass

    def test_update_my_config(self) -> None:
        """Test case for update_my_config

        Update my config
        """
        pass

    def test_update_user_notification_preferences(self) -> None:
        """Test case for update_user_notification_preferences

        Update user notification preferences
        """
        pass


if __name__ == "__main__":
    unittest.main()
