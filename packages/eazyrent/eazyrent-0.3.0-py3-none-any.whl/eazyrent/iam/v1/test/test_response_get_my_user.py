# coding: utf-8

"""
    Eazyrent IAM API

    EazyRent IAM API ==================  Description -------------  The EazyRent IAM API provides robust identity and access management capabilities, enabling efficient account management and permission controls across the platform. Tailored for the SaaS environment, this API allows administrators to handle user authentication, manage roles, and define permissions to secure access to various resources. By centralizing user accounts and access rules, the IAM API ensures a secure, organized, and scalable approach to managing tenant and staff permissions.  Target Audience ------------------   * **Real Estate Agencies and Social Housing Providers:** Organizations requiring a secure, structured way to manage access for staff and tenants, ensuring that only authorized users can access specific resources and functionalities.   * **Rent Guarantee Insurers:** Companies that need to manage and restrict access to sensitive information, allowing only certain roles to handle tenant verification and risk assessment data.  Purpose --------  The purpose of the EazyRent IAM API is to centralize identity and permission management for platform users. Through this API, businesses can handle account creation, manage user roles, assign permissions, and track access to critical resources, all while ensuring compliance and data security. This results in streamlined operations, allowing clients to configure role-based access in alignment with organizational policies and requirements.  How to use this API -----------------------  To start using the EazyRent IAM API, consult our detailed documentation, which provides information on authentication, endpoint definitions, and integration best practices. This documentation covers the steps required to manage user identities, roles, and permissions within your existing systems, ensuring secure and efficient access control across the platform.

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eazyrent.iam.v1.models.response_get_my_user import ResponseGetMyUser


class TestResponseGetMyUser(unittest.TestCase):
    """ResponseGetMyUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseGetMyUser:
        """Test ResponseGetMyUser
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ResponseGetMyUser`
        """
        model = ResponseGetMyUser()
        if include_optional:
            return ResponseGetMyUser(
                user_type = 'Machine',
                first_name = '',
                last_name = '',
                email = '',
                phone = '',
                id = '',
                avatar = '',
                state = 'USER_STATE_UNSPECIFIED',
                config = iam.v1.models.user_config.UserConfig(
                    email_signature = '', 
                    dark_mode = True, 
                    property_rent_subscriptions = [
                        null
                        ], 
                    send_notification_by_mail = True, 
                    raw_html_email = True, 
                    interface_config = null, ),
                organization = iam.v1.models.list_organization.ListOrganization(
                    name = '', 
                    organization_id = '', 
                    insurance_id = '', 
                    logo = null, 
                    account_type = 'DEFAULT', 
                    id = '', ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = ''
            )
        else:
            return ResponseGetMyUser(
                id = '',
        )
        """

    def testResponseGetMyUser(self):
        """Test ResponseGetMyUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
