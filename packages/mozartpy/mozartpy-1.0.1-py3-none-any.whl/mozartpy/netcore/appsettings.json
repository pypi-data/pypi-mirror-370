{
  "Log": {
    "LogLevel": "Trace",
    "FileTargets": [
      {
        "LoggerName": "General",
        "FileName": "${working-dir}\\Logs\\System\\app..log",
        "Template": "Timestamp: {Timestamp:yyyy-MM-dd HH:mm:ss.ffff}{NewLine}Message: {Message:lj}{NewLine}Severity: {Level}{NewLine}{Exception}--------------------------------------------------------------------{NewLine}",
        "RollingInterval": "Day"
      },
      {
        "LoggerName": "task",
        "FileName": "${#log-dir}\\{logger}-${log-key}-${#log-time}.log",
        "Default": true
      },
      {
        "LoggerName": "persists",
        "FileName": "${#log-dir}\\{logger}-${log-key}-${#log-time}.log",
        "Template": "{Message:lj}{NewLine}"
      }
    ],
    "DBTargets": [
      {
        "LoggerName": "execDB",
        "DataProvider": "SQLite",
        "Enabled": true,
        "OptionString": "C:\\Users\\user\\AppData\\Roaming\\Mozart\\v2\\Server\\SchedulerLogging.db3",
        "CommandText": "CREATE TABLE IF NOT EXISTS @TABLE_NAME ([TRIGGER_NAME] VARCHAR(50), [SCHEDULED_TIME] DATETIME, [START_TIME] DATETIME, [END_TIME] DATETIME, [RESULT] VARCHAR(10), [ERROR_TIME] DATETIME, [ERROR_MESSAGE] TEXT, [PERFORMANCE_PROFILING] BOOLEAN, CONSTRAINT [] PRIMARY KEY ([TRIGGER_NAME], [SCHEDULED_TIME])); INSERT OR REPLACE INTO @TABLE_NAME (TRIGGER_NAME, SCHEDULED_TIME, START_TIME, END_TIME, RESULT, ERROR_TIME, ERROR_MESSAGE, PERFORMANCE_PROFILING) VALUES (@TRIGGER_NAME, datetime(@SCHEDULED_TIME), COALESCE((SELECT START_TIME FROM @TABLE_NAME WHERE TRIGGER_NAME = @TRIGGER_NAME AND SCHEDULED_TIME = datetime(@SCHEDULED_TIME)), datetime(@START_TIME)), datetime(@END_TIME), @RESULT, datetime(@ERROR_TIME), ( SELECT  CASE WHEN  ERROR_MESSAGE = '' OR ERROR_MESSAGE ISNULL THEN @ERROR_MESSAGE ELSE ERROR_MESSAGE END MESSAGE FROM @TABLE_NAME  WHERE TRIGGER_NAME =@TRIGGER_NAME AND SCHEDULED_TIME = datetime(@SCHEDULED_TIME)), COALESCE((SELECT PERFORMANCE_PROFILING FROM @TABLE_NAME WHERE TRIGGER_NAME = @TRIGGER_NAME AND SCHEDULED_TIME = datetime(@SCHEDULED_TIME)), @PERFORMANCE_PROFILING))",
        "Parameters": [
          "@TRIGGER_NAME",
          "@SCHEDULED_TIME",
          "@START_TIME",
          "@END_TIME",
          "@RESULT",
          "@ERROR_TIME",
          "@ERROR_MESSAGE",
          "@PERFORMANCE_PROFILING"
        ]
      },
      {
        "LoggerName": "execDB",
        "DataProvider": "PostgreSQL",
        "Enabled": false,
        "OptionString": "User ID=sa;Password=mozart;Host=localhost;Port=5432;Database=mozart;",
        "CommandText": "CREATE TABLE IF NOT EXISTS \"@TABLE_NAME\" (\"TRIGGER_NAME\" VARCHAR(100), \"SCHEDULED_TIME\" TIMESTAMP, \"START_TIME\" TIMESTAMP, \"END_TIME\" TIMESTAMP, \"RESULT\" VARCHAR(30), \"ERROR_TIME\" TIMESTAMP, \"ERROR_MESSAGE\" TEXT, \"PERFORMANCE_PROFILING\" INT, PRIMARY KEY (\"TRIGGER_NAME\", \"SCHEDULED_TIME\")); INSERT INTO \"@TABLE_NAME\" (\"TRIGGER_NAME\", \"SCHEDULED_TIME\", \"START_TIME\", \"PERFORMANCE_PROFILING\") VALUES (@TRIGGER_NAME, @SCHEDULED_TIME::TIMESTAMP, @START_TIME::TIMESTAMP, @PERFORMANCE_PROFILING) ON CONFLICT (\"TRIGGER_NAME\", \"SCHEDULED_TIME\") DO UPDATE SET \"END_TIME\" = @END_TIME::TIMESTAMP, \"RESULT\" = @RESULT, \"ERROR_TIME\" = @ERROR_TIME::TIMESTAMP, \"ERROR_MESSAGE\" = @ERROR_MESSAGE",
        "Parameters": [
          "@TRIGGER_NAME",
          "@SCHEDULED_TIME",
          "@START_TIME",
          "@END_TIME",
          "@RESULT",
          "@ERROR_TIME",
          "@ERROR_MESSAGE",
          "@PERFORMANCE_PROFILING"
        ]
      },
      {
        "LoggerName": "runTimeDB",
        "DataProvider": "SQLite",
        "Enabled": true,
        "OptionString": "C:\\Users\\user\\AppData\\Roaming\\Mozart\\v2\\Server\\SchedulerLogging.db3",
        "CommandText": "CREATE TABLE IF NOT EXISTS @TABLE_NAME ([TRIGGER_NAME] VARCHAR(50), [RUN_TIME] DATETIME, [ACTION_ID] VARCHAR(10), [START_TIME] DATETIME, [END_TIME] DATETIME, [UPDATE_TIME] DATETIME, PRIMARY KEY(TRIGGER_NAME, RUN_TIME, ACTION_ID)); INSERT OR REPLACE INTO @TABLE_NAME (TRIGGER_NAME, RUN_TIME, ACTION_ID, START_TIME, END_TIME, UPDATE_TIME) VALUES (@TRIGGER_NAME, datetime(@RUN_TIME), @ACTION_ID, COALESCE((SELECT START_TIME FROM @TABLE_NAME WHERE TRIGGER_NAME = @TRIGGER_NAME AND RUN_TIME = datetime(@RUN_TIME) AND ACTION_ID = @ACTION_ID), datetime(@START_TIME)), datetime(@END_TIME), datetime(@UPDATE_TIME))",
        "Parameters": [
          "@TRIGGER_NAME",
          "@RUN_TIME",
          "@ACTION_ID",
          "@START_TIME",
          "@END_TIME",
          "@UPDATE_TIME"
        ]
      },
      {
        "LoggerName": "runTimeDB",
        "DataProvider": "PostgreSQL",
        "Enabled": false,
        "OptionString": "User ID=sa;Password=mozart;Host=localhost;Port=5432;Database=mozart;",
        "CommandText": "CREATE TABLE IF NOT EXISTS \"@TABLE_NAME\" (\"TRIGGER_NAME\" VARCHAR(100), \"RUN_TIME\" TIMESTAMP, \"ACTION_ID\" VARCHAR(30), \"START_TIME\" TIMESTAMP, \"END_TIME\" TIMESTAMP, \"UPDATE_TIME\" TIMESTAMP, PRIMARY KEY(\"TRIGGER_NAME\", \"RUN_TIME\", \"ACTION_ID\")); INSERT INTO \"@TABLE_NAME\" (\"TRIGGER_NAME\", \"RUN_TIME\", \"ACTION_ID\", \"START_TIME\", \"UPDATE_TIME\") VALUES (@TRIGGER_NAME, @RUN_TIME::TIMESTAMP, @ACTION_ID, @START_TIME::TIMESTAMP, @UPDATE_TIME::TIMESTAMP) ON CONFLICT (\"TRIGGER_NAME\", \"RUN_TIME\", \"ACTION_ID\") DO UPDATE SET \"END_TIME\" = @END_TIME::TIMESTAMP, \"UPDATE_TIME\" = @UPDATE_TIME::TIMESTAMP",
        "Parameters": [
          "@TRIGGER_NAME",
          "@RUN_TIME",
          "@ACTION_ID",
          "@START_TIME",
          "@END_TIME",
          "@UPDATE_TIME"
        ]
      },
      {
        "LoggerName": "interruptDB",
        "DataProvider": "SQLite",
        "Enabled": true,
        "OptionString": "C:\\Users\\user\\AppData\\Roaming\\Mozart\\v2\\Server\\SchedulerLogging.db3",
        "CommandText": "CREATE TABLE IF NOT EXISTS @TABLE_NAME ([TRIGGER_NAME] VARCHAR(50), [SCHEDULED_TIME] DATETIME, [INTERRUPT_TIME] DATETIME, [TIME_LIMITED] BOOLEAN, PRIMARY KEY(TRIGGER_NAME, SCHEDULED_TIME)); INSERT OR REPLACE INTO @TABLE_NAME (TRIGGER_NAME, SCHEDULED_TIME, INTERRUPT_TIME, TIME_LIMITED) VALUES (@TRIGGER_NAME, datetime(@SCHEDULED_TIME), datetime(@INTERRUPT_TIME), @TIME_LIMITED)",
        "Parameters": [
          "@TRIGGER_NAME",
          "@SCHEDULED_TIME",
          "@INTERRUPT_TIME",
          "@TIME_LIMITED"
        ]
      },
      {
        "LoggerName": "interruptDB",
        "DataProvider": "PostgreSQL",
        "Enabled": false,
        "OptionString": "User ID=sa;Password=mozart;Host=localhost;Port=5432;Database=mozart;",
        "CommandText": "CREATE TABLE IF NOT EXISTS \"@TABLE_NAME\" (\"TRIGGER_NAME\" VARCHAR(100), \"SCHEDULED_TIME\" TIMESTAMP, \"INTERRUPT_TIME\" TIMESTAMP, \"TIME_LIMITED\" BOOLEAN, PRIMARY KEY(\"TRIGGER_NAME\", \"SCHEDULED_TIME\")); INSERT INTO \"@TABLE_NAME\" (\"TRIGGER_NAME\", \"SCHEDULED_TIME\", \"INTERRUPT_TIME\", \"TIME_LIMITED\") VALUES (@TRIGGER_NAME, @SCHEDULED_TIME::TIMESTAMP, @INTERRUPT_TIME::TIMESTAMP, @TIME_LIMITED)",
        "Parameters": [
          "@TRIGGER_NAME",
          "@SCHEDULED_TIME",
          "@INTERRUPT_TIME",
          "@TIME_LIMITED"
        ]
      }
    ]
  },

  "Mozart/Task": {
    "workingDirectory": "D:\\vms"
  },

  "AppSettings": {
    "ProcessHost.launchDebugger" :  false
  }
}
