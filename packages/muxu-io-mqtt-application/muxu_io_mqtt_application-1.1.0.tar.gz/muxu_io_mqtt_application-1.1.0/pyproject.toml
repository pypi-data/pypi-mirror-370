# pyproject.toml
# This is the pyproject.toml file for the mqtt-application package.

[build-system]
requires = ["setuptools>=78.1.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "muxu-io-mqtt-application"
version = "1.1.0"
description = "A comprehensive asynchronous MQTT application library"
authors = [
    {name = "Alex Gonzalez", email = "alex@muxu.io"},
]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["mqtt", "async", "iot", "messaging", "client"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
dependencies = [
    "pyyaml>=6.0.0",
    "muxu-io-mqtt-logger",
    "muxu-io-mqtt-connector",
]

[project.urls]
Homepage = "https://github.com/muxu-io/mqtt-application"
Repository = "https://github.com/muxu-io/mqtt-application.git"
Issues = "https://github.com/muxu-io/mqtt-application/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "bandit[toml]>=1.7.0",
    "pip-audit>=2.6.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

# Optional testing tools
testing = [
    "pytest-watch>=4.2.0",
    "pytest-sugar>=0.9.0",
    "pytest-html>=3.1.0",
]

[tool.black]
line-length = 120  # Increased to accommodate error messages and logging
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 120  # Increased to accommodate error messages and logging
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variable = ["src/mqtt_application/__init__.py:__version__"]
build_command = "python -m build"
upload_to_vcs_release = true
commit = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
type = "github"
