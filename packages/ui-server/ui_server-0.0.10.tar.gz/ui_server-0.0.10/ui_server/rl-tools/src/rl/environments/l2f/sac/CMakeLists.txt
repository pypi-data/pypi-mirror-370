if(RL_TOOLS_ENABLE_ZLIB AND RL_TOOLS_EXPERIMENTAL)
#set(SANITIZER_FLAGS "-fsanitize=undefined -fsanitize=address")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${SANITIZER_FLAGS}")
#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${SANITIZER_FLAGS}")
#set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} ${SANITIZER_FLAGS}")
add_executable(rl_environments_l2f_sac l2f_sac.cpp)
target_link_libraries(rl_environments_l2f_sac PRIVATE rl_tools)
target_compile_options(rl_environments_l2f_sac PRIVATE -ftemplate-backtrace-limit=0)
#target_compile_definitions(rl_environments_l2f_sac PRIVATE RL_TOOLS_DEBUG_CONTAINER_CHECK_BOUNDS)
#if(RL_TOOLS_ENABLE_TRACY)
#    target_link_libraries(rl_environments_l2f_sac PRIVATE Tracy::TracyClient)
#    target_include_directories(rl_environments_l2f_sac PRIVATE ${PROJECT_SOURCE_DIR}/external/tracy/public/tracy)
#    target_compile_definitions(rl_environments_l2f_sac PRIVATE RL_TOOLS_ENABLE_TRACY)
#endif()
endif()

#add_executable(rl_environments_l2f_sac_evaluate evaluate.cpp)
#target_link_libraries(rl_environments_l2f_sac_evaluate PRIVATE rl_tools)

#add_executable(rl_environments_l2f_sac_evaluate_code evaluate_code.cpp)
#target_link_libraries(rl_environments_l2f_sac_evaluate_code PRIVATE rl_tools)
