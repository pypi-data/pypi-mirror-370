Metadata-Version: 2.4
Name: uvforge
Version: 0.1.1
Summary: A CLI tool to scaffold Python projects with uv
Author-email: Manuel Rodríguez Sutil <mrodsut@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Manuel Rodríguez Sutil
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/manursutil/py-template
Project-URL: Repository, https://github.com/manursutil/py-template
Project-URL: Issues, https://github.com/manursutil/py-template/issues
Keywords: cli,template,scaffold,python,uv
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Code Generators
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.2.1
Requires-Dist: inquirerpy>=0.3.4
Requires-Dist: pyfiglet>=1.0.4
Requires-Dist: rich>=14.1.0
Dynamic: license-file

# 🐍 Py-Template

**Interactive Python project generator - like `create-react-app` but for Python**

Stop copying project structures and wrestling with configuration files. Answer a few questions, and get a perfectly structured Python project in seconds.

## ✨ Why py-template?

**Before py-template:**

```bash
mkdir my-project
cd my-project
touch setup.py pyproject.toml README.md requirements.txt .gitignore
mkdir src tests docs
# ... 15 more minutes of boilerplate setup
```

**With py-template:**

```bash
py-template
# Answer 4-5 quick questions
# ✅ Complete project ready in 30 seconds
```

### vs. cookiecutter

| Feature         | py-template                  | cookiecutter                 |
| --------------- | ---------------------------- | ---------------------------- |
| Setup method    | Interactive Q&A              | Config files first           |
| Learning curve  | None - just answer questions | Need to understand JSON/YAML |
| Customization   | Guided prompts               | Pre-configure everything     |
| User experience | Like create-react-app        | Like filling out forms       |

## ✨ Features

- **Interactive CLI** - Guided setup with friendly prompts
- **Fast Setup** - Uses `uv` for fast project initialization
- **Modern Structure** - Creates `src` layout following Python packaging best practices
- **Testing Ready** - Includes `pytest` setup with example tests
- **Docker Support** - Optional Dockerfile generation
- **MIT License** - Automatically generates license file
- **Development Tools** - Pre-configured with `ruff` for linting

## 📦 Installation

### Using pipx (Recommended)

```bash
pipx install git+https://github.com/manursutil/py-template.git
```

### Using uv (Development)

```bash
git clone https://github.com/manursutil/py-template.git
cd py-template
uv sync
uv pip install -e .
```

## 🚀 Usage

Simply run the command and follow the interactive prompts:

```bash
py-template
```

### Demo

![Demo](/docs/img/demo.gif)

### Generated Project Structure

```
my-awesome-app/
├── src/
│   └── my_awesome_app/
│       ├── __init__.py
│       └── main.py
├── tests/
│   ├── __init__.py
│   └── test_main.py
├── docs/
├── .github/
│   └── workflows/
│       └── ci.yml
├── LICENSE
├── README.md
├── .gitignore
├── pyproject.toml
└── Dockerfile + docker-compose.yml (optional)
```

## Development

See [CONTRIBUTING.md](/docs/contributing.md) for full details on setting up a dev environment, running tests, and contributing.

Quick start:

```bash
git clone https://github.com/manursutil/py-template.git
cd py-template
uv sync

uv run pytest
uv run ruff check .
uv run ruff format .
```

## A Note from the Author

Py-Template started as a tool I built for my own workflow so it is a very opinionated way to spin up Python projects with the tools I use most frequently.

That said, I’d love to make it useful for a broader audience.If you use a different stack, need extra integrations, or have ideas for improvement, please open an issue or PR.

Together we can make Py-Template a universal scaffolding tool for modern Python projects 🚀

See [CONTRIBUTING.md](/docs/contributing.md) for guidelines on how to get involved.

## 📝 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- Built with [uv](https://github.com/astral-sh/uv) for fast Python package management
- Uses [Rich](https://github.com/Textualize/rich) for beautiful terminal output
- Inspired by modern Python packaging practices
