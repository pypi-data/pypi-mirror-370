Metadata-Version: 2.4
Name: cloudstack-orchestrator
Version: 2.5.0
Summary: CloudStack Orchestrator SDK and CLI for automated Kubernetes platform management
Author-email: CloudStack Team <dev@cloudstack.io>
License: MIT
Project-URL: Homepage, https://github.com/killerapp/cloudstack-orchestrator
Project-URL: Documentation, https://github.com/killerapp/cloudstack-orchestrator#readme
Project-URL: Repository, https://github.com/killerapp/cloudstack-orchestrator
Project-URL: Issues, https://github.com/killerapp/cloudstack-orchestrator/issues
Keywords: kubernetes,gitops,argocd,platform,orchestration
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Systems Administration
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: typer>=0.9.0
Requires-Dist: rich>=13.7.0
Requires-Dist: boto3>=1.34.0
Requires-Dist: google-cloud-secret-manager>=2.16.0
Requires-Dist: google-cloud-container>=2.35.0
Requires-Dist: kubernetes>=29.0.0
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: pydantic>=2.5.0
Requires-Dist: pygithub>=2.1.1
Requires-Dist: requests>=2.31.0
Requires-Dist: requests-oauthlib>=2.0.0
Requires-Dist: httpx>=0.28.1
Requires-Dist: bcrypt>=4.1.0
Requires-Dist: pyjwt>=2.8.0
Requires-Dist: azure-keyvault-secrets>=4.10.0
Requires-Dist: azure-identity>=1.24.0

# CloudStack Orchestrator

A unified SDK and CLI for automated Kubernetes platform management using GitOps principles.

## Features

- üöÄ **Zero-touch cluster bootstrapping** - Automated setup with minimal manual steps
- üîê **Integrated secrets management** - AWS Secrets Manager support with automatic generation
- ü§ñ **Multiple interfaces** - Use as CLI or SDK for programmatic access
- ‚òÅÔ∏è **Multi-cloud ready** - Support for AWS, GCP, Azure, and local development
- üîÑ **GitOps native** - Built on ArgoCD with the app-of-apps pattern

## Installation

```bash
# Install from PyPI
uv tool install cloudstack-orchestrator

# Or add to your project
uv add cloudstack-orchestrator
```

## Quick Start

### CLI Usage

```bash
# Interactive setup
cso setup

# Non-interactive setup
cso setup \
  --provider aws \
  --cluster my-cluster \
  --domain platform.example.com \
  --github-org my-org \
  --region us-east-1

# Check status
cso status

# Validate prerequisites
cso validate
```

### SDK Usage

```python
from cloudstack_orchestrator import CloudStackSDK, Config, CloudProvider
from cloudstack_orchestrator.core.config import GitHubConfig

# Create configuration
config = Config(
    provider=CloudProvider.AWS,
    region="us-east-1", 
    cluster_name="my-cluster",
    domain="platform.example.com",
    github=GitHubConfig(
        org="my-org",
        token="ghp_..."
    )
)

# Initialize SDK
sdk = CloudStackSDK(config)

# Run setup
await sdk.setup()

# Check status
status = await sdk.get_status()
```


## Architecture

CloudStack Orchestrator sets up:

- **ArgoCD** - GitOps continuous delivery
- **Istio** - Service mesh for traffic management
- **Keycloak** - Identity and access management
- **Prometheus/Grafana** - Monitoring and observability
- **Cert-Manager** - Automatic TLS certificate management

## Development

```bash
# Clone the repository
git clone https://github.com/killerapp/cloudstack-orchestrator
cd cloudstack-orchestrator/cso-cli

# Install dependencies
uv sync

# Run tests
uv run pytest

# Run CLI in development
uv run python -m cloudstack_orchestrator.cli
```

## Publishing to PyPI

```bash
# Build the package
uv build

# Publish to PyPI
uv publish
```

## License

MIT
