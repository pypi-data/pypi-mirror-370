# caeluslextab.py. This file automatically created by PLY (version 3.11). Don't edit!
_tabversion   = '3.10'
_lextokens    = set(('CALC', 'CHAR_CONST', 'CODESTREAM', 'CODE_BLOCK', 'DIMENSIONS', 'DIRECTIVES', 'EVAL', 'FLOAT_CONST', 'ID', 'INT_CONST', 'LBRACE', 'LBRACKET', 'LIST', 'LPAREN', 'MACRO_VAR', 'NONUNIFORM', 'RBRACE', 'RBRACKET', 'RPAREN', 'SEMI', 'STRING_LITERAL', 'UNIFORM'))
_lexreflags   = 64
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive', 'list': 'inclusive', 'eval': 'exclusive', 'dimension': 'exclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_NEWLINE>\\n+)|(?P<t_COMMENT>/[*/])|(?P<t_CODE_BLOCK>\\#\\{)|(?P<t_LPAREN>\\()|(?P<t_LBRACKET>\\[)|(?P<t_FLOAT_CONST>((((([-+]?[0-9]*\\.[0-9]+)|([-+]?[0-9]+\\.))([eE][-+]?[0-9]+)?)|([0-9]+([eE][-+]?[0-9]+)))[FfLl]?))|(?P<t_INT_CONST>([-+]?((0(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?)|([1-9][0-9]*(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?))))|(?P<t_CHAR_CONST>\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))\')|(?P<t_UNMATCHED_QUOTE>(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*\\n)|(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*$))|(?P<t_BAD_CHAR_CONST>(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))[^\'\n]+\')|(\'\')|(\'([\\\\][^a-zA-Z._~^!=&\\^\\-\\\\?\'"x0-7\\(\\)])[^\'\\n]*\'))|(?P<t_BAD_STRING_LITERAL>"([^"\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*?([\\\\][^a-zA-Z._~^!=&\\^\\-\\\\?\'"x0-7\\(\\)])([^"\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*")|(?P<t_LIST>List<[A-Za-z]+>)|(?P<t_MACRO_VAR>(\\$[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*|\\${[^ ";\\n\\t]+}|\\$[.:/][^ ";\\n\\t]+))|(?P<t_DIRECTIVES>[#][a-zA-Z0-9_]+)|(?P<t_ID>[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*)|(?P<t_STRING_LITERAL>"[^"\\\n]*")|(?P<t_LBRACE>\\{)|(?P<t_RBRACE>\\})|(?P<t_RBRACKET>\\])|(?P<t_RPAREN>\\))|(?P<t_SEMI>;)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_COMMENT', 'COMMENT'), ('t_CODE_BLOCK', 'CODE_BLOCK'), ('t_LPAREN', 'LPAREN'), ('t_LBRACKET', 'LBRACKET'), ('t_FLOAT_CONST', 'FLOAT_CONST'), None, None, None, None, None, None, None, None, None, ('t_INT_CONST', 'INT_CONST'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_CHAR_CONST', 'CHAR_CONST'), None, None, None, None, None, None, ('t_UNMATCHED_QUOTE', 'UNMATCHED_QUOTE'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_BAD_CHAR_CONST', 'BAD_CHAR_CONST'), None, None, None, None, None, None, None, None, None, None, ('t_BAD_STRING_LITERAL', 'BAD_STRING_LITERAL'), None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_LIST', 'LIST'), ('t_MACRO_VAR', 'MACRO_VAR'), None, None, ('t_DIRECTIVES', 'DIRECTIVES'), ('t_ID', 'ID'), None, (None, 'STRING_LITERAL'), (None, 'LBRACE'), (None, 'RBRACE'), (None, 'RBRACKET'), (None, 'RPAREN'), (None, 'SEMI')])], 'list': [('(?P<t_list_LPAREN>\\()|(?P<t_list_RPAREN>\\))|(?P<t_list_MACRO_VAR>(\\$[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*|\\${[^ ";\\n\\t]+}|\\$[.:/][^ ";\\n\\t]+))|(?P<t_list_ID>[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*)', [None, ('t_list_LPAREN', 'LPAREN'), ('t_list_RPAREN', 'RPAREN'), ('t_list_MACRO_VAR', 'MACRO_VAR'), None, None, ('t_list_ID', 'ID')]), ('(?P<t_NEWLINE>\\n+)|(?P<t_COMMENT>/[*/])|(?P<t_CODE_BLOCK>\\#\\{)|(?P<t_LPAREN>\\()|(?P<t_LBRACKET>\\[)|(?P<t_FLOAT_CONST>((((([-+]?[0-9]*\\.[0-9]+)|([-+]?[0-9]+\\.))([eE][-+]?[0-9]+)?)|([0-9]+([eE][-+]?[0-9]+)))[FfLl]?))|(?P<t_INT_CONST>([-+]?((0(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?)|([1-9][0-9]*(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?))))|(?P<t_CHAR_CONST>\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))\')|(?P<t_UNMATCHED_QUOTE>(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*\\n)|(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*$))|(?P<t_BAD_CHAR_CONST>(\'([^\'\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))[^\'\n]+\')|(\'\')|(\'([\\\\][^a-zA-Z._~^!=&\\^\\-\\\\?\'"x0-7\\(\\)])[^\'\\n]*\'))|(?P<t_BAD_STRING_LITERAL>"([^"\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*?([\\\\][^a-zA-Z._~^!=&\\^\\-\\\\?\'"x0-7\\(\\)])([^"\\\\\\n]|(\\\\(([a-zA-Z._~!=&\\^\\-\\\\?\'"()])|(\\d+)|(x[0-9a-fA-F]+))))*")|(?P<t_LIST>List<[A-Za-z]+>)|(?P<t_MACRO_VAR>(\\$[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*|\\${[^ ";\\n\\t]+}|\\$[.:/][^ ";\\n\\t]+))|(?P<t_DIRECTIVES>[#][a-zA-Z0-9_]+)|(?P<t_ID>[a-zA-Z@_]([^ ";/\\{\\}\\t\\n])*)|(?P<t_STRING_LITERAL>"[^"\\\n]*")|(?P<t_LBRACE>\\{)|(?P<t_RBRACE>\\})|(?P<t_RBRACKET>\\])|(?P<t_RPAREN>\\))|(?P<t_SEMI>;)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_COMMENT', 'COMMENT'), ('t_CODE_BLOCK', 'CODE_BLOCK'), ('t_LPAREN', 'LPAREN'), ('t_LBRACKET', 'LBRACKET'), ('t_FLOAT_CONST', 'FLOAT_CONST'), None, None, None, None, None, None, None, None, None, ('t_INT_CONST', 'INT_CONST'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_CHAR_CONST', 'CHAR_CONST'), None, None, None, None, None, None, ('t_UNMATCHED_QUOTE', 'UNMATCHED_QUOTE'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_BAD_CHAR_CONST', 'BAD_CHAR_CONST'), None, None, None, None, None, None, None, None, None, None, ('t_BAD_STRING_LITERAL', 'BAD_STRING_LITERAL'), None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_LIST', 'LIST'), ('t_MACRO_VAR', 'MACRO_VAR'), None, None, ('t_DIRECTIVES', 'DIRECTIVES'), ('t_ID', 'ID'), None, (None, 'STRING_LITERAL'), (None, 'LBRACE'), (None, 'RBRACE'), (None, 'RBRACKET'), (None, 'RPAREN'), (None, 'SEMI')])], 'eval': [('(?P<t_eval_CODE_BLOCK>\\#?\\{)|(?P<t_eval_STRING_LITERAL>"[^"\\\n]*")', [None, ('t_eval_CODE_BLOCK', 'CODE_BLOCK'), ('t_eval_STRING_LITERAL', 'STRING_LITERAL')])], 'dimension': [('(?P<t_dimension_RBRACKET>\\])|(?P<t_dimension_INT_CONST>([-+]?((0(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?)|([1-9][0-9]*(([uU]ll)|([uU]LL)|(ll[uU]?)|(LL[uU]?)|([uU][lL])|([lL][uU]?)|[uU])?))))|(?P<t_dimension_ID>[a-zA-Z].*?\\])', [None, ('t_dimension_RBRACKET', 'RBRACKET'), ('t_dimension_INT_CONST', 'INT_CONST'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ('t_dimension_ID', 'ID')])]}
_lexstateignore = {'INITIAL': ' \t', 'list': ' \t', 'eval': ' \t', 'dimension': ' \t'}
_lexstateerrorf = {'INITIAL': 't_ANY_error', 'list': 't_ANY_error', 'eval': 't_ANY_error', 'dimension': 't_ANY_error'}
_lexstateeoff = {}
