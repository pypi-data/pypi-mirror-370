Metadata-Version: 2.4
Name: multi-agent-bot
Version: 1.0.0
Summary: A multi-agent bot framework for research and automation
Home-page: https://github.com/jpalvarezb/multi-agent-bot
Author: jpalvarezb
Author-email: jpalvarezb <jpalvarezb@users.noreply.github.com>
License: MIT License
        
        Copyright (c) 2024 jpalvarezb
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/jpalvarezb/multi-agent-bot
Project-URL: Bug Reports, https://github.com/jpalvarezb/multi-agent-bot/issues
Project-URL: Source, https://github.com/jpalvarezb/multi-agent-bot
Project-URL: Documentation, https://github.com/jpalvarezb/multi-agent-bot#readme
Keywords: ai,agents,langchain,langgraph,chatbots,automation
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastapi==0.116.1
Requires-Dist: uvicorn==0.35.0
Requires-Dist: langchain==0.3.26
Requires-Dist: langchain-community==0.3.27
Requires-Dist: langchain-core==0.3.69
Requires-Dist: langchain-text-splitters==0.3.8
Requires-Dist: langgraph==0.5.3
Requires-Dist: langgraph-prebuilt==0.5.2
Requires-Dist: pydantic==2.11.7
Requires-Dist: python-dotenv==1.1.1
Requires-Dist: requests==2.32.4
Requires-Dist: databricks-sdk==0.59.0
Requires-Dist: databricks-ai-bridge==0.6.0
Requires-Dist: databricks-langchain==0.6.0
Requires-Dist: databricks-vectorsearch==0.57
Requires-Dist: numpy==1.26.4
Requires-Dist: pandas==2.3.1
Requires-Dist: scikit-learn==1.7.1
Requires-Dist: gunicorn==23.0.0
Requires-Dist: python-multipart==0.0.9
Requires-Dist: langchain-openai==0.3.28
Requires-Dist: langchain-tavily==0.2.10
Requires-Dist: botbuilder-core==4.14.3
Requires-Dist: botbuilder-schema==4.14.3
Requires-Dist: botframework-connector==4.14.3
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: PyJWT==2.8.0
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# Multi-Agent Bot Framework

A modular AI-powered assistant framework featuring multiple specialized agents for market research, sales analysis, and web search capabilities.

## Features

- **Multi-Agent System**: Multiple specialized agents working together
  - Market Study Agent (Experto Estudios)
  - Sales Agent (Analista Ventas)
  - Web Search Agent (Agente Web)
  - Research Team coordination
  - Response Synthesizer

- **FastAPI Backend**: RESTful API with automatic documentation
- **Vector Search**: Integration with vector databases for document retrieval
- **Web Search**: Integration with Tavily for real-time web search
- **Session Management**: User session tracking and context management
- **MLflow Integration**: Experiment tracking and cleanup utilities

## Architecture

The project follows a modular architecture with:
- `agents/`: Individual agent implementations
- `api/`: FastAPI application and engines
- `core/`: Base classes and abstractions
- `nodes/`: LangGraph node implementations
- `tools/`: External tool integrations
- `utils/`: Utility functions and helpers

## Requirements

- **Python 3.11+** (required for modern type annotation syntax like `Literal[*options]`)
- **direnv** (recommended for environment management)
- **pyenv** (recommended for Python version management)

## Installation

### 1. Set up Python Environment

**Option A: Using pyenv (recommended)**
```bash
# Install Python 3.11+ if not available
pyenv install 3.12.3  # or any Python 3.11+
pyenv local 3.12.3

# Verify version
python --version  # Should show 3.11+
```

**Option B: System Python**
```bash
# Ensure you have Python 3.11+
python --version  # Should show 3.11+
```

### 2. Install the Package

```bash
# Clone the repository
git clone https://github.com/jpalvarezb/multi-agent-bot.git
cd multi-agent-bot

# Install as editable package (enables clean imports)
pip install -e .
```

### 3. Configure Environment

**Option A: Using direnv (recommended)**
```bash
# Copy environment file
cp .env.example .env

# Edit .env with your API keys and configuration
# The .envrc file is already configured
direnv allow
```

**Option B: Manual environment setup**
```bash
# Copy and edit environment file
cp .env.example .env
# Edit .env with your API keys

# Load environment variables manually or use python-dotenv
export $(cat .env | xargs)
```

### 4. Run the Application

```bash
# Start the API server
uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

# Or run individual bots
python main/sales_bot.py "Show me sales data for 2024"
python main/market_study_bot.py "Analyze market trends"
```

## API Documentation

Once running, visit `http://localhost:8000/docs` for interactive API documentation.

## Usage

Send POST requests to `/api/query` with your questions about market research, competitors, and business intelligence.

## Configuration

The system uses environment variables for configuration. See `.env.example` for required variables.
