# ChatAnthropic { #chatlas.ChatAnthropic }

```python
ChatAnthropic(
    system_prompt=None,
    turns=None,
    model=None,
    api_key=None,
    max_tokens=4096,
    kwargs=None,
)
```

Chat with an Anthropic Claude model.

[Anthropic](https://www.anthropic.com) provides a number of chat based
models under the [Claude](https://www.anthropic.com/claude) moniker.

## Prerequisites {.doc-section .doc-section-prerequisites}


::: {.callout-note}
## API key

Note that a Claude Pro membership does not give you the ability to call
models via the API. You will need to go to the [developer
console](https://console.anthropic.com/account/keys) to sign up (and pay
for) a developer account that will give you an API key that you can use with
this package.
:::

::: {.callout-note}
## Python requirements

`ChatAnthropic` requires the `anthropic` package: `pip install "chatlas[anthropic]"`.
:::

## Examples {.doc-section .doc-section-examples}

```python
import os
from chatlas import ChatAnthropic

chat = ChatAnthropic(api_key=os.getenv("ANTHROPIC_API_KEY"))
chat.chat("What is the capital of France?")
```

## Parameters {.doc-section .doc-section-parameters}

| Name          | Type                                                                            | Description                                                                                                                                                                                                                                                                                                                                                                                                               | Default   |
|---------------|---------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------|
| system_prompt | [Optional](`typing.Optional`)\[[str](`str`)\]                                   | A system prompt to set the behavior of the assistant.                                                                                                                                                                                                                                                                                                                                                                     | `None`    |
| turns         | [Optional](`typing.Optional`)\[[list](`list`)\[[Turn](`chatlas._turn.Turn`)\]\] | A list of turns to start the chat with (i.e., continuing a previous conversation). If not provided, the conversation begins from scratch. Do not provide non-None values for both `turns` and `system_prompt`. Each message in the list should be a dictionary with at least `role` (usually `system`, `user`, or `assistant`, but `tool` is also possible). Normally there is also a `content` field, which is a string. | `None`    |
| model         | \'Optional\[ModelParam\]\'                                                      | The model to use for the chat. The default, None, will pick a reasonable default, and warn you about it. We strongly recommend explicitly choosing a model for all but the most casual use.                                                                                                                                                                                                                               | `None`    |
| api_key       | [Optional](`typing.Optional`)\[[str](`str`)\]                                   | The API key to use for authentication. You generally should not supply this directly, but instead set the `ANTHROPIC_API_KEY` environment variable.                                                                                                                                                                                                                                                                       | `None`    |
| max_tokens    | [int](`int`)                                                                    | Maximum number of tokens to generate before stopping.                                                                                                                                                                                                                                                                                                                                                                     | `4096`    |
| kwargs        | [Optional](`typing.Optional`)\[\'ChatClientArgs\'\]                             | Additional arguments to pass to the `anthropic.Anthropic()` client constructor.                                                                                                                                                                                                                                                                                                                                           | `None`    |

## Returns {.doc-section .doc-section-returns}

| Name   | Type                         | Description    |
|--------|------------------------------|----------------|
|        | [Chat](`chatlas._chat.Chat`) | A Chat object. |

## Note {.doc-section .doc-section-note}

Pasting an API key into a chat constructor (e.g., `ChatAnthropic(api_key="...")`)
is the simplest way to get started, and is fine for interactive use, but is
problematic for code that may be shared with others.

Instead, consider using environment variables or a configuration file to manage
your credentials. One popular way to manage credentials is to use a `.env` file
to store your credentials, and then use the `python-dotenv` package to load them
into your environment.

```shell
pip install python-dotenv
```

```shell
# .env
ANTHROPIC_API_KEY=...
```

```python
from chatlas import ChatAnthropic
from dotenv import load_dotenv

load_dotenv()
chat = ChatAnthropic()
chat.console()
```

Another, more general, solution is to load your environment variables into the shell
before starting Python (maybe in a `.bashrc`, `.zshrc`, etc. file):

```shell
export ANTHROPIC_API_KEY=...
```