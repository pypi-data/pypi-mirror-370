{"version":3,"sources":["utils/formatAnsiToHtml.ts","pages/RunDetail/RunLogsTab/LogRow.tsx","pages/RunDetail/RunLogsTab/RunLogsTab.d.ts","pages/RunDetail/RunLogsTab/RunLogsTab.tsx","pages/RunDetail/RunLogsTab/index.tsx"],"names":["defaults","fg","bg","newline","colors","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","_","range","forEach","red","green","blue","r","g","b","ref","results","push","toHexString","join","toColorHexString","setStyleColor","gray","c","l","getDefaultColors","num","str","toString","length","generateOutput","stack","token","data","options","result","code","parseInt","codeMap","resetStyles","pushTag","pushStyle","22","23","closeTag","24","39","pushForegroundColor","49","pushBackgroundColor","53","handleDisplay","operation","substring","slice","substr","rgb","split","map","value","Number","handleRgb","stackClone","reverse","tag","style","color","last","pop","formatAnsiToHtml","input","optionsA","Object","assign","buf","text","callback","ansiMatch","remove","m","tokens","pattern","sub","z","g1","trim","g2","trimRight","process","handler","i","replace","results1","outer","o","len","tokenize","output","LogRow","index","className","dangerouslySetInnerHTML","__html","logsList","displayName","React","LogsLastRequestEnum","memo","RunLogsTab","isRunLogsLoading","runHash","runLogs","inProgress","updatedLogsCount","liveUpdate","useRef","logsContainerRef","listRef","runsBatchRequestRef","logsRowsData","useState","DEFAULT","lastRequestType","setLastRequestType","RequestStatusEnum","Ok","requestStatus","setRequestStatus","logsRange","scrollOffset","setScrollOffset","visibleRowsRange","setVisibleRowsRange","parentHeight","setParentHeight","parentWidth","setParentWidth","keysList","setKeyList","liveUpdateCallBack","LIVE_UPDATE","getRunLogs","record_range","current","params","Pending","runDetailAppModel","call","then","stopLiveUpdate","intervalId","window","setTimeout","startLiveUpdate","forceRequestAbort","abort","clearInterval","useEffect","analytics","ANALYTICS_EVENT_KEYS","runDetails","tabs","logs","tabView","values","sortBy","keys","arrayWithEmptyStrings","Array","fill","concat","logsRowsCount","LOAD_MORE","scrollToItem","visibleStartIndex","visibleStopIndex","isEmpty","useResizeObserver","offsetHeight","offsetWidth","ErrorBoundary","BusyLoaderWrapper","isLoading","height","isNil","IllustrationBlock","size","title","itemCount","itemSize","width","overscanCount","initialScrollOffset","onItemsRendered","itemData","onScroll","scrollDirection","classNames","loading"],"mappings":"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","file":"static/js/RunLogsTab.js?version=f258e9ee0897ab3a77cb","sourcesContent":["// Adapted from ansi-to-html by Rob Burns\n// License: https://github.com/rburns/ansi-to-html/blob/master/LICENSE-MIT.txt\nimport _ from 'lodash-es';\n\ninterface Options {\n  /** The default foreground color used when reset color codes are encountered. */\n  fg?: string;\n  /** The default background color used when reset color codes are encountered. */\n  bg?: string;\n  /** Convert newline characters to `<br/>`. */\n  newline?: boolean;\n  /** Can override specific colors or the entire ANSI palette. */\n  colors?: string[] | { [code: number]: string };\n}\n\ntype Stack = string[];\n\nconst defaults: Options = {\n  fg: '#FFF',\n  bg: '#000',\n  newline: false,\n  colors: getDefaultColors(),\n};\n\nfunction getDefaultColors(): Record<string, string> {\n  const colors: Record<string, string> = {\n    0: '#000',\n    1: '#A00',\n    2: '#0A0',\n    3: '#A50',\n    4: '#00A',\n    5: '#A0A',\n    6: '#0AA',\n    7: '#AAA',\n    8: '#555',\n    9: '#F55',\n    10: '#5F5',\n    11: '#FF5',\n    12: '#55F',\n    13: '#F5F',\n    14: '#5FF',\n    15: '#FFF',\n  };\n\n  _.range(0, 6).forEach((red: number) => {\n    _.range(0, 6).forEach((green: number) => {\n      _.range(0, 6).forEach((blue: number) =>\n        setStyleColor(red, green, blue, colors),\n      );\n    });\n  });\n\n  _.range(0, 24).forEach((gray: number) => {\n    const c = gray + 232;\n    const l = toHexString(gray * 10 + 8);\n\n    colors[c] = '#' + l + l + l;\n  });\n\n  return colors;\n}\n\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {Record<string, string>} colors\n */\nfunction setStyleColor(\n  red: number,\n  green: number,\n  blue: number,\n  colors: Record<string, string>,\n): void {\n  const c = 16 + red * 36 + green * 6 + blue;\n  const r = red > 0 ? red * 40 + 55 : 0;\n  const g = green > 0 ? green * 40 + 55 : 0;\n  const b = blue > 0 ? blue * 40 + 55 : 0;\n\n  colors[c] = toColorHexString([r, g, b]);\n}\n\n/**\n * Converts from a number like 15 to a hex string like 'F'\n * @param {number} num\n * @returns {string}\n */\nfunction toHexString(num: number): string {\n  let str = num.toString(16);\n\n  while (str.length < 2) {\n    str = '0' + str;\n  }\n\n  return str;\n}\n\n/**\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\n * @param {[red, green, blue]} ref\n * @returns {string}\n */\nfunction toColorHexString(ref: number[]): string {\n  const results = [];\n\n  for (const r of ref) {\n    results.push(toHexString(r));\n  }\n\n  return '#' + results.join('');\n}\n\n/**\n * @param {Stack} stack\n * @param {string} token\n * @param {string} data\n * @param {Options} options\n */\nfunction generateOutput(\n  stack: Stack,\n  token: string,\n  data: string,\n  options: Options,\n) {\n  let result;\n  if (token === 'text') {\n    result = data;\n  } else if (token === 'display') {\n    result = handleDisplay(stack, +data, options);\n  } else if (token === 'xterm256Foreground') {\n    result = pushForegroundColor(stack, options?.colors?.[+data] as string);\n  } else if (token === 'xterm256Background') {\n    result = pushBackgroundColor(stack, options?.colors?.[+data] as string);\n  } else if (token === 'rgb') {\n    result = handleRgb(stack, data);\n  }\n\n  return result;\n}\n\n/**\n * @param {Stack} stack\n * @param {string} data\n * @returns {string}\n */\nfunction handleRgb(stack: Stack, data: string): string {\n  data = data.substring(2).slice(0, -1);\n  const operation = +data.substr(0, 2);\n\n  const color = data.substring(5).split(';');\n  const rgb = color\n    .map(function (value) {\n      return ('0' + Number(value).toString(16)).substring(-2);\n    })\n    .join('');\n\n  return pushStyle(\n    stack,\n    (operation === 38 ? 'color:#' : 'background-color:#') + rgb,\n  );\n}\n\n/**\n * @param {Stack} stack\n * @param {string} code\n * @param {Options} options\n * @returns {string | number | void }\n */\nfunction handleDisplay(\n  stack: Stack,\n  code: number,\n  options: Options,\n): string | number | void {\n  code = parseInt(`${code}`, 10);\n\n  const codeMap: Record<string, () => void> = {\n    '-1': () => '<br/>',\n    0: () => stack.length && resetStyles(stack),\n    1: () => pushTag(stack, 'b'),\n    3: () => pushTag(stack, 'i'),\n    4: () => pushTag(stack, 'u'),\n    8: () => pushStyle(stack, 'display:none'),\n    9: () => pushTag(stack, 'strike'),\n    22: () =>\n      pushStyle(\n        stack,\n        'font-weight:normal;text-decoration:none;font-style:normal',\n      ),\n    23: () => closeTag(stack, 'i'),\n    24: () => closeTag(stack, 'u'),\n    39: () => pushForegroundColor(stack, options.fg as string),\n    49: () => pushBackgroundColor(stack, options.bg as string),\n    53: () => pushStyle(stack, 'text-decoration:overline'),\n  };\n\n  if (codeMap[code]) {\n    return codeMap[code]();\n  } else if (4 < code && code < 7) {\n    return pushTag(stack, 'blink');\n  } else if (29 < code && code < 38) {\n    return pushForegroundColor(stack, options?.colors?.[code - 30] as string);\n  } else if (39 < code && code < 48) {\n    return pushBackgroundColor(stack, options?.colors?.[code - 40] as string);\n  } else if (89 < code && code < 98) {\n    return pushForegroundColor(\n      stack,\n      options?.colors?.[8 + (code - 90)] as string,\n    );\n  } else if (99 < code && code < 108) {\n    return pushBackgroundColor(\n      stack,\n      options?.colors?.[8 + (code - 100)] as string,\n    );\n  }\n}\n\n/**\n * Clear all the styles\n * @param {Stack} stack\n * @returns {string}\n */\nfunction resetStyles(stack: Stack): string {\n  const stackClone = stack.slice(0);\n\n  stack.length = 0;\n\n  return stackClone\n    .reverse()\n    .map(function (tag) {\n      return '</' + tag + '>';\n    })\n    .join('');\n}\n\n/**\n * @param {Stack} stack\n * @param {string} tag\n * @param {string} [style='']\n * @returns {string}\n */\nfunction pushTag(stack: Stack, tag: string, style?: string): string {\n  if (!style) {\n    style = '';\n  }\n\n  stack.push(tag);\n\n  return `<${tag}${style ? ` style=\"${style}\"` : ''}>`;\n}\n\n/**\n * @param {Stack} stack\n * @param {string} style\n * @returns {string}\n */\nfunction pushStyle(stack: Stack, style: string): string {\n  return pushTag(stack, 'span', style);\n}\n\nfunction pushForegroundColor(stack: Stack, color: string) {\n  return pushTag(stack, 'span', 'color:' + color);\n}\n\nfunction pushBackgroundColor(stack: Stack, color: string) {\n  return pushTag(stack, 'span', 'background-color:' + color);\n}\n\n/**\n * @param {Stack} stack\n * @param {string} style\n * @returns {string | undefined}\n */\nfunction closeTag(stack: Stack, style: string): string | undefined {\n  let last;\n\n  if (stack.slice(-1)[0] === style) {\n    last = stack.pop();\n  }\n\n  if (last) {\n    return '</' + style + '>';\n  }\n}\n\n/**\n * @param {string} text\n * @param {Options} options\n * @param {function} callback\n * @returns {Array}\n */\nfunction tokenize(\n  text: string,\n  options: Options,\n  callback: (token: string, data: string | number) => void,\n) {\n  let ansiMatch = false;\n  const ansiHandler = 3;\n\n  function remove() {\n    return '';\n  }\n\n  function removeXterm256Foreground(z: string, g1: string) {\n    callback('xterm256Foreground', g1);\n    return '';\n  }\n\n  function removeXterm256Background(m: string, g1: string) {\n    callback('xterm256Background', g1);\n    return '';\n  }\n\n  function newline(m: string) {\n    if (options.newline) {\n      callback('display', -1);\n    } else {\n      callback('text', m);\n    }\n\n    return '';\n  }\n\n  function ansiMess(m: string, g1: string) {\n    ansiMatch = true;\n    if (g1.trim().length === 0) {\n      g1 = '0';\n    }\n\n    const g2 = g1.trimRight().split(';');\n\n    for (const g of g2) {\n      callback('display', g);\n    }\n\n    return '';\n  }\n\n  function realText(m: string) {\n    callback('text', m);\n\n    return '';\n  }\n\n  function rgb(m: string) {\n    callback('rgb', m);\n\n    return '';\n  }\n\n  /* eslint no-control-regex:0 */\n  const tokens = [\n    {\n      pattern: /^\\x08+/,\n      sub: remove,\n    },\n    {\n      pattern: /^\\x1b\\[[012]?K/,\n      sub: remove,\n    },\n    {\n      pattern: /^\\x1b\\[\\(B/,\n      sub: remove,\n    },\n    {\n      pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\n      sub: rgb,\n    },\n    {\n      pattern: /^\\x1b\\[38;5;(\\d+)m/,\n      sub: removeXterm256Foreground,\n    },\n    {\n      pattern: /^\\x1b\\[48;5;(\\d+)m/,\n      sub: removeXterm256Background,\n    },\n    {\n      pattern: /^\\n/,\n      sub: newline,\n    },\n    {\n      pattern: /^\\r+\\n/,\n      sub: newline,\n    },\n    {\n      pattern: /^\\r/,\n      sub: newline,\n    },\n    {\n      pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n      sub: ansiMess,\n    },\n    {\n      // CSI n J\n      // ED - Erase in Display Clears part of the screen.\n      // If n is 0 (or missing), clear from cursor to end of screen.\n      // If n is 1, clear from cursor to beginning of the screen.\n      // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\n      // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\n      //   (this feature was added for xterm and is supported by other terminal applications).\n      pattern: /^\\x1b\\[\\d?J/,\n      sub: remove,\n    },\n    {\n      // CSI n ; m f\n      // HVP - Horizontal Vertical Position Same as CUP\n      pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\n      sub: remove,\n    },\n    {\n      // catch-all for CSI sequences?\n      pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n      sub: remove,\n    },\n    {\n      /**\n       * extracts real text - not containing:\n       * - `\\x1b' - ESC - escape (Ascii 27)\n       * - '\\x08' - BS - backspace (Ascii 8)\n       * - `\\n` - Newline - linefeed (LF) (ascii 10)\n       * - `\\r` - Windows Carriage Return (CR)\n       */\n      pattern: /^(([^\\x1b\\x08\\r\\n])+)/,\n      sub: realText,\n    },\n  ];\n\n  function process(\n    handler: {\n      pattern: string | RegExp;\n      sub: (m: string, g1: string) => string;\n    },\n    i: number,\n  ) {\n    if (i > ansiHandler && ansiMatch) {\n      return;\n    }\n\n    ansiMatch = false;\n\n    text = text.replace(handler.pattern, handler.sub);\n  }\n\n  const results1 = [];\n  let { length } = text;\n\n  outer: while (length > 0) {\n    for (let i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\n      const handler = tokens[i];\n      process(handler, i);\n\n      if (text.length !== length) {\n        // We matched a token and removed it from the text. We need to\n        // start matching *all* tokens against the new text.\n        length = text.length;\n        continue outer;\n      }\n    }\n\n    if (text.length === length) {\n      break;\n    }\n    results1.push(0);\n\n    length = text.length;\n  }\n\n  return results1;\n}\n\nconst formatAnsiToHtml = function (\n  input: string | string[],\n  options?: Options,\n) {\n  input = typeof input === 'string' ? [input] : input;\n\n  let optionsA: Options = Object.assign({}, defaults, options);\n  let stack: Stack = [];\n  const buf = [];\n\n  tokenize(input.join(''), optionsA, (token: string, data: string | number) => {\n    const output = generateOutput(stack, token, `${data}`, optionsA);\n\n    if (output) {\n      buf.push(output);\n    }\n  });\n\n  if (stack.length) {\n    buf.push(resetStyles(stack));\n  }\n  return buf.join('');\n};\n\nexport default formatAnsiToHtml;\n","import React from 'react';\n\nimport formatAnsiToHtml from 'utils/formatAnsiToHtml';\n\nfunction LogRow({\n  index,\n  style,\n  data,\n}: {\n  index: number;\n  style: React.CSSProperties;\n  data: {\n    logsList: string[];\n  };\n}) {\n  return (\n    <div style={style}>\n      <pre\n        className='LogRow__line'\n        dangerouslySetInnerHTML={{\n          __html: formatAnsiToHtml(data.logsList?.[index - 1] ?? ''),\n        }}\n      />\n    </div>\n  );\n}\n\nLogRow.displayName = 'RunLogsTab';\n\nexport default React.memo(LogRow);\n","export interface IRunLogsTabProps {\n  isRunLogsLoading: boolean;\n  runHash: string;\n  runLogs: { [key: string]: { index: string; value: string } };\n  inProgress: boolean;\n  updatedLogsCount: number;\n}\n\nexport enum LogsLastRequestEnum {\n  DEFAULT = 'default',\n  LIVE_UPDATE = 'live-update',\n  LOAD_MORE = 'load-more',\n}\n","import React from 'react';\nimport _ from 'lodash-es';\nimport {\n  ListOnItemsRenderedProps,\n  ListOnScrollProps,\n  VariableSizeList as List,\n} from 'react-window';\nimport classNames from 'classnames';\nimport { useResizeObserver } from 'hooks';\n\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport IllustrationBlock from 'components/IllustrationBlock/IllustrationBlock';\nimport { Spinner } from 'components/kit';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\nimport { RequestStatusEnum } from 'config/enums/requestStatusEnum';\n\nimport runDetailAppModel from 'services/models/runs/runDetailAppModel';\nimport * as analytics from 'services/analytics';\n\nimport LogRow from './LogRow';\nimport { IRunLogsTabProps, LogsLastRequestEnum } from './RunLogsTab.d';\n\nimport './RunLogsTab.scss';\n\nconst SINGLE_LINE_HEIGHT = 15;\nconst LOAD_MORE_LOGS_COUNT = 200;\n\nfunction RunLogsTab({\n  isRunLogsLoading,\n  runHash,\n  runLogs,\n  inProgress,\n  updatedLogsCount,\n}: IRunLogsTabProps) {\n  const liveUpdate = React.useRef<{ intervalId: number } | null>(null);\n  const logsContainerRef = React.useRef<any>(null);\n  const listRef = React.useRef<any>({});\n  const runsBatchRequestRef = React.useRef<any>({});\n  const logsRowsData = React.useRef<string[] | null>(null);\n  const [lastRequestType, setLastRequestType] =\n    React.useState<LogsLastRequestEnum>(LogsLastRequestEnum.DEFAULT);\n  const [requestStatus, setRequestStatus] = React.useState<RequestStatusEnum>(\n    RequestStatusEnum.Ok,\n  );\n  const logsRange = React.useRef<[number, number]>([0, 0]);\n  const [scrollOffset, setScrollOffset] = React.useState<number | null>(null);\n  const [visibleRowsRange, setVisibleRowsRange] = React.useState<{\n    visibleStartIndex: number;\n    visibleStopIndex: number;\n  } | null>(null);\n  const [parentHeight, setParentHeight] = React.useState<number>(0);\n  const [parentWidth, setParentWidth] = React.useState<number>(0);\n  const [keysList, setKeyList] = React.useState<number[] | null>(null);\n\n  React.useEffect(() => {\n    getRunLogs({ runHash });\n    analytics.pageView(ANALYTICS_EVENT_KEYS.runDetails.tabs.logs.tabView);\n    return () => {\n      stopLiveUpdate(true);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function liveUpdateCallBack() {\n    setLastRequestType(LogsLastRequestEnum.LIVE_UPDATE);\n    getRunLogs({\n      runHash,\n      record_range: logsRowsData.current\n        ? `${logsRange.current?.[1] > 5 ? logsRange.current?.[1] - 5 : 0}:`\n        : '',\n    });\n  }\n\n  function startLiveUpdate() {\n    if (inProgress) {\n      const intervalId: number = window.setTimeout(liveUpdateCallBack, 3000);\n      liveUpdate.current = {\n        intervalId,\n      };\n    }\n  }\n\n  function getRunLogs(params: { runHash: string; record_range?: string }) {\n    setRequestStatus(RequestStatusEnum.Pending);\n    runsBatchRequestRef.current = runDetailAppModel.getRunLogs(params);\n    runsBatchRequestRef.current.call().then(() => {\n      setRequestStatus(RequestStatusEnum.Ok);\n      stopLiveUpdate();\n      startLiveUpdate();\n    });\n  }\n\n  function stopLiveUpdate(forceRequestAbort: boolean = false) {\n    if (\n      forceRequestAbort ||\n      lastRequestType === LogsLastRequestEnum.LIVE_UPDATE\n    ) {\n      runsBatchRequestRef.current?.abort();\n    }\n    if (liveUpdate.current?.intervalId) {\n      clearInterval(liveUpdate.current.intervalId);\n    }\n  }\n\n  function onScroll({ scrollOffset, scrollDirection }: ListOnScrollProps) {\n    setScrollOffset(scrollOffset);\n    if (\n      scrollOffset <= SINGLE_LINE_HEIGHT &&\n      keysList &&\n      keysList[0] !== 0 &&\n      scrollDirection === 'backward' &&\n      (requestStatus === RequestStatusEnum.Ok ||\n        (requestStatus === RequestStatusEnum.Pending &&\n          lastRequestType === LogsLastRequestEnum.LIVE_UPDATE))\n    ) {\n      stopLiveUpdate();\n      setLastRequestType(LogsLastRequestEnum.LOAD_MORE);\n      getRunLogs({\n        runHash,\n        record_range: `${\n          logsRange.current?.[0] > LOAD_MORE_LOGS_COUNT\n            ? logsRange.current?.[0] - LOAD_MORE_LOGS_COUNT\n            : 0\n        }:${logsRange.current?.[0]}`,\n      });\n    }\n  }\n\n  function onItemsRendered({\n    visibleStartIndex,\n    visibleStopIndex,\n  }: ListOnItemsRenderedProps) {\n    setVisibleRowsRange({ visibleStartIndex, visibleStopIndex });\n  }\n\n  React.useEffect(() => {\n    if (!inProgress) {\n      stopLiveUpdate();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inProgress]);\n\n  React.useEffect(() => {\n    const values: Array<{ index: string; value: string }> = _.sortBy(\n      Object.values(runLogs ?? {}),\n      'index',\n    );\n    const keys: number[] = _.sortBy(\n      values.map((value: { index: string; value: string }) => +value.index),\n    );\n    const arrayWithEmptyStrings: string[] = Array(3).fill('');\n    logsRange.current = [keys[0], keys[keys.length - 1]];\n    setKeyList(keys);\n    logsRowsData.current = values\n      .map((value: { index: string; value: string }) => value.value)\n      .concat(arrayWithEmptyStrings);\n  }, [runLogs]);\n\n  React.useEffect(() => {\n    const logsRowsCount = logsRowsData.current?.length ?? 0;\n    if (lastRequestType === LogsLastRequestEnum.LOAD_MORE && visibleRowsRange) {\n      listRef.current?.scrollToItem?.(\n        visibleRowsRange.visibleStartIndex + updatedLogsCount,\n        'start',\n      );\n      setLastRequestType(LogsLastRequestEnum.DEFAULT);\n    } else if (\n      (lastRequestType === LogsLastRequestEnum.LIVE_UPDATE &&\n        visibleRowsRange &&\n        visibleRowsRange?.visibleStopIndex + updatedLogsCount >=\n          logsRowsCount - 1) ||\n      lastRequestType === LogsLastRequestEnum.DEFAULT\n    ) {\n      if (!_.isEmpty(keysList)) {\n        listRef.current?.scrollToItem?.(logsRowsCount, 'end');\n      }\n    } else {\n      listRef.current?.scrollToItem?.(\n        visibleRowsRange?.visibleStartIndex ?? 0,\n        'start',\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [logsRowsData.current, keysList]);\n\n  React.useEffect(() => {\n    if (\n      lastRequestType === LogsLastRequestEnum.DEFAULT &&\n      parentHeight &&\n      parentWidth\n    ) {\n      if (!_.isEmpty(keysList)) {\n        listRef.current?.scrollToItem?.(\n          visibleRowsRange?.visibleStartIndex ?? 0,\n          'start',\n        );\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parentHeight, parentWidth]);\n\n  useResizeObserver(() => {\n    if (logsContainerRef.current) {\n      setParentHeight(logsContainerRef.current.offsetHeight);\n      setParentWidth(logsContainerRef.current.offsetWidth);\n    }\n  }, logsContainerRef);\n\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper\n        isLoading={\n          isRunLogsLoading && lastRequestType === LogsLastRequestEnum.DEFAULT\n        }\n        className='RunDetailTabLoader'\n        height='100%'\n      >\n        {!_.isEmpty(runLogs) &&\n        !_.isEmpty(keysList) &&\n        !_.isNil(logsRowsData.current) ? (\n          <div className='RunDetailLogsTabWrapper'>\n            <div className='RunDetailLogsTab'>\n              <div className='Logs' ref={logsContainerRef}>\n                <div className='Logs__wrapper'>\n                  <List\n                    ref={listRef}\n                    key={`${parentHeight}${parentWidth}`}\n                    height={parentHeight || 100}\n                    itemCount={logsRowsData.current?.length + 1}\n                    itemSize={() => SINGLE_LINE_HEIGHT}\n                    width={'100%'}\n                    overscanCount={100}\n                    initialScrollOffset={\n                      scrollOffset ??\n                      logsRowsData.current?.length * SINGLE_LINE_HEIGHT\n                    }\n                    onItemsRendered={onItemsRendered}\n                    itemData={{\n                      logsList: logsRowsData.current,\n                    }}\n                    onScroll={onScroll}\n                  >\n                    {LogRow}\n                  </List>\n                  <div\n                    className={classNames('overlay', {\n                      loading:\n                        isRunLogsLoading &&\n                        lastRequestType === LogsLastRequestEnum.LOAD_MORE,\n                    })}\n                  >\n                    <Spinner size={24} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <IllustrationBlock\n            size='xLarge'\n            className='RunDetailTabLoader'\n            title='No Logs'\n          />\n        )}\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nRunLogsTab.displayName = 'RunLogsTab';\n\nexport default React.memo(RunLogsTab);\n","import RunLogsTab from './RunLogsTab';\n\nexport * from './RunLogsTab.d';\nexport default RunLogsTab;\n"],"sourceRoot":""}