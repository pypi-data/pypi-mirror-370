[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "datamanager-hjy"
version = "0.3.0"
description = "通用的数据管理脚手架，支持多数据库、配置驱动、高性能"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "hjy", email = "hjy@example.com"}
]
maintainers = [
    {name = "hjy", email = "hjy@example.com"}
]
keywords = ["database", "orm", "sqlalchemy", "mysql", "postgresql", "sqlite", "data-management"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "sqlalchemy>=2.0.0,<3.0.0",
    "pymysql>=1.0.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "redis>=4.5.0,<5.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "loguru>=0.7.0,<1.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "typing-extensions>=4.0.0,<5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    "flake8>=6.0.0,<7.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]
mysql = [
    "pymysql>=1.0.0,<2.0.0",
    "cryptography>=3.4.0,<4.0.0",
]
postgresql = [
    "psycopg2-binary>=2.9.0,<3.0.0",
]
sqlite = [
    # SQLite is included in Python standard library
]
redis = [
    "redis>=4.5.0,<5.0.0",
    "hiredis>=2.0.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/hjy/datamanager-hjy"
Documentation = "https://datamanager-hjy.readthedocs.io/"
Repository = "https://github.com/hjy/datamanager-hjy.git"
"Bug Tracker" = "https://github.com/hjy/datamanager_hjy/issues"
"Source Code" = "https://github.com/hjy/datamanager_hjy"
"Download" = "https://pypi.org/project/datamanager-hjy/#files"

[project.scripts]
datamanager = "datamanager_hjy.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["datamanager_hjy*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["datamanager_hjy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=datamanager_hjy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["datamanager_hjy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
