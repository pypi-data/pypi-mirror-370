[project]
name = "fostrom"
version = "0.0.7"
description = "Fostrom Device SDK"
readme = "readme.md"
authors = [{ name = "Fostrom", email = "support@fostrom.io" }]
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
dependencies = []


keywords = [
    "fostrom",
    "device",
    "sdk",
    "iot",
    "cloud",
    "fleet",
    "mqtt",
    "websockets",
    "actions",
    "datapoint",
    "message",
    "hardware",
    "raspberry"
]


classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.15",
    "Typing :: Typed",
]


[project.urls]
"Fostrom" = "https://fostrom.io"
"SDK Docs" = "https://docs.fostrom.io/sdk/py"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/fostrom"]
exclude = ["src/fostrom/.agent"]

[tool.hatch.build]
include = ["src/fostrom"]
exclude = ["src/fostrom/.agent"]


[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src", "tests"]


[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade (modernize code)
    "B",    # flake8-bugbear (find bugs)
    "C4",   # flake8-comprehensions
    # "T20",  # flake8-print (no print statements)
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
]
ignore = []


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = [
    "--cov=src/fostrom",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v"
]


[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
files = ["src", "tests"]


[tool.coverage.run]
branch = true
source = ["src"]


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]


[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.2",
]
