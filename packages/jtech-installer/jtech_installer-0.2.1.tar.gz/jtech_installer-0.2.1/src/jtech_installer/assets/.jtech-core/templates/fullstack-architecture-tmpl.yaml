# <!-- Powered by JTECH™ Core -->
template:
  id: fullstack-architecture-template-v2
  name: Documento de Arquitetura Fullstack
  version: 2.0
  output:
    format: markdown
    filename: docs/architecture.md
    title: "Documento de Arquitetura Fullstack {{project_name}}"

workflow:
  mode: interactive
  elicitation: advanced-elicitation

sections:
  - id: introduction
    title: Introdução
    instruction: |
      Se disponível, revise todos os documentos relevantes fornecidos para coletar todo o contexto relevante antes de começar. No mínimo, você deve ter acesso a docs/prd.md e docs/front-end-spec.md. Peça ao usuário por qualquer documento que você precise mas não consegue localizar. Este template cria uma arquitetura unificada que cobre preocupações tanto de backend quanto de frontend para orientar desenvolvimento fullstack orientado por IA.
    elicit: true
    content: |
      Este documento delineia a arquitetura fullstack completa para {{project_name}}, incluindo sistemas backend, implementação frontend e sua integração. Serve como a fonte única da verdade para desenvolvimento orientado por IA, garantindo consistência em toda a stack tecnológica.

      Esta abordagem unificada combina o que tradicionalmente seriam documentos separados de arquitetura backend e frontend, simplificando o processo de desenvolvimento para aplicações fullstack modernas onde essas preocupações estão cada vez mais interligadas.
    sections:
      - id: starter-template
        title: Template Inicial ou Projeto Existente
        instruction: |
          Antes de prosseguir com o design da arquitetura, verifique se o projeto é baseado em algum template inicial ou codebase existente:

          1. Revise o PRD e outros documentos para menções de:
          - Templates iniciais fullstack (ex: T3 Stack, starters MEAN/MERN, templates Django + React)
          - Templates de monorepo (ex: starters Nx, Turborepo)
          - Starters específicos de plataforma (ex: templates Vercel, starters AWS Amplify)
          - Projetos existentes sendo estendidos ou clonados

          2. Se templates iniciais ou projetos existentes forem mencionados:
          - Peça ao usuário para fornecer acesso (links, repos ou arquivos)
          - Analise para entender escolhas pré-configuradas e restrições
          - Note qualquer decisão arquitetônica já tomada
          - Identifique o que pode ser modificado vs o que deve ser mantido

          3. Se nenhum starter for mencionado mas este é um projeto greenfield:
          - Sugira starters fullstack apropriados baseados nas preferências técnicas
          - Considere opções específicas de plataforma (Vercel, AWS, etc.)
          - Deixe o usuário decidir se quer usar um

          4. Documente a decisão e quaisquer restrições que ela impõe

          Se nenhum, declare "N/A - projeto greenfield"

      - id: changelog
        title: Log de Mudanças
        type: table
        columns: [Data, Versão, Descrição, Autor]
        instruction: Rastreie versões e mudanças do documento

  - id: high-level-architecture
    title: Arquitetura de Alto Nível
    instruction: Esta seção contém múltiplas subseções que estabelecem a fundação. Apresente todas as subseções juntas, então elicite feedback sobre a seção completa.
    elicit: true
    sections:
      - id: technical-summary
        title: Resumo Técnico
        instruction: |
          Forneça uma visão geral abrangente (4-6 frases) cobrindo:
          - Estilo arquitetônico geral e abordagem de deployment
          - Escolhas de framework frontend e tecnologia backend
          - Pontos-chave de integração entre frontend e backend
          - Plataforma de infraestrutura e serviços
          - Como esta arquitetura alcança os objetivos do PRD
      - id: platform-infrastructure
        title: Escolha de Plataforma e Infraestrutura
        instruction: |
          Baseado nos requisitos do PRD e suposições técnicas, faça uma recomendação de plataforma:

          1. Considere padrões comuns (não uma lista exaustiva, use seu melhor julgamento e pesquise na web conforme necessário para tendências emergentes):
          - **Vercel + Supabase**: Para desenvolvimento rápido com Next.js, auth/storage embutidos
          - **AWS Full Stack**: Para escala empresarial com Lambda, API Gateway, S3, Cognito
          - **Azure**: Para ecossistemas .NET ou ambientes empresariais Microsoft
          - **Google Cloud**: Para aplicações pesadas em ML/AI ou integração com ecossistema Google

          2. Apresente 2-3 opções viáveis com prós/contras claros
          3. Faça uma recomendação com justificativa
          4. Obtenha confirmação explícita do usuário

          Documente a escolha e serviços-chave que serão usados.
        template: |
          **Plataforma:** {{selected_platform}}
          **Serviços-Chave:** {{core_services_list}}
          **Host de Deployment e Regiões:** {{regions}}
      - id: repository-structure
        title: Estrutura do Repositório
        instruction: |
          Defina a abordagem de repositório baseada nos requisitos do PRD e escolha de plataforma, explique sua justificativa ou faça perguntas ao usuário se incerto:

          1. Para apps fullstack modernos, monorepo é frequentemente preferido
          2. Considere ferramentas (Nx, Turborepo, Lerna, npm workspaces)
          3. Defina limites de package/app
          4. Planeje código compartilhado entre frontend e backend
        template: |
          **Estrutura do Repositório:** {{repo_structure}}
          
          **Organização de Packages:**
          ```
          {{package_organization}}
          ```
          
          **Código Compartilhado:** {{shared_code_strategy}}
          
          **Ferramentas de Build:** {{build_tools}}

  - id: frontend-architecture
    title: Arquitetura Frontend
    sections:
      - id: frontend-framework
        title: Framework Frontend
        template: |
          **Framework Principal:** {{frontend_framework}}
          
          **Versão:** {{frontend_version}}
          
          **Justificativa:** {{frontend_justification}}
          
          **Bibliotecas-Chave:** {{frontend_key_libraries}}

      - id: state-management
        title: Gerenciamento de Estado
        template: |
          **Solução de Estado:** {{state_management_solution}}
          
          **Padrão:** {{state_management_pattern}}
          
          **Estrutura de Estado:** {{state_structure}}

      - id: routing-navigation
        title: Roteamento e Navegação
        template: |
          **Biblioteca de Roteamento:** {{routing_library}}
          
          **Estrutura de Rotas:** {{route_structure}}
          
          **Estratégia de Navegação:** {{navigation_strategy}}

      - id: component-architecture
        title: Arquitetura de Componentes
        template: |
          **Sistema de Design:** {{design_system}}
          
          **Biblioteca de Componentes:** {{component_library}}
          
          **Padrões de Composição:** {{composition_patterns}}

      - id: styling-approach
        title: Abordagem de Estilização
        template: |
          **Estratégia de CSS:** {{css_strategy}}
          
          **Framework de CSS:** {{css_framework}}
          
          **Sistema de Temas:** {{theming_system}}

  - id: backend-architecture
    title: Arquitetura Backend
    sections:
      - id: backend-framework
        title: Framework Backend
        template: |
          **Framework Principal:** {{backend_framework}}
          
          **Runtime/Plataforma:** {{backend_runtime}}
          
          **Justificativa:** {{backend_justification}}

      - id: api-design
        title: Design de API
        template: |
          **Estilo de API:** {{api_style}}
          
          **Documentação:** {{api_documentation}}
          
          **Versionamento:** {{api_versioning}}
          
          **Autenticação:** {{api_authentication}}

      - id: database-design
        title: Design de Banco de Dados
        template: |
          **Banco de Dados Principal:** {{primary_database}}
          
          **ORM/Query Builder:** {{orm_solution}}
          
          **Esquema de Dados:** {{data_schema}}
          
          **Estratégia de Migração:** {{migration_strategy}}

      - id: business-logic
        title: Lógica de Negócio
        template: |
          **Padrões Arquiteturais:** {{architectural_patterns}}
          
          **Estrutura de Serviços:** {{service_structure}}
          
          **Validação de Dados:** {{data_validation}}

  - id: integration-layer
    title: Camada de Integração
    sections:
      - id: api-integration
        title: Integração de API
        template: |
          **Cliente HTTP:** {{http_client}}
          
          **Tratamento de Erros:** {{error_handling}}
          
          **Cache de API:** {{api_caching}}
          
          **Retry/Resilience:** {{retry_strategy}}

      - id: real-time-communication
        title: Comunicação em Tempo Real
        template: |
          **Tecnologia WebSocket:** {{websocket_technology}}
          
          **Casos de Uso:** {{realtime_use_cases}}
          
          **Fallbacks:** {{realtime_fallbacks}}

      - id: data-synchronization
        title: Sincronização de Dados
        template: |
          **Estratégia de Sync:** {{sync_strategy}}
          
          **Conflitos de Dados:** {{conflict_resolution}}
          
          **Modo Offline:** {{offline_support}}

  - id: security-architecture
    title: Arquitetura de Segurança
    sections:
      - id: authentication-authorization
        title: Autenticação e Autorização
        template: |
          **Estratégia de Auth:** {{auth_strategy}}
          
          **Provedores de Identidade:** {{identity_providers}}
          
          **Gerenciamento de Sessão:** {{session_management}}
          
          **Controle de Acesso:** {{access_control}}

      - id: data-security
        title: Segurança de Dados
        template: |
          **Criptografia:** {{encryption_strategy}}
          
          **Dados Sensíveis:** {{sensitive_data_handling}}
          
          **Privacidade:** {{privacy_measures}}

      - id: security-monitoring
        title: Monitoramento de Segurança
        template: |
          **Logging de Segurança:** {{security_logging}}
          
          **Detecção de Ameaças:** {{threat_detection}}
          
          **Resposta a Incidentes:** {{incident_response}}

  - id: deployment-operations
    title: Deployment e Operações
    sections:
      - id: deployment-strategy
        title: Estratégia de Deployment
        template: |
          **Pipeline de CI/CD:** {{cicd_pipeline}}
          
          **Ambientes:** {{environments}}
          
          **Estratégia de Release:** {{release_strategy}}
          
          **Rollback:** {{rollback_strategy}}

      - id: monitoring-observability
        title: Monitoramento e Observabilidade
        template: |
          **Logging:** {{logging_strategy}}
          
          **Métricas:** {{metrics_collection}}
          
          **Tracing:** {{distributed_tracing}}
          
          **Alertas:** {{alerting_strategy}}

      - id: performance-optimization
        title: Otimização de Performance
        template: |
          **Estratégias de Cache:** {{caching_strategies}}
          
          **CDN:** {{cdn_strategy}}
          
          **Otimização de Bundle:** {{bundle_optimization}}
          
          **Métricas de Performance:** {{performance_metrics}}

  - id: scalability-reliability
    title: Escalabilidade e Confiabilidade
    template: |
      **Estratégia de Escala:** {{scaling_strategy}}
      
      **Load Balancing:** {{load_balancing}}
      
      **Backup e Recovery:** {{backup_recovery}}
      
      **Disaster Recovery:** {{disaster_recovery}}

  - id: development-workflow
    title: Fluxo de Desenvolvimento
    template: |
      **Ambiente de Desenvolvimento:** {{dev_environment}}
      
      **Padrões de Código:** {{code_standards}}
      
      **Estratégia de Testes:** {{testing_strategy}}
      
      **Code Review:** {{code_review_process}}

validation:
  required_sections:
    - high-level-architecture
    - frontend-architecture
    - backend-architecture
    - integration-layer
    - security-architecture
  
  review_prompts:
    - "A arquitetura suporta todos os requisitos do PRD?"
    - "A integração frontend-backend é bem definida?"
    - "As considerações de segurança são abrangentes?"
    - "A estratégia de deployment é realista?"
    - "A arquitetura pode escalar conforme necessário?"
