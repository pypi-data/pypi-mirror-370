# <!-- Powered by JTECH™ Core -->
template:
  id: frontend-architecture-template-v2
  name: Documento de Arquitetura Frontend
  version: 2.0
  output:
    format: markdown
    filename: docs/ui-architecture.md
    title: "Documento de Arquitetura Frontend {{project_name}}"

workflow:
  mode: interactive
  elicitation: advanced-elicitation

sections:
  - id: template-framework-selection
    title: Seleção de Template e Framework
    instruction: |
      Revise os documentos fornecidos incluindo PRD, Especificação UI/UX, e Documento de Arquitetura principal. Foque na extração de detalhes de implementação técnica necessários para ferramentas de frontend orientadas por IA e agentes de desenvolvimento. Peça ao usuário por qualquer um desses documentos se você não conseguir localizar e não foram fornecidos.

      Antes de prosseguir com o design da arquitetura frontend, verifique se o projeto está usando um template inicial de frontend ou codebase existente:

      1. Revise o PRD, documento de arquitetura principal e briefing de brainstorming para menções de:
         - Templates iniciais de frontend (ex: Create React App, Next.js, Vite, Vue CLI, Angular CLI, etc.)
         - Kit de UI ou starters de biblioteca de componentes
         - Projetos frontend existentes sendo usados como fundação
         - Templates de dashboard admin ou outros starters especializados
         - Implementações de design system

      2. Se um template inicial de frontend ou projeto existente for mencionado:
         - Peça ao usuário para fornecer acesso através de um destes métodos:
           - Link para a documentação do template inicial
           - Upload/anexar os arquivos do projeto (para projetos pequenos)
           - Compartilhar um link para o repositório do projeto
         - Analise o projeto inicial/existente para entender:
           - Dependências pré-instaladas e versões
           - Estrutura de pastas e organização de arquivos
           - Componentes e utilitários embutidos
           - Abordagem de estilização (CSS modules, styled-components, Tailwind, etc.)
           - Configuração de gerenciamento de estado (se houver)
           - Ferramentas de build e configuração
           - Padrões de roteamento
           - Estrutura de testes
         - Use esta análise para adaptar suas recomendações aos padrões estabelecidos

      3. Se nenhum template inicial for especificado:
         - Prossiga com recomendações baseadas nos requisitos do projeto
         - Documente todas as decisões e justificativas de framework

    sections:
      - id: framework-choice
        title: Escolha de Framework
        instruction: |
          Baseado na análise, documente a escolha de framework e justificativa.
        template: |
          **Framework Principal:** {{main_framework}}
          
          **Versão:** {{framework_version}}
          
          **Justificativa:** {{framework_justification}}
          
          **Template/Starter Usado:** {{starter_template}}
          
          **Configurações Específicas:** {{specific_configurations}}

  - id: component-architecture
    title: Arquitetura de Componentes
    sections:
      - id: component-hierarchy
        title: Hierarquia de Componentes
        template: |
          **Estrutura de Componentes:**
          ```
          {{component_structure}}
          ```

          **Padrões de Composição:**
          {{composition_patterns}}

          **Estratégia de Reutilização:**
          {{reusability_strategy}}

      - id: design-system
        title: Design System
        template: |
          **Sistema de Design Usado:** {{design_system}}
          
          **Biblioteca de Componentes:** {{component_library}}
          
          **Tokens de Design:** {{design_tokens}}
          
          **Guias de Estilo:** {{style_guides}}

  - id: state-management
    title: Gerenciamento de Estado
    template: |
      **Solução de Estado:** {{state_solution}}
      
      **Padrão de Arquitetura:** {{state_architecture_pattern}}
      
      **Estrutura de Estado:**
      ```
      {{state_structure}}
      ```

      **Estratégia de Persistência:** {{persistence_strategy}}

  - id: routing-navigation
    title: Roteamento e Navegação
    template: |
      **Biblioteca de Roteamento:** {{routing_library}}
      
      **Estrutura de Rotas:**
      ```
      {{route_structure}}
      ```

      **Estratégias de Navegação:** {{navigation_strategies}}
      
      **Guardas de Rota:** {{route_guards}}

  - id: styling-theming
    title: Estilização e Temas
    template: |
      **Abordagem de CSS:** {{css_approach}}
      
      **Sistema de Temas:** {{theming_system}}
      
      **Responsividade:** {{responsive_strategy}}
      
      **Otimizações de CSS:** {{css_optimizations}}

  - id: data-integration
    title: Integração de Dados
    template: |
      **Estratégia de Fetch de Dados:** {{data_fetching_strategy}}
      
      **Gerenciamento de Cache:** {{cache_management}}
      
      **Tratamento de Erros:** {{error_handling}}
      
      **Loading States:** {{loading_states}}

  - id: performance-optimization
    title: Otimização de Performance
    template: |
      **Estratégias de Bundle:** {{bundle_strategies}}
      
      **Code Splitting:** {{code_splitting}}
      
      **Lazy Loading:** {{lazy_loading}}
      
      **Otimizações de Imagem:** {{image_optimizations}}
      
      **Metas de Performance:** {{performance_targets}}

  - id: testing-strategy
    title: Estratégia de Testes
    template: |
      **Framework de Testes:** {{testing_framework}}
      
      **Tipos de Teste:** {{test_types}}
      
      **Cobertura de Testes:** {{test_coverage}}
      
      **Estratégia de E2E:** {{e2e_strategy}}

  - id: build-deployment
    title: Build e Deployment
    template: |
      **Ferramentas de Build:** {{build_tools}}
      
      **Processo de Build:** {{build_process}}
      
      **Estratégia de Deployment:** {{deployment_strategy}}
      
      **Ambientes:** {{environments}}

validation:
  required_sections:
    - template-framework-selection
    - component-architecture
    - state-management
    - performance-optimization
  
  review_prompts:
    - "A arquitetura suporta os requisitos de UX especificados?"
    - "As escolhas de framework são justificadas e apropriadas?"
    - "A estratégia de performance atende às metas do projeto?"
    - "A estrutura de componentes promove reutilização?"
