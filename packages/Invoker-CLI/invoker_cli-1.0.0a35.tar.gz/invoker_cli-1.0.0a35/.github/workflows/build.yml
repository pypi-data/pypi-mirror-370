name: Build Binaries

on:
  release:
    types: [ created ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Nuitka and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka zstandard
          pip install -r requirements.txt

      - name: Build executable on Windows
        if: matrix.os == 'windows-latest'
        run: |
          nuitka --standalone --onefile --lto=yes --output-filename="invoker-cli-${{ runner.os }}" src/invoker_cli.py `
          --msvc=latest --assume-yes-for-downloads --follow-imports --include-package=cryptography `
          --include-package-data=cryptography --include-package=argon2 --include-package-data=argon2 --static-libpython=yes

      - name: Build executable
        if: matrix.os != 'windows-latest'
        run: |
          nuitka --standalone --onefile --lto=yes --output-filename="invoker-cli-${{ runner.os }}" src/invoker_cli.py \
           --include-package=cryptography --include-package-data=cryptography --include-package=argon2 \
          --include-package-data=argon2 --static-libpython=yes

      - name: Upload release asset (Linux & macOS)
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            invoker-cli-${{ runner.os }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            invoker-cli-${{ runner.os }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
