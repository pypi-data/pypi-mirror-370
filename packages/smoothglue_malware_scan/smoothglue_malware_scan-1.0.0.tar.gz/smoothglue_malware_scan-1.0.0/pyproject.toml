[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "smoothglue_malware_scan"
version = "1.0.0"
dependencies = [
    "clamd>=1.0.2"
]
description = "A Python utility wrapper for malware scanning libraries"
readme = "README.md"
requires-python = ">= 3.9"
authors = [
    { name = "SmoothGlue" },
]

[tool.setuptools]
packages = ["smoothglue_malware_scan", "smoothglue_malware_scan.scanners"]

[project.urls]
Homepage = "https://braingu.com/solutions/smoothglue/"

[tool.poetry]
name = "smoothglue_malware_scan"
version = "1.0.0"
description = "A Python utility wrapper for malware scanning libraries"
authors = ["BrainGu <smoothglue@braingu.com>"]
maintainers = ["BrainGu <smoothglue@braingu.com>"]
license = "Proprietary"
readme = "README.md"
homepage = "https://braingu.com/solutions/smoothglue/"
keywords = [
    "Python",
    "Malware Scan",
    "ClamAV",
    "Security"
]
packages = [
    { include = "smoothglue_malware_scan" }
]

[tool.poetry.dependencies]
python = "^3.9"
clamd = "^1.0.2"

[tool.poetry.group.dev.dependencies]
# Code checks
black = "^24.4.2"
coverage = "^7.5.1"
flake8 = "^7.0.0"
isort = "^5.13.2"
pylint = "^3.1.1"
#Dev tools
python-semantic-release = "^9.7.2"

[tool.poetry.urls]
issues = "https://braingu.com/support"

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"

[tool.black]
line-length = 100
extend-exclude = '''
setup.py|build|venv
'''

[tool.coverage.run]
omit = [
    "venv/*",
    "build/*",
    "*tests/*",
    "tests/*",
]
command_line = "-m unittest discover"

[tool.isort]
profile = "black"
skip = [
    "venv/",
    "build/"
]
skip_glob = []

[tool.pylint.main]
ignore-paths = [
    "^.*\\.cache\\/.*$",
    "^.*python_packages\\/.*$",
    "^.*resources\\/.*$",
    "^.*tests\\/.*$",
    "^.*venv\\/.*$"
]
ignore = ["venv", ".vscode", ".cache"]
extension-pkg-whitelist = ["math", "_datetime"]
recursive = true
fail-under = 10
max-attributes = 15
no-docstring-rgx = "(?:^_|^[Tt]est.+|Mock.+)"


[tool.pylint.design]
max-parents = 15

[tool.pylint.typecheck]
ignored-classes = ["Client", "WSGIRequest"]

[tool.pylint."messages control"]
disable = [
    "C0103",
    "C0114",
    "C0115",
    "C0116",
    "C0201",
    "C0209",
    "C0330",
    "E0012",
    "E1101",
    "R0903",
    "R1725z",
    "W0212",
    "W0511",
    "W0613",
    "W0718",
    "duplicate-code",
    "invalid-name",
    "missing-docstring",
    "pointless-string-statement"
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.reports]
output-format = "colorized"
reports = false
score = true

