[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langchain-fmp-data"
version = "0.1.1"
description = "An integration package connecting FmpData and LangChain"
authors = []
readme = "README.md"
repository = "https://github.com/MehdiZare/langchain-fmp-data"
license = "MIT"

[tool.mypy]
disallow_untyped_defs = "True"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "W"]
ignore = ["E501"]  # Line too long - handled by formatter

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.poetry.urls]
"Source Code" = "https://github.com/MehdiZare/langchain-fmp-data"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
langchain-core = "^0.3.15"
fmp-data = { extras = ["langchain"], version = "^1.0.0" }
langgraph = "^0.2.62"
langchain-openai = "^0.3.0"
faiss-cpu = "^1.9.0.post1"
langchain = "^0.3.14"
langchain-community = "^0.3.14"


[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.5"
mypy = "^1.14.1"
bandit = "^1.8.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
pytest-socket = "^0.7.0"
pytest-watcher = "^0.4.3"
langchain-tests = "^0.3.5"
pytest-cov = "^6.0.0"

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.6"

[tool.poetry.group.test_integration.dependencies]

[tool.poetry.group.lint.dependencies]

[tool.poetry.group.typing.dependencies]
mypy = "^1.10"
