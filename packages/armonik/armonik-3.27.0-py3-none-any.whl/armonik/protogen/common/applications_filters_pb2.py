# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: applications_filters.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import applications_fields_pb2 as applications__fields__pb2
from . import filters_common_pb2 as filters__common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1a\x61pplications_filters.proto\x12 armonik.api.grpc.v1.applications\x1a\x19\x61pplications_fields.proto\x1a\x14\x66ilters_common.proto\"\x9f\x01\n\x0b\x46ilterField\x12\x41\n\x05\x66ield\x18\x01 \x01(\x0b\x32\x32.armonik.api.grpc.v1.applications.ApplicationField\x12:\n\rfilter_string\x18\x02 \x01(\x0b\x32!.armonik.api.grpc.v1.FilterStringH\x00\x42\x11\n\x0fvalue_condition\"H\n\nFiltersAnd\x12:\n\x03\x61nd\x18\x01 \x03(\x0b\x32-.armonik.api.grpc.v1.applications.FilterField\"C\n\x07\x46ilters\x12\x38\n\x02or\x18\x01 \x03(\x0b\x32,.armonik.api.grpc.v1.applications.FiltersAndBM\n(fr.aneo.armonik.api.grpc.v1.applications\xaa\x02 ArmoniK.Api.gRPC.V1.Applicationsb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'applications_filters_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n(fr.aneo.armonik.api.grpc.v1.applications\252\002 ArmoniK.Api.gRPC.V1.Applications'
  _globals['_FILTERFIELD']._serialized_start=114
  _globals['_FILTERFIELD']._serialized_end=273
  _globals['_FILTERSAND']._serialized_start=275
  _globals['_FILTERSAND']._serialized_end=347
  _globals['_FILTERS']._serialized_start=349
  _globals['_FILTERS']._serialized_end=416
# @@protoc_insertion_point(module_scope)
