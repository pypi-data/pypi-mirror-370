{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MCP-Eval Configuration",
  "description": "Configuration schema for MCP-Eval test suites",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Reference to this JSON schema for validation and autocomplete"
    },
    "name": {
      "type": "string",
      "description": "Name of the test suite",
      "default": "MCP-Eval Test Suite"
    },
    "description": {
      "type": "string",
      "description": "Description of what this test suite evaluates",
      "default": "Comprehensive evaluation of MCP servers"
    },
    "servers": {
      "type": "object",
      "description": "MCP server configurations",
      "additionalProperties": {
        "$ref": "#/definitions/MCPServerSettings"
      },
      "default": {
        "default": {
          "command": "uvx",
          "args": [],
          "env": {}
        }
      }
    },
    "agents": {
      "type": "object",
      "description": "Agent configurations for test execution",
      "additionalProperties": {
        "$ref": "#/definitions/AgentConfig"
      },
      "default": {
        "default": {
          "name": "default_agent",
          "instruction": "You are a helpful test agent.",
          "llm_factory": "AnthropicAugmentedLLM",
          "model": "claude-3-5-haiku-20241022",
          "max_iterations": 5
        }
      }
    },
    "judge": {
      "$ref": "#/definitions/JudgeConfig",
      "default": {
        "model": "claude-3-5-haiku-20241022",
        "min_score": 0.8,
        "max_tokens": 1000,
        "system_prompt": "You are an expert evaluator of AI assistant responses."
      }
    },
    "metrics": {
      "$ref": "#/definitions/MetricsConfig",
      "default": {
        "collect": [
          "response_time",
          "tool_coverage",
          "iteration_count",
          "token_usage",
          "cost_estimate"
        ],
        "token_prices": {
          "claude-3-5-haiku-20241022": {
            "input": 0.00000025,
            "output": 0.00000125
          },
          "claude-sonnet-4-20250514": {
            "input": 0.000003,
            "output": 0.000015
          },
          "gpt-4-turbo": {
            "input": 0.00001,
            "output": 0.00003
          }
        }
      }
    },
    "reporting": {
      "$ref": "#/definitions/ReportingConfig",
      "default": {
        "formats": [
          "json",
          "markdown"
        ],
        "output_dir": "./test-reports",
        "include_traces": true
      }
    },
    "otel": {
      "$ref": "#/definitions/OTelConfig",
      "default": {
        "enabled": true,
        "exporter_type": "file",
        "exporter_config": {},
        "service_name": "mcp-eval"
      }
    },
    "execution": {
      "$ref": "#/definitions/ExecutionConfig",
      "default": {
        "max_concurrency": 5,
        "timeout_seconds": 300,
        "retry_failed": false
      }
    },
    "default_server": {
      "type": [
        "string",
        "null"
      ],
      "description": "Name of the default server to use"
    },
    "agent_config": {
      "type": [
        "object",
        "null"
      ],
      "description": "Runtime agent configuration overrides"
    }
  },
  "definitions": {
    "MCPServerSettings": {
      "type": "object",
      "description": "Configuration for an individual MCP server",
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Name of the server"
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "Description of the server's purpose"
        },
        "transport": {
          "type": "string",
          "enum": [
            "stdio",
            "sse",
            "streamable_http",
            "websocket"
          ],
          "default": "stdio",
          "description": "Transport mechanism for server communication"
        },
        "command": {
          "type": [
            "string",
            "null"
          ],
          "description": "Command to execute the server (e.g., 'uvx', 'npx', 'python')"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the server command",
          "default": []
        },
        "url": {
          "type": [
            "string",
            "null"
          ],
          "description": "URL for SSE, Streamable HTTP, or WebSocket transport"
        },
        "headers": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          },
          "description": "HTTP headers for SSE or Streamable HTTP requests"
        },
        "http_timeout_seconds": {
          "type": [
            "integer",
            "null"
          ],
          "description": "HTTP request timeout in seconds"
        },
        "read_timeout_seconds": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Timeout for waiting for new events from server"
        },
        "terminate_on_close": {
          "type": "boolean",
          "default": true,
          "description": "Whether to terminate session on connection close (Streamable HTTP)"
        },
        "auth": {
          "$ref": "#/definitions/MCPServerAuthSettings"
        },
        "roots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MCPRootSettings"
          },
          "description": "Root directories this server has access to"
        },
        "env": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables to pass to the server process"
        }
      }
    },
    "MCPServerAuthSettings": {
      "type": "object",
      "description": "Authentication configuration for a server",
      "properties": {
        "api_key": {
          "type": [
            "string",
            "null"
          ],
          "description": "API key for server authentication"
        }
      }
    },
    "MCPRootSettings": {
      "type": "object",
      "description": "Root directory configuration for an MCP server",
      "required": [
        "uri"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "pattern": "^file://",
          "description": "URI identifying the root (must start with file://)"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Optional name for the root"
        },
        "server_uri_alias": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^file://",
          "description": "Optional URI alias for presentation to the server"
        }
      }
    },
    "AgentConfig": {
      "type": "object",
      "description": "Configuration for a test agent",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the agent",
          "default": "default_agent"
        },
        "instruction": {
          "type": "string",
          "description": "System instruction/prompt for the agent",
          "default": "You are a helpful test agent."
        },
        "llm_factory": {
          "type": "string",
          "description": "LLM factory class to use",
          "default": "AnthropicAugmentedLLM",
          "enum": [
            "AnthropicAugmentedLLM",
            "AnthropicLLM",
            "OpenAILLM",
            "BedrockLLM"
          ]
        },
        "model": {
          "type": "string",
          "description": "Model identifier to use",
          "default": "claude-3-5-haiku-20241022",
          "examples": [
            "claude-3-5-haiku-20241022",
            "claude-sonnet-4-20250514",
            "gpt-4-turbo",
            "gpt-4o"
          ]
        },
        "max_iterations": {
          "type": "integer",
          "description": "Maximum iterations for agent execution",
          "default": 5,
          "minimum": 1
        }
      }
    },
    "JudgeConfig": {
      "type": "object",
      "description": "Configuration for the LLM judge that evaluates test results",
      "properties": {
        "model": {
          "type": "string",
          "description": "Model to use for judging",
          "default": "claude-3-5-haiku-20241022"
        },
        "min_score": {
          "type": "number",
          "description": "Minimum score threshold for passing tests",
          "default": 0.8,
          "minimum": 0,
          "maximum": 1
        },
        "max_tokens": {
          "type": "integer",
          "description": "Maximum tokens for judge responses",
          "default": 1000,
          "minimum": 1
        },
        "system_prompt": {
          "type": "string",
          "description": "System prompt for the judge",
          "default": "You are an expert evaluator of AI assistant responses."
        }
      }
    },
    "MetricsConfig": {
      "type": "object",
      "description": "Configuration for metrics collection",
      "properties": {
        "collect": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "response_time",
              "tool_coverage",
              "iteration_count",
              "token_usage",
              "cost_estimate",
              "error_recovery",
              "content_extraction_quality",
              "input_tokens",
              "output_tokens"
            ]
          },
          "description": "Metrics to collect during test execution",
          "default": [
            "response_time",
            "tool_coverage",
            "iteration_count",
            "token_usage",
            "cost_estimate"
          ]
        },
        "token_prices": {
          "type": "object",
          "description": "Token pricing for cost estimation (per token)",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "input": {
                "type": "number",
                "description": "Price per input token"
              },
              "output": {
                "type": "number",
                "description": "Price per output token"
              }
            },
            "required": [
              "input",
              "output"
            ]
          },
          "default": {
            "claude-3-5-haiku-20241022": {
              "input": 0.00000025,
              "output": 0.00000125
            },
            "claude-sonnet-4-20250514": {
              "input": 0.000003,
              "output": 0.000015
            },
            "gpt-4-turbo": {
              "input": 0.00001,
              "output": 0.00003
            }
          }
        }
      }
    },
    "ReportingConfig": {
      "type": "object",
      "description": "Configuration for test reporting",
      "properties": {
        "formats": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "json",
              "markdown",
              "html",
              "junit"
            ]
          },
          "description": "Output formats for test reports",
          "default": [
            "json",
            "markdown"
          ]
        },
        "output_dir": {
          "type": "string",
          "description": "Directory for test report output",
          "default": "./test-reports"
        },
        "include_traces": {
          "type": "boolean",
          "description": "Include detailed execution traces in reports",
          "default": true
        }
      }
    },
    "OTelConfig": {
      "type": "object",
      "description": "OpenTelemetry configuration for observability",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OpenTelemetry tracing",
          "default": true
        },
        "exporter_type": {
          "type": "string",
          "description": "Type of exporter to use",
          "default": "file",
          "enum": [
            "file",
            "console",
            "otlp",
            "jaeger",
            "zipkin"
          ]
        },
        "exporter_config": {
          "type": "object",
          "description": "Configuration for the selected exporter",
          "additionalProperties": true
        },
        "service_name": {
          "type": "string",
          "description": "Service name for tracing",
          "default": "mcp-eval"
        }
      }
    },
    "ExecutionConfig": {
      "type": "object",
      "description": "Configuration for test execution behavior",
      "properties": {
        "max_concurrency": {
          "type": "integer",
          "description": "Maximum number of concurrent test executions",
          "default": 5,
          "minimum": 1
        },
        "timeout_seconds": {
          "type": "integer",
          "description": "Timeout for individual test execution in seconds",
          "default": 300,
          "minimum": 1
        },
        "retry_failed": {
          "type": "boolean",
          "description": "Whether to retry failed tests",
          "default": false
        }
      }
    }
  }
}