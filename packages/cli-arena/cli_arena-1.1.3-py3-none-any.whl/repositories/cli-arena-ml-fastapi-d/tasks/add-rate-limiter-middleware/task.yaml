id: add-rate-limiter-middleware
title: Add Rate Limiting Middleware
description: 'Implement a rate limiter middleware that allows each unique client IP to make at most 5 requests per minute.


  Any client exceeding this limit should receive:

  - Status: 429 Too Many Requests

  - Body: {"detail": "Rate limit exceeded"}


  Requirements:

  - Limit applies per IP address

  - Middleware must not break any existing functionality

  - Use an in-memory dictionary or cache (no external Redis)

  - Rate limit applies to all POST requests under /predict/

  '
author_email: reshmi.hl.dev@gmail.com
difficulty: hard
estimated_time: 45
tags:
- middleware
- rate-limit
- api
- fastapi
prerequisites: []
files_to_modify:
- src/middleware/rate_limiter.py
- src/main.py
- tests/test_predict.py
success_criteria:
- Clients get 429 after 5 requests in 60s
- Middleware does not affect GET or login routes
- All other tests still pass
environment:
  os: ubuntu-24.04
  os_name: Ubuntu 24.04 LTS
  architecture: x86_64
  container: docker
  runtimes:
    python: 3.12.3
    node: 20.x
    go: 1.21.5
    terraform: 1.5.7
  tools:
  - git
  - curl
  - wget
  - sqlite3
  - build-essential
  - tmux
  - asciinema
  - unzip
  note: Tasks run in isolated Docker containers based on Ubuntu 24.04
