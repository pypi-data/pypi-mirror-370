id: add-user-authentication
title: "Add JWT-Based User Authentication"
description: |
  Implement a secure JWT-based authentication system.

  Users should be able to:
  - Register with email + password
  - Login and receive a signed JWT token
  - Access the /predict/ endpoint only with a valid token
  - Receive a 401 Unauthorized error if token is missing or invalid

  Requirements:
  - Passwords must be hashed using bcrypt
  - JWT token must expire after 24 hours
  - Use middleware to protect the /predict/ route
  - Include a sample user in the database

author_email: reshmi.hl@gmail.com
difficulty: hard
estimated_time: 75
tags: [authentication, jwt, security, api]
prerequisites: []
files_to_modify:
  - src/api/auth.py
  - src/api/predict.py
  - src/middleware/jwt_auth.py
  - scripts/init_db.py
  - db/schema.sql
  - tests/test_auth.py
success_criteria:
  - /auth/register and /auth/login return correct codes
  - Password is stored as a bcrypt hash
  - JWT token is signed and valid for 24 hours
  - /predict/ is fully protected from unauthenticated access
  - New tests achieve >90% coverage of auth logic
