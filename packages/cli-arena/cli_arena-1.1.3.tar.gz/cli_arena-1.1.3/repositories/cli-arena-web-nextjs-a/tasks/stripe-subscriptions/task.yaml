id: stripe-subscriptions
title: Implement Stripe-Powered Subscription System
difficulty: hard
description: 'Implement a subscription system using Stripe.


  **Requirements:**

  1. Add `stripeCustomerId` and `subscriptionStatus` fields to the `User` model.

  2. Create a new API route at `/api/stripe/create-checkout-session` that creates a Stripe Checkout session.

  3. Create a new API route at `/api/stripe/webhook` that handles Stripe webhooks.

  4. The webhook handler should listen for `checkout.session.completed` and `customer.subscription.deleted` events.

  5. When a checkout session is completed, update the user''s `stripeCustomerId` and `subscriptionStatus`.

  6. When a subscription is canceled, update the user''s `subscriptionStatus`.

  7. Use the `stripe` library.

  '
success_criteria:
- The `User` model is updated with the Stripe-related fields.
- Users can create a Stripe Checkout session.
- The webhook handler correctly handles Stripe events.
- The user's subscription status is updated based on the webhook events.
environment:
  os: ubuntu-24.04
  os_name: Ubuntu 24.04 LTS
  architecture: x86_64
  container: docker
  runtimes:
    python: 3.12.3
    node: 20.x
    go: 1.21.5
    terraform: 1.5.7
  tools:
  - git
  - curl
  - wget
  - sqlite3
  - build-essential
  - tmux
  - asciinema
  - unzip
  note: Tasks run in isolated Docker containers based on Ubuntu 24.04
