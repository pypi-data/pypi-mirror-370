id: add-user-authentication
title: Add JWT-Based User Authentication
description: 'Implement a secure JWT-based authentication system.


  Users should be able to:

  - Register with email + password

  - Login and receive a signed JWT token

  - Access the /predict/ endpoint only with a valid token

  - Receive a 401 Unauthorized error if token is missing or invalid


  Requirements:

  - Passwords must be hashed using bcrypt

  - JWT token must expire after 24 hours

  - Use middleware to protect the /predict/ route

  - Include a sample user in the database

  '
author_email: reshmi.hl@gmail.com
difficulty: hard
estimated_time: 75
tags:
- authentication
- jwt
- security
- api
prerequisites: []
files_to_modify:
- src/api/auth.py
- src/api/predict.py
- src/middleware/jwt_auth.py
- scripts/init_db.py
- db/schema.sql
- tests/test_auth.py
success_criteria:
- /auth/register and /auth/login return correct codes
- Password is stored as a bcrypt hash
- JWT token is signed and valid for 24 hours
- /predict/ is fully protected from unauthenticated access
- New tests achieve >90% coverage of auth logic
environment:
  os: ubuntu-24.04
  os_name: Ubuntu 24.04 LTS
  architecture: x86_64
  container: docker
  runtimes:
    python: 3.12.3
    node: 20.x
    go: 1.21.5
    terraform: 1.5.7
  tools:
  - git
  - curl
  - wget
  - sqlite3
  - build-essential
  - tmux
  - asciinema
  - unzip
  note: Tasks run in isolated Docker containers based on Ubuntu 24.04
