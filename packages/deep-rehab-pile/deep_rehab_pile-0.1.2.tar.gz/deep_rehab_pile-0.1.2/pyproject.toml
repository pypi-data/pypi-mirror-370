[build-system]
requires = ["setuptools>61", "wheel", "toml", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "deep-rehab-pile"
version = "0.1.2"
description = "Deep Learning for Skeleton Based Human Motion Rehabilitation Assessment: A Benchmark"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    {name = "Ali Ismail-Fawaz", email = "ali-el-hadi.ismail-fawaz@uha.fr"},
    {name = "Maxime Devanne", email = "maxime.devanne@uha.fr"},
    {name = "Stefano Berretti", email = "stefano.berretti@unifi.it"},
    {name = "Jonathan Weber", email = "jonathan.weber@uha.fr"},
    {name = "Germain Forestier", email = "germain.forestier@uha.fr"}
]
maintainers = [
    {name = "Ali Ismail-Fawaz", email = "ali-el-hadi.ismail-fawaz@uha.fr"},
    {name = "Maxime Devanne", email = "maxime.devanne@uha.fr"}
]
requires-python = ">=3.11"
license = {text = "GPL-3.0-only"}

keywords = [
    "data-science",
    "machine-learning",
    "data-mining",
    "time-series",
    "human-motion",
    "human-motion-analysis",
    "classification",
    "regression",
    "time-series-analysis",
    "time-series-classification",
    "time-series-regression",
    "human-rehabilitation-assessment"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

dependencies = [
    "tensorflow==2.16.1",
    "keras>=3.6.0",
    "numpy==1.26.4",
    "scikit-learn==1.4.2",
    "aeon==1.2.0",
    "hydra-core==1.3.2",
    "omegaconf==2.3.0",
    "pandas==2.0.3",
    "matplotlib==3.9.0"
]

[project.urls]
Homepage = "https://msd-irimas.github.io/pages/DeepRehabPile/"
Repository = "https://github.com/MSD-IRIMAS/DeepRehabPile"
Download = "https://pypi.org/project/deep-rehab-pile/#files"

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-timeout",
    "pytest-rerunfailures",
    "pre-commit"
]

[tool.setuptools]
packages = ["deep_rehab_pile"]

[tool.ruff.lint]
select = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
testpaths = [
    "deep_rehab_pile"
]
addopts = '''
    --doctest-modules
    --durations 20
    --timeout 600
    --showlocals
    --dist worksteal
    --reruns 2
    --only-rerun "crashed while running"
    -v
'''
filterwarnings = '''
    ignore::UserWarning
    ignore:numpy.dtype size changed
    ignore:numpy.ufunc size changed
'''
