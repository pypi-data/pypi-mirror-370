Metadata-Version: 2.4
Name: ltrans
Version: 0.1.1
Summary: A CLI tool to translate Jupyter Notebooks (ipynb) to Markdown (md) with AI, focusing on code comment translation.
Author-email: ShiWu <xyz.liu15@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/xyz-liu15/ltrans
Project-URL: Repository, https://github.com/xyz-liu15/ltrans
Keywords: llm,ai,translation,jupyter,notebook,langchain,gemini,openai
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Framework :: Jupyter
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: langchain-google-genai
Requires-Dist: python-dotenv
Requires-Dist: rich
Requires-Dist: langchain-openai
Requires-Dist: typer

# ltrans: Jupyter Notebook AI Translator CLI

`ltrans` is a powerful command-line interface (CLI) tool designed to translate Jupyter Notebook (`.ipynb`) files from English to Chinese. It leverages advanced AI models (like Google Gemini) to provide accurate translations while preserving the original notebook structure, code, and only translating comments within code blocks.

## ‚ú® Features

*   **Intelligent Translation**: Translates Markdown cells and comments within code cells, leaving the code itself untouched.
*   **AI-Powered**: Utilizes leading AI models (e.g., Google Gemini, Qwen) for high-quality translation.
*   **CLI Interface**: Easy-to-use command-line tool for seamless integration into your workflow.
*   **Configurable**: Manage API keys and settings via a simple `config` command.
*   **Connectivity Check**: Verify your API credentials and service connectivity with the `check` command.
*   **Rich Output**: Beautiful and informative console output powered by `rich`.

## üöÄ Installation

You can install `ltrans` directly from PyPI (once published):

```bash
uv pip install ltrans
```

Alternatively, you can install from source:

```bash
git clone https://github.com/xyz-liu15/ltrans.git
cd ltrans
uv pip install -e .
```

## üîë Configuration

Before using the translation features, you need to configure your AI service API keys.

To set your Google Gemini API key:

```bash
ltrans config --google-key YOUR_GOOGLE_API_KEY
```

To set your Qwen API key and base URL:

```bash
ltrans config --qwen-key YOUR_QWEN_API_KEY --qwen-url YOUR_QWEN_BASE_URL
```

You can view your current configuration (excluding sensitive keys) by running:

```bash
ltrans config
```

## ‚úÖ Check Connectivity

To verify that your configured API keys are working and services are reachable:

```bash
ltrans check
```

## üìñ Usage

Translate Jupyter Notebooks from a source directory to a target Markdown directory.

```bash
ltrans translate SOURCE_DIR [TARGET_DIR] [OPTIONS]
```

*   `SOURCE_DIR`: The directory containing your `.ipynb` files.
*   `TARGET_DIR`: (Optional) The directory where translated `.md` files will be saved. If not provided, it defaults to `<SOURCE_DIR>-translated`.

**Examples:**

Translate notebooks from `my_notebooks/` to `my_notebooks-translated/`:

```bash
ltrans translate my_notebooks/
```

Translate notebooks and save them to a specific directory:

```bash
ltrans translate my_notebooks/ translated_output/
```

Force re-translation of all files, even if they already exist in the target directory:

```bash
ltrans translate my_notebooks/ --force
```

Use a specific provider (e.g., Qwen) and concurrency level:

```bash
ltrans translate my_notebooks/ --provider qwen --concurrency 10
```

## ü§ù Contributing

Contributions are welcome! Please feel free to open issues or submit pull requests.

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
