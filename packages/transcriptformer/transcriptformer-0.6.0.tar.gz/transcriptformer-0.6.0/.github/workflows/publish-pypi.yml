name: Publish to PyPi

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    # TODO: Once the repo is public, uncomment the following and remove the test token
    environment: pypi
    permissions:
      id-token: write # to authenticate as Trusted Publisher to pypi.org
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Display version being published
        run: |
          echo "Publishing version: ${{ steps.get_version.outputs.VERSION }}"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-build-${{ hashFiles('uv.lock') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install HDF5
        run: sudo apt-get update && sudo apt-get install -y libhdf5-dev

      - name: Install dependencies
        run: uv pip install --system --cache-dir ~/.cache/uv -e '.[build]'

      - name: Build package
        run: hatch build

      - name: Validate distribution files
        run: twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Confirm publish to PyPI
        uses: nick-fields/retry@v3
        with:
          max_attempts: 15
          timeout_seconds: 30
          polling_interval_seconds: 5
          command: pip index versions transcriptformer | grep "Available.*${{ steps.get_version.outputs.VERSION }}"

      - name: Install and Test Package from PyPI
        run: |
          pip install --no-cache-dir transcriptformer
          python -c "import transcriptformer"
          pip freeze | grep "transcriptformer==${{ steps.get_version.outputs.VERSION }}"
