[tool.poetry]
name = "hdf-dq-framework"
version = "0.4.0"  # This will be overridden by dynamic versioning
description = "HDF Data Quality Framework for PySpark DataFrames using Great Expectations"
authors = ["HDF Data Pipeline Team nengkhoiba.chungkham@iqvia.com"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/your-org/hdf-data-pipeline"
repository = "https://github.com/your-org/hdf-data-pipeline"
documentation = "https://github.com/your-org/hdf-data-pipeline"
keywords = ["data-quality", "pyspark", "great-expectations", "dataframe", "validation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
packages = [
    {include = "dq_framework", from = ".."},
]
include = [
    "*.md",
    "*.txt",
    "*.toml",
]

[tool.poetry.dependencies]
python = "^3.8"
pyspark = "^3.0.0"
great-expectations = "^0.15.0"
typing-extensions = "^4.0.0"
# Optional dependencies
pandas = {version = "^1.3.0", optional = true}
numpy = {version = "^1.20.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^6.0.0"
pytest-cov = "^2.0.0"
black = "^21.0.0"
flake8 = "^3.8.0"
mypy = "^0.900"
pre-commit = "^2.15.0"
poetry-dynamic-versioning = "^1.0.0"

[tool.poetry.extras]
enhanced = ["pandas", "numpy"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=dq_framework"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["dq_framework"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "default-unprefixed"

[tool.poetry-dynamic-versioning.substitution]
files = ["__init__.py"] 