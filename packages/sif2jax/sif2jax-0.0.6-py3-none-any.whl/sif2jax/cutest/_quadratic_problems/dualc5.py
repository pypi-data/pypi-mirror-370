import jax.numpy as jnp

from ..._misc import inexact_asarray
from ..._problem import AbstractConstrainedQuadraticProblem


class DUALC5(AbstractConstrainedQuadraticProblem):
    """A dual quadratic program from Antonio Frangioni.

    This is the dual of PRIMALC5.SIF

    References:
    - Problem provided by Antonio Frangioni (frangio@DI.UniPi.IT)
    - SIF input: Irv Lustig and Nick Gould, June 1996

    Classification: QLR2-MN-8-278
    - QLR2: Quadratic objective, linear constraints
    - MN: General constraints
    - 8 variables, 278 constraint(s)
    """

    y0_iD: int = 0
    provided_y0s: frozenset = frozenset({0})

    @property
    def n(self):
        """Number of variables."""
        return 8

    @property
    def m(self):
        """Number of constraints."""
        return 278

    # Linear objective coefficients
    c = jnp.array(
        [
            546.88509078,
            0.0,
            122.12095223,
            616.11938925,
            586.52942284,
            586.52942284,
            953.05364036,
            1585.0340121,
        ]
    )

    # Quadratic matrix in COO format
    Q_row = jnp.array(
        [
            0,
            0,
            1,
            0,
            2,
            0,
            3,
            0,
            4,
            0,
            5,
            0,
            6,
            0,
            7,
            1,
            1,
            2,
            1,
            3,
            1,
            4,
            1,
            5,
            1,
            6,
            1,
            7,
            2,
            2,
            3,
            2,
            4,
            2,
            5,
            2,
            6,
            2,
            7,
            3,
            3,
            4,
            3,
            5,
            3,
            6,
            3,
            7,
            4,
            4,
            5,
            4,
            6,
            4,
            7,
            5,
            5,
            6,
            5,
            7,
            6,
            6,
            7,
            7,
        ],
        dtype=jnp.int32,
    )
    Q_col = jnp.array(
        [
            0,
            1,
            0,
            2,
            0,
            3,
            0,
            4,
            0,
            5,
            0,
            6,
            0,
            7,
            0,
            1,
            2,
            1,
            3,
            1,
            4,
            1,
            5,
            1,
            6,
            1,
            7,
            1,
            2,
            3,
            2,
            4,
            2,
            5,
            2,
            6,
            2,
            7,
            2,
            3,
            4,
            3,
            5,
            3,
            6,
            3,
            7,
            3,
            4,
            5,
            4,
            6,
            4,
            7,
            4,
            5,
            6,
            5,
            7,
            5,
            6,
            7,
            6,
            7,
        ],
        dtype=jnp.int32,
    )
    Q_val = jnp.array(
        [
            13053.0,
            2524.0,
            2524.0,
            869.0,
            869.0,
            2342.0,
            2342.0,
            -4967.0,
            -4967.0,
            2742.0,
            2742.0,
            12580.0,
            12580.0,
            -1574.0,
            -1574.0,
            9564.0,
            4394.0,
            4394.0,
            16968.0,
            16968.0,
            -6110.0,
            -6110.0,
            1727.0,
            1727.0,
            5191.0,
            5191.0,
            -1101.0,
            -1101.0,
            11069.0,
            15583.0,
            15583.0,
            -5984.0,
            -5984.0,
            1344.0,
            1344.0,
            392.0,
            392.0,
            4540.0,
            4540.0,
            54824.0,
            -10447.0,
            -10447.0,
            -3459.0,
            -3459.0,
            7868.0,
            7868.0,
            -6775.0,
            -6775.0,
            7219.0,
            -4378.0,
            -4378.0,
            -7789.0,
            -7789.0,
            -1994.0,
            -1994.0,
            6429.0,
            6769.0,
            6769.0,
            4433.0,
            4433.0,
            44683.0,
            -19349.0,
            -19349.0,
            22577.0,
        ]
    )

    # Constraint matrices
    A_eq = jnp.array([[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]])  # Equality constraints
    b_eq = jnp.array([1.0])
    A_ineq = jnp.array(
        [
            [64.0, 64.0, 64.0, 64.0, 64.0, 64.0, 64.0, 46.0],
            [218.0, 218.0, 218.0, 218.0, 218.0, 218.0, 218.0, 218.0],
            [412.0, 412.0, 412.0, 412.0, 412.0, 412.0, 412.0, 412.0],
            [281.0, 244.0, 254.0, 215.0, 281.0, 281.0, 254.0, 289.0],
            [187.0, 181.0, 181.0, 181.0, 160.0, 187.0, 166.0, 193.0],
            [330.0, 338.0, 338.0, 337.0, 338.0, 338.0, 338.0, 338.0],
            [172.0, 191.0, 191.0, 191.0, 191.0, 179.0, 153.0, 191.0],
            [255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0],
            [423.0, 423.0, 454.0, 454.0, 423.0, 423.0, 384.0, 461.0],
            [455.0, 460.0, 460.0, 460.0, 460.0, 455.0, 455.0, 455.0],
            [304.0, 304.0, 304.0, 304.0, 325.0, 304.0, 325.0, 297.0],
            [180.0, 180.0, 180.0, 180.0, 180.0, 180.0, 180.0, 180.0],
            [491.0, 483.0, 483.0, 484.0, 483.0, 491.0, 491.0, 483.0],
            [121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0],
            [500.0, 500.0, 500.0, 495.0, 500.0, 500.0, 463.0, 518.0],
            [249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 249.0, 249.0],
            [163.0, 196.0, 196.0, 159.0, 201.0, 200.0, 123.0, 211.0],
            [176.0, 176.0, 176.0, 176.0, 176.0, 176.0, 176.0, 176.0],
            [426.0, 426.0, 426.0, 426.0, 421.0, 426.0, 485.0, 411.0],
            [315.0, 315.0, 315.0, 315.0, 315.0, 315.0, 315.0, 315.0],
            [35.0, 48.0, 48.0, 51.0, 54.0, 54.0, 54.0, 41.0],
            [301.0, 301.0, 301.0, 301.0, 301.0, 301.0, 301.0, 301.0],
            [143.0, 143.0, 143.0, 143.0, 143.0, 143.0, 143.0, 143.0],
            [402.0, 402.0, 402.0, 402.0, 402.0, 402.0, 402.0, 402.0],
            [162.0, 162.0, 162.0, 157.0, 162.0, 162.0, 160.0, 162.0],
            [429.0, 429.0, 429.0, 434.0, 429.0, 437.0, 437.0, 429.0],
            [219.0, 219.0, 219.0, 219.0, 219.0, 216.0, 219.0, 216.0],
            [401.0, 403.0, 403.0, 403.0, 403.0, 403.0, 403.0, 403.0],
            [10.0, 5.0, 5.0, 5.0, 5.0, 10.0, 10.0, 2.0],
            [356.0, 393.0, 393.0, 393.0, 393.0, 393.0, 393.0, 393.0],
            [526.0, 531.0, 531.0, 531.0, 531.0, 526.0, 467.0, 526.0],
            [511.0, 486.0, 476.0, 476.0, 452.0, 491.0, 523.0, 490.0],
            [211.0, 211.0, 211.0, 199.0, 211.0, 211.0, 211.0, 211.0],
            [304.0, 304.0, 302.0, 302.0, 273.0, 302.0, 299.0, 302.0],
            [495.0, 496.0, 496.0, 508.0, 502.0, 484.0, 495.0, 489.0],
            [328.0, 328.0, 328.0, 328.0, 328.0, 328.0, 328.0, 328.0],
            [218.0, 218.0, 218.0, 218.0, 218.0, 203.0, 218.0, 218.0],
            [285.0, 285.0, 285.0, 285.0, 264.0, 285.0, 264.0, 303.0],
            [261.0, 261.0, 261.0, 261.0, 261.0, 261.0, 261.0, 261.0],
            [304.0, 369.0, 331.0, 358.0, 311.0, 331.0, 294.0, 331.0],
            [158.0, 158.0, 158.0, 158.0, 200.0, 167.0, 158.0, 165.0],
            [283.0, 283.0, 283.0, 283.0, 283.0, 283.0, 283.0, 283.0],
            [167.0, 167.0, 167.0, 167.0, 167.0, 167.0, 167.0, 167.0],
            [572.0, 572.0, 572.0, 572.0, 572.0, 572.0, 572.0, 572.0],
            [162.0, 188.0, 105.0, 167.0, 126.0, 162.0, 162.0, 162.0],
            [370.0, 375.0, 375.0, 375.0, 406.0, 370.0, 370.0, 406.0],
            [116.0, 116.0, 116.0, 116.0, 116.0, 116.0, 116.0, 116.0],
            [215.0, 215.0, 215.0, 215.0, 215.0, 215.0, 215.0, 215.0],
            [538.0, 538.0, 538.0, 538.0, 538.0, 538.0, 538.0, 538.0],
            [478.0, 478.0, 478.0, 478.0, 478.0, 478.0, 478.0, 486.0],
            [256.0, 246.0, 246.0, 256.0, 256.0, 246.0, 246.0, 246.0],
            [458.0, 459.0, 459.0, 459.0, 459.0, 459.0, 457.0, 459.0],
            [370.0, 370.0, 370.0, 370.0, 370.0, 370.0, 370.0, 370.0],
            [134.0, 134.0, 134.0, 134.0, 134.0, 134.0, 134.0, 98.0],
            [236.0, 236.0, 236.0, 236.0, 236.0, 227.0, 236.0, 227.0],
            [423.0, 431.0, 431.0, 431.0, 431.0, 423.0, 423.0, 431.0],
            [60.0, 51.0, 51.0, 51.0, 51.0, 59.0, 61.0, 43.0],
            [484.0, 484.0, 484.0, 484.0, 484.0, 484.0, 484.0, 484.0],
            [316.0, 316.0, 316.0, 333.0, 316.0, 333.0, 316.0, 333.0],
            [107.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0],
            [274.0, 274.0, 274.0, 274.0, 269.0, 274.0, 274.0, 259.0],
            [79.0, 79.0, 81.0, 110.0, 101.0, 81.0, 118.0, 91.0],
            [416.0, 424.0, 424.0, 387.0, 429.0, 424.0, 387.0, 429.0],
            [379.0, 366.0, 376.0, 384.0, 366.0, 378.0, 381.0, 378.0],
            [356.0, 366.0, 366.0, 356.0, 356.0, 357.0, 366.0, 357.0],
            [539.0, 539.0, 539.0, 539.0, 539.0, 539.0, 539.0, 539.0],
            [263.0, 265.0, 265.0, 265.0, 265.0, 265.0, 265.0, 265.0],
            [457.0, 457.0, 457.0, 457.0, 457.0, 469.0, 457.0, 469.0],
            [121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0, 121.0],
            [417.0, 417.0, 417.0, 417.0, 417.0, 417.0, 417.0, 417.0],
            [383.0, 383.0, 371.0, 354.0, 389.0, 371.0, 371.0, 371.0],
            [502.0, 502.0, 502.0, 502.0, 502.0, 502.0, 502.0, 495.0],
            [373.0, 373.0, 373.0, 373.0, 373.0, 373.0, 373.0, 373.0],
            [503.0, 493.0, 493.0, 493.0, 493.0, 493.0, 493.0, 493.0],
            [281.0, 281.0, 281.0, 281.0, 281.0, 281.0, 281.0, 281.0],
            [504.0, 504.0, 504.0, 504.0, 504.0, 504.0, 504.0, 504.0],
            [193.0, 193.0, 193.0, 205.0, 193.0, 193.0, 193.0, 193.0],
            [94.0, 94.0, 94.0, 83.0, 83.0, 75.0, 75.0, 94.0],
            [345.0, 345.0, 376.0, 376.0, 345.0, 345.0, 345.0, 383.0],
            [437.0, 437.0, 437.0, 437.0, 437.0, 437.0, 437.0, 431.0],
            [168.0, 168.0, 168.0, 168.0, 168.0, 177.0, 168.0, 139.0],
            [237.0, 237.0, 206.0, 206.0, 237.0, 237.0, 237.0, 237.0],
            [241.0, 233.0, 233.0, 233.0, 251.0, 229.0, 241.0, 221.0],
            [396.0, 396.0, 406.0, 406.0, 406.0, 406.0, 392.0, 392.0],
            [135.0, 135.0, 135.0, 135.0, 135.0, 135.0, 135.0, 135.0],
            [323.0, 324.0, 324.0, 324.0, 312.0, 312.0, 323.0, 317.0],
            [351.0, 351.0, 351.0, 351.0, 351.0, 351.0, 351.0, 351.0],
            [488.0, 488.0, 488.0, 488.0, 488.0, 488.0, 488.0, 488.0],
            [153.0, 154.0, 144.0, 145.0, 144.0, 144.0, 158.0, 157.0],
            [288.0, 288.0, 278.0, 278.0, 278.0, 278.0, 288.0, 288.0],
            [126.0, 126.0, 157.0, 157.0, 126.0, 126.0, 91.0, 164.0],
            [180.0, 180.0, 180.0, 180.0, 180.0, 180.0, 180.0, 186.0],
            [349.0, 349.0, 349.0, 349.0, 349.0, 349.0, 349.0, 349.0],
            [287.0, 287.0, 287.0, 287.0, 287.0, 287.0, 287.0, 281.0],
            [487.0, 487.0, 487.0, 487.0, 487.0, 487.0, 487.0, 476.0],
            [38.0, 38.0, 38.0, 38.0, 38.0, 38.0, 38.0, 82.0],
            [175.0, 175.0, 175.0, 175.0, 151.0, 175.0, 175.0, 163.0],
            [416.0, 416.0, 416.0, 416.0, 416.0, 416.0, 416.0, 416.0],
            [70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 68.0, 70.0],
            [253.0, 253.0, 253.0, 282.0, 253.0, 253.0, 255.0, 271.0],
            [248.0, 248.0, 248.0, 248.0, 224.0, 248.0, 224.0, 248.0],
            [187.0, 181.0, 181.0, 181.0, 181.0, 187.0, 152.0, 181.0],
            [443.0, 443.0, 443.0, 443.0, 446.0, 443.0, 446.0, 456.0],
            [218.0, 232.0, 232.0, 232.0, 232.0, 218.0, 218.0, 219.0],
            [467.0, 467.0, 467.0, 467.0, 467.0, 467.0, 467.0, 467.0],
            [204.0, 204.0, 214.0, 185.0, 204.0, 214.0, 214.0, 214.0],
            [296.0, 296.0, 327.0, 327.0, 296.0, 296.0, 296.0, 334.0],
            [379.0, 371.0, 371.0, 371.0, 371.0, 379.0, 379.0, 371.0],
            [312.0, 307.0, 312.0, 312.0, 312.0, 312.0, 312.0, 318.0],
            [210.0, 210.0, 210.0, 210.0, 179.0, 210.0, 207.0, 210.0],
            [176.0, 176.0, 176.0, 176.0, 176.0, 176.0, 176.0, 176.0],
            [486.0, 486.0, 486.0, 486.0, 486.0, 486.0, 435.0, 486.0],
            [389.0, 394.0, 394.0, 394.0, 389.0, 389.0, 389.0, 394.0],
            [269.0, 269.0, 269.0, 269.0, 269.0, 269.0, 320.0, 269.0],
            [515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0],
            [499.0, 499.0, 499.0, 499.0, 499.0, 499.0, 499.0, 499.0],
            [301.0, 301.0, 301.0, 301.0, 301.0, 301.0, 301.0, 301.0],
            [227.0, 227.0, 227.0, 227.0, 227.0, 227.0, 227.0, 229.0],
            [454.0, 459.0, 454.0, 454.0, 454.0, 454.0, 454.0, 448.0],
            [146.0, 141.0, 141.0, 141.0, 146.0, 146.0, 146.0, 141.0],
            [269.0, 269.0, 269.0, 269.0, 269.0, 269.0, 269.0, 269.0],
            [389.0, 381.0, 381.0, 389.0, 381.0, 362.0, 362.0, 420.0],
            [259.0, 259.0, 259.0, 259.0, 259.0, 259.0, 259.0, 233.0],
            [382.0, 382.0, 380.0, 380.0, 382.0, 380.0, 380.0, 380.0],
            [157.0, 162.0, 162.0, 162.0, 162.0, 160.0, 157.0, 160.0],
            [137.0, 110.0, 120.0, 98.0, 147.0, 147.0, 120.0, 155.0],
            [420.0, 420.0, 420.0, 420.0, 420.0, 420.0, 420.0, 420.0],
            [140.0, 150.0, 140.0, 121.0, 140.0, 123.0, 140.0, 123.0],
            [427.0, 427.0, 427.0, 427.0, 427.0, 427.0, 427.0, 427.0],
            [514.0, 514.0, 514.0, 514.0, 514.0, 514.0, 514.0, 514.0],
            [304.0, 309.0, 309.0, 309.0, 304.0, 301.0, 304.0, 306.0],
            [223.0, 223.0, 223.0, 223.0, 223.0, 223.0, 223.0, 205.0],
            [371.0, 371.0, 371.0, 371.0, 371.0, 371.0, 371.0, 371.0],
            [227.0, 222.0, 222.0, 222.0, 222.0, 227.0, 206.0, 227.0],
            [413.0, 440.0, 440.0, 440.0, 413.0, 430.0, 442.0, 422.0],
            [24.0, 19.0, 19.0, 19.0, 24.0, 24.0, 43.0, 19.0],
            [485.0, 475.0, 475.0, 475.0, 475.0, 475.0, 475.0, 493.0],
            [488.0, 488.0, 488.0, 488.0, 488.0, 488.0, 488.0, 488.0],
            [531.0, 531.0, 531.0, 531.0, 531.0, 531.0, 531.0, 531.0],
            [576.0, 576.0, 576.0, 576.0, 576.0, 576.0, 576.0, 576.0],
            [214.0, 214.0, 214.0, 214.0, 214.0, 214.0, 214.0, 214.0],
            [89.0, 89.0, 89.0, 89.0, 89.0, 89.0, 89.0, 89.0],
            [470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0],
            [402.0, 402.0, 402.0, 402.0, 402.0, 402.0, 402.0, 402.0],
            [333.0, 333.0, 333.0, 333.0, 333.0, 333.0, 333.0, 333.0],
            [54.0, 54.0, 85.0, 85.0, 54.0, 54.0, 15.0, 92.0],
            [223.0, 223.0, 223.0, 223.0, 223.0, 223.0, 223.0, 223.0],
            [515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0],
            [491.0, 491.0, 491.0, 491.0, 491.0, 491.0, 491.0, 491.0],
            [245.0, 272.0, 272.0, 284.0, 245.0, 245.0, 272.0, 245.0],
            [172.0, 172.0, 172.0, 172.0, 172.0, 172.0, 172.0, 172.0],
            [255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0],
            [185.0, 185.0, 185.0, 185.0, 185.0, 185.0, 185.0, 185.0],
            [220.0, 220.0, 220.0, 276.0, 220.0, 216.0, 201.0, 232.0],
            [169.0, 168.0, 168.0, 168.0, 180.0, 182.0, 169.0, 177.0],
            [532.0, 532.0, 532.0, 532.0, 532.0, 532.0, 532.0, 532.0],
            [181.0, 181.0, 181.0, 189.0, 181.0, 181.0, 181.0, 201.0],
            [225.0, 225.0, 225.0, 225.0, 253.0, 225.0, 221.0, 221.0],
            [294.0, 300.0, 311.0, 311.0, 272.0, 275.0, 294.0, 303.0],
            [337.0, 337.0, 337.0, 337.0, 337.0, 337.0, 337.0, 337.0],
            [157.0, 157.0, 157.0, 157.0, 157.0, 157.0, 157.0, 157.0],
            [405.0, 405.0, 405.0, 405.0, 405.0, 405.0, 409.0, 409.0],
            [327.0, 327.0, 358.0, 358.0, 296.0, 327.0, 288.0, 358.0],
            [84.0, 84.0, 84.0, 28.0, 84.0, 103.0, 84.0, 110.0],
            [331.0, 331.0, 331.0, 331.0, 331.0, 331.0, 331.0, 333.0],
            [188.0, 188.0, 188.0, 188.0, 188.0, 200.0, 188.0, 200.0],
            [283.0, 283.0, 283.0, 283.0, 241.0, 283.0, 283.0, 283.0],
            [107.0, 108.0, 120.0, 121.0, 53.0, 131.0, 101.0, 146.0],
            [394.0, 394.0, 394.0, 394.0, 394.0, 394.0, 394.0, 394.0],
            [258.0, 253.0, 253.0, 253.0, 253.0, 275.0, 258.0, 263.0],
            [352.0, 352.0, 321.0, 321.0, 352.0, 352.0, 352.0, 314.0],
            [111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0],
            [573.0, 573.0, 573.0, 573.0, 583.0, 573.0, 559.0, 559.0],
            [84.0, 84.0, 84.0, 84.0, 84.0, 84.0, 78.0, 84.0],
            [561.0, 561.0, 561.0, 561.0, 561.0, 548.0, 561.0, 548.0],
            [250.0, 240.0, 250.0, 240.0, 250.0, 267.0, 250.0, 267.0],
            [204.0, 253.0, 193.0, 229.0, 193.0, 176.0, 207.0, 191.0],
            [217.0, 217.0, 217.0, 217.0, 217.0, 217.0, 219.0, 217.0],
            [538.0, 538.0, 538.0, 538.0, 538.0, 538.0, 538.0, 538.0],
            [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0],
            [485.0, 485.0, 485.0, 486.0, 485.0, 485.0, 485.0, 474.0],
            [558.0, 558.0, 558.0, 558.0, 558.0, 558.0, 558.0, 558.0],
            [393.0, 393.0, 393.0, 383.0, 383.0, 393.0, 393.0, 393.0],
            [144.0, 144.0, 156.0, 166.0, 136.0, 169.0, 156.0, 169.0],
            [322.0, 322.0, 322.0, 322.0, 322.0, 322.0, 322.0, 322.0],
            [465.0, 465.0, 465.0, 465.0, 465.0, 465.0, 465.0, 465.0],
            [157.0, 157.0, 157.0, 157.0, 157.0, 157.0, 157.0, 157.0],
            [373.0, 374.0, 374.0, 374.0, 374.0, 374.0, 425.0, 373.0],
            [114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0, 114.0],
            [104.0, 104.0, 104.0, 104.0, 104.0, 104.0, 104.0, 104.0],
            [437.0, 443.0, 443.0, 453.0, 453.0, 437.0, 437.0, 443.0],
            [213.0, 174.0, 174.0, 174.0, 174.0, 174.0, 174.0, 174.0],
            [6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0],
            [158.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0, 197.0],
            [515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0, 515.0],
            [24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 22.0],
            [524.0, 524.0, 524.0, 524.0, 524.0, 524.0, 524.0, 524.0],
            [56.0, 56.0, 67.0, 67.0, 56.0, 56.0, 56.0, 69.0],
            [395.0, 395.0, 395.0, 395.0, 395.0, 395.0, 434.0, 406.0],
            [588.0, 588.0, 588.0, 569.0, 577.0, 588.0, 588.0, 568.0],
            [429.0, 429.0, 429.0, 429.0, 429.0, 429.0, 429.0, 408.0],
            [275.0, 267.0, 267.0, 267.0, 267.0, 267.0, 275.0, 267.0],
            [431.0, 426.0, 431.0, 431.0, 431.0, 431.0, 431.0, 437.0],
            [181.0, 179.0, 179.0, 189.0, 189.0, 179.0, 179.0, 179.0],
            [477.0, 476.0, 476.0, 475.0, 476.0, 476.0, 476.0, 477.0],
            [322.0, 324.0, 324.0, 324.0, 324.0, 324.0, 324.0, 324.0],
            [272.0, 264.0, 264.0, 272.0, 264.0, 245.0, 245.0, 271.0],
            [529.0, 529.0, 529.0, 529.0, 529.0, 529.0, 529.0, 517.0],
            [217.0, 217.0, 217.0, 212.0, 207.0, 219.0, 217.0, 219.0],
            [124.0, 132.0, 132.0, 132.0, 132.0, 132.0, 124.0, 153.0],
            [565.0, 565.0, 565.0, 565.0, 565.0, 565.0, 565.0, 565.0],
            [600.0, 600.0, 600.0, 600.0, 600.0, 600.0, 600.0, 600.0],
            [343.0, 343.0, 343.0, 343.0, 343.0, 343.0, 343.0, 343.0],
            [251.0, 251.0, 251.0, 246.0, 251.0, 251.0, 251.0, 251.0],
            [381.0, 381.0, 381.0, 381.0, 381.0, 379.0, 381.0, 391.0],
            [325.0, 333.0, 333.0, 336.0, 344.0, 352.0, 352.0, 326.0],
            [33.0, 33.0, 33.0, 4.0, 33.0, 52.0, 72.0, 42.0],
            [145.0, 145.0, 145.0, 134.0, 134.0, 126.0, 126.0, 145.0],
            [340.0, 309.0, 340.0, 278.0, 340.0, 340.0, 340.0, 340.0],
            [127.0, 137.0, 137.0, 137.0, 168.0, 137.0, 70.0, 137.0],
            [366.0, 366.0, 366.0, 366.0, 366.0, 366.0, 401.0, 366.0],
            [406.0, 356.0, 406.0, 352.0, 406.0, 406.0, 406.0, 406.0],
            [160.0, 132.0, 132.0, 102.0, 159.0, 159.0, 132.0, 160.0],
            [365.0, 365.0, 365.0, 349.0, 376.0, 384.0, 384.0, 365.0],
            [311.0, 311.0, 311.0, 311.0, 311.0, 311.0, 311.0, 311.0],
            [246.0, 246.0, 246.0, 246.0, 246.0, 246.0, 246.0, 246.0],
            [398.0, 398.0, 398.0, 398.0, 398.0, 398.0, 398.0, 416.0],
            [421.0, 420.0, 420.0, 420.0, 432.0, 432.0, 421.0, 416.0],
            [312.0, 340.0, 340.0, 335.0, 340.0, 340.0, 340.0, 340.0],
            [381.0, 381.0, 381.0, 381.0, 381.0, 381.0, 381.0, 381.0],
            [414.0, 414.0, 414.0, 414.0, 414.0, 414.0, 414.0, 414.0],
            [432.0, 432.0, 432.0, 432.0, 432.0, 432.0, 432.0, 432.0],
            [96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0, 96.0],
            [133.0, 171.0, 171.0, 171.0, 171.0, 171.0, 171.0, 171.0],
            [239.0, 240.0, 240.0, 258.0, 240.0, 240.0, 240.0, 231.0],
            [415.0, 414.0, 414.0, 413.0, 414.0, 414.0, 414.0, 415.0],
            [221.0, 221.0, 221.0, 221.0, 221.0, 221.0, 221.0, 221.0],
            [470.0, 503.0, 503.0, 495.0, 475.0, 507.0, 489.0, 496.0],
            [464.0, 464.0, 464.0, 472.0, 464.0, 464.0, 464.0, 484.0],
            [216.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0, 255.0],
            [239.0, 250.0, 250.0, 242.0, 250.0, 250.0, 239.0, 230.0],
            [270.0, 270.0, 270.0, 253.0, 298.0, 270.0, 270.0, 270.0],
            [238.0, 227.0, 227.0, 227.0, 227.0, 227.0, 238.0, 235.0],
            [410.0, 410.0, 410.0, 410.0, 410.0, 410.0, 410.0, 410.0],
            [292.0, 292.0, 294.0, 294.0, 292.0, 294.0, 294.0, 294.0],
            [103.0, 103.0, 103.0, 103.0, 103.0, 103.0, 103.0, 103.0],
            [150.0, 150.0, 150.0, 150.0, 150.0, 141.0, 150.0, 141.0],
            [324.0, 324.0, 324.0, 324.0, 324.0, 324.0, 324.0, 324.0],
            [220.0, 220.0, 220.0, 220.0, 220.0, 220.0, 220.0, 220.0],
            [14.0, 14.0, 12.0, 12.0, 20.0, 12.0, 12.0, 12.0],
            [147.0, 147.0, 147.0, 147.0, 147.0, 147.0, 147.0, 147.0],
            [360.0, 360.0, 360.0, 360.0, 360.0, 360.0, 360.0, 360.0],
            [306.0, 306.0, 306.0, 306.0, 306.0, 306.0, 302.0, 280.0],
            [466.0, 466.0, 466.0, 466.0, 466.0, 466.0, 466.0, 466.0],
            [251.0, 251.0, 251.0, 251.0, 251.0, 251.0, 251.0, 245.0],
            [264.0, 264.0, 264.0, 264.0, 264.0, 264.0, 264.0, 264.0],
            [403.0, 403.0, 403.0, 403.0, 403.0, 403.0, 403.0, 403.0],
            [347.0, 347.0, 347.0, 347.0, 341.0, 347.0, 347.0, 347.0],
            [99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0, 99.0],
            [123.0, 123.0, 123.0, 123.0, 123.0, 123.0, 127.0, 123.0],
            [173.0, 175.0, 175.0, 175.0, 175.0, 175.0, 175.0, 175.0],
            [554.0, 552.0, 552.0, 552.0, 552.0, 552.0, 552.0, 552.0],
            [222.0, 222.0, 222.0, 222.0, 204.0, 222.0, 222.0, 222.0],
            [448.0, 448.0, 448.0, 448.0, 448.0, 448.0, 448.0, 448.0],
            [279.0, 283.0, 271.0, 271.0, 314.0, 278.0, 267.0, 278.0],
            [154.0, 150.0, 150.0, 158.0, 119.0, 144.0, 131.0, 166.0],
            [451.0, 451.0, 451.0, 451.0, 451.0, 451.0, 451.0, 451.0],
            [291.0, 291.0, 291.0, 291.0, 291.0, 291.0, 291.0, 291.0],
            [83.0, 83.0, 83.0, 83.0, 83.0, 91.0, 91.0, 90.0],
            [171.0, 171.0, 171.0, 171.0, 171.0, 171.0, 171.0, 171.0],
            [70.0, 65.0, 70.0, 62.0, 70.0, 70.0, 70.0, 56.0],
            [317.0, 312.0, 319.0, 319.0, 294.0, 318.0, 329.0, 318.0],
            [540.0, 540.0, 540.0, 540.0, 540.0, 540.0, 540.0, 540.0],
            [330.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0],
            [288.0, 288.0, 288.0, 288.0, 288.0, 288.0, 288.0, 281.0],
            [429.0, 429.0, 429.0, 428.0, 429.0, 429.0, 429.0, 478.0],
            [225.0, 225.0, 225.0, 215.0, 246.0, 225.0, 228.0, 225.0],
        ]
    )  # Inequality constraints (Ax <= b)
    b_ineq = jnp.array(
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
        ]
    )

    def objective(self, y, args):
        """Quadratic objective: 0.5 * y^T * Q * y + c^T * y"""
        del args
        linear_term = jnp.dot(self.c, y)
        quad_term = jnp.sum(self.Q_val * y[self.Q_row] * y[self.Q_col])
        return 0.5 * quad_term + linear_term

    def constraint(self, y):
        """Linear constraints: A_eq*y = b_eq and A_ineq*y <= b_ineq"""
        eq_constraints = self.A_eq @ y - self.b_eq
        ineq_constraints = self.A_ineq @ y - self.b_ineq
        return eq_constraints, ineq_constraints

    def equality_constraints(self):
        """First 1 constraints are equalities."""
        return jnp.arange(self.m) < 1

    @property
    def bounds(self):
        """Bound constraints: 0 <= y <= 1"""
        lbs = jnp.zeros(self.n)
        ubs = jnp.ones(self.n)
        return lbs, ubs

    @property
    def y0(self):
        """Initial point: zeros"""
        return inexact_asarray(jnp.zeros(self.n))

    @property
    def args(self):
        return None

    @property
    def expected_result(self):
        """Expected optimal solution (not known analytically)."""
        return None

    @property
    def expected_objective_value(self):
        """Expected optimal objective value (not known analytically)."""
        return None
