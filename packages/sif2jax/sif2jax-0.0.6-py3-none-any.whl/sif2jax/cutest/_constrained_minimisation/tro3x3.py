import jax.numpy as jnp

from .tro_base import TROBase


class TRO3X3(TROBase):
    """A minimum-compliance formulation of the truss topology problem.

    This problem minimizes c^T u subject to:
    - (sum_i=1:m x_i A_i) u = c
    - sum_i=1:m x_i <= 1
    - x >= 0

    Source: translation from the AMPL model tro_nlp.mod/tro_3x3.dat
    by Michal Kocvara (U. Birmingham)

    SIF input: Nick Gould, Nov 2009.

    classification LOR2-RN-30-13
    """

    y0_iD: int = 0
    provided_y0s: frozenset = frozenset({0})
    m_bars: int = 18  # number of bars
    n_dof: int = 12  # number of structure degrees of freedom
    n: int = 30  # total variables (m_bars + n_dof)
    m: int = 13  # total constraints (n_dof + 1)
    obj_idx: int = 7  # U8 is minimized (index 7 in U array)
    rhs_idx: int = 7  # C8 = 1.0 (index 7 in constraints)

    @property
    def args(self):
        # Store element data: (x_idx, u_idx, p_value) for each element
        # From the SIF file ELEMENT USES section
        elements = jnp.array(
            [
                (0, 0, 4.0),  # E1: X1, U1, P=4.0
                (1, 2, 1.0),  # E2: X2, U3, P=1.0
                (1, 2, 1.0),  # E3: X2, U3, P=1.0
                (1, 3, 1.0),  # E4: X2, U4, P=1.0
                (1, 3, 1.0),  # E5: X2, U4, P=1.0
                (2, 1, 4.0),  # E6: X3, U2, P=4.0
                (2, 1, -4.0),  # E7: X3, U2, P=-4.0
                (2, 3, -4.0),  # E8: X3, U4, P=-4.0
                (2, 3, 4.0),  # E9: X3, U4, P=4.0
                (3, 0, 1.0),  # E10: X4, U1, P=1.0
                (3, 0, -1.0),  # E11: X4, U1, P=-1.0
                (3, 1, -1.0),  # E12: X4, U2, P=-1.0
                (3, 1, 1.0),  # E13: X4, U2, P=1.0
                (4, 2, 4.0),  # E14: X5, U3, P=4.0
                (5, 4, 1.0),  # E15: X6, U5, P=1.0
                (5, 4, 1.0),  # E16: X6, U5, P=1.0
                (5, 5, 1.0),  # E17: X6, U6, P=1.0
                (5, 5, 1.0),  # E18: X6, U6, P=1.0
                (6, 3, 4.0),  # E19: X7, U4, P=4.0
                (6, 3, -4.0),  # E20: X7, U4, P=-4.0
                (6, 5, -4.0),  # E21: X7, U6, P=-4.0
                (6, 5, 4.0),  # E22: X7, U6, P=4.0
                (7, 2, 1.0),  # E23: X8, U3, P=1.0
                (7, 2, -1.0),  # E24: X8, U3, P=-1.0
                (7, 3, -1.0),  # E25: X8, U4, P=-1.0
                (7, 3, 1.0),  # E26: X8, U4, P=1.0
                (8, 0, 4.0),  # E27: X9, U1, P=4.0
                (8, 0, -4.0),  # E28: X9, U1, P=-4.0
                (8, 6, -4.0),  # E29: X9, U7, P=-4.0
                (8, 6, 4.0),  # E30: X9, U7, P=4.0
                (9, 0, 1.0),  # E31: X10, U1, P=1.0
                (9, 0, 1.0),  # E32: X10, U1, P=1.0
                (9, 0, -1.0),  # E33: X10, U1, P=-1.0
                (9, 0, -1.0),  # E34: X10, U1, P=-1.0
                (9, 1, 1.0),  # E35: X10, U2, P=1.0
                (9, 1, 1.0),  # E36: X10, U2, P=1.0
                (9, 1, -1.0),  # E37: X10, U2, P=-1.0
                (9, 1, -1.0),  # E38: X10, U2, P=-1.0
                (9, 8, -1.0),  # E39: X10, U9, P=-1.0
                (9, 8, -1.0),  # E40: X10, U9, P=-1.0
                (9, 8, 1.0),  # E41: X10, U9, P=1.0
                (9, 8, 1.0),  # E42: X10, U9, P=1.0
                (9, 9, -1.0),  # E43: X10, U10, P=-1.0
                (9, 9, -1.0),  # E44: X10, U10, P=-1.0
                (9, 9, 1.0),  # E45: X10, U10, P=1.0
                (9, 9, 1.0),  # E46: X10, U10, P=1.0
                (10, 7, 4.0),  # E47: X11, U8, P=4.0
                (10, 7, -4.0),  # E48: X11, U8, P=-4.0
                (10, 9, -4.0),  # E49: X11, U10, P=-4.0
                (10, 9, 4.0),  # E50: X11, U10, P=4.0
                (11, 2, 1.0),  # E51: X12, U3, P=1.0
                (11, 2, -1.0),  # E52: X12, U3, P=-1.0
                (11, 2, -1.0),  # E53: X12, U3, P=-1.0
                (11, 2, 1.0),  # E54: X12, U3, P=1.0
                (11, 3, -1.0),  # E55: X12, U4, P=-1.0
                (11, 3, 1.0),  # E56: X12, U4, P=1.0
                (11, 3, 1.0),  # E57: X12, U4, P=1.0
                (11, 3, -1.0),  # E58: X12, U4, P=-1.0
                (11, 6, -1.0),  # E59: X12, U7, P=-1.0
                (11, 6, 1.0),  # E60: X12, U7, P=1.0
                (11, 6, 1.0),  # E61: X12, U7, P=1.0
                (11, 6, -1.0),  # E62: X12, U7, P=-1.0
                (11, 7, 1.0),  # E63: X12, U8, P=1.0
                (11, 7, -1.0),  # E64: X12, U8, P=-1.0
                (11, 7, -1.0),  # E65: X12, U8, P=-1.0
                (11, 7, 1.0),  # E66: X12, U8, P=1.0
                (12, 2, 4.0),  # E67: X13, U3, P=4.0
                (12, 2, -4.0),  # E68: X13, U3, P=-4.0
                (12, 8, -4.0),  # E69: X13, U9, P=-4.0
                (12, 8, 4.0),  # E70: X13, U9, P=4.0
                (13, 2, 1.0),  # E71: X14, U3, P=1.0
                (13, 2, 1.0),  # E72: X14, U3, P=1.0
                (13, 2, -1.0),  # E73: X14, U3, P=-1.0
                (13, 2, -1.0),  # E74: X14, U3, P=-1.0
                (13, 3, 1.0),  # E75: X14, U4, P=1.0
                (13, 3, 1.0),  # E76: X14, U4, P=1.0
                (13, 3, -1.0),  # E77: X14, U4, P=-1.0
                (13, 3, -1.0),  # E78: X14, U4, P=-1.0
                (13, 10, -1.0),  # E79: X14, U11, P=-1.0
                (13, 10, -1.0),  # E80: X14, U11, P=-1.0
                (13, 10, 1.0),  # E81: X14, U11, P=1.0
                (13, 10, 1.0),  # E82: X14, U11, P=1.0
                (13, 11, -1.0),  # E83: X14, U12, P=-1.0
                (13, 11, -1.0),  # E84: X14, U12, P=-1.0
                (13, 11, 1.0),  # E85: X14, U12, P=1.0
                (13, 11, 1.0),  # E86: X14, U12, P=1.0
                (14, 9, 4.0),  # E87: X15, U10, P=4.0
                (14, 9, -4.0),  # E88: X15, U10, P=-4.0
                (14, 11, -4.0),  # E89: X15, U12, P=-4.0
                (14, 11, 4.0),  # E90: X15, U12, P=4.0
                (15, 4, 1.0),  # E91: X16, U5, P=1.0
                (15, 4, -1.0),  # E92: X16, U5, P=-1.0
                (15, 4, -1.0),  # E93: X16, U5, P=-1.0
                (15, 4, 1.0),  # E94: X16, U5, P=1.0
                (15, 5, -1.0),  # E95: X16, U6, P=-1.0
                (15, 5, 1.0),  # E96: X16, U6, P=1.0
                (15, 5, 1.0),  # E97: X16, U6, P=1.0
                (15, 5, -1.0),  # E98: X16, U6, P=-1.0
                (15, 8, -1.0),  # E99: X16, U9, P=-1.0
                (15, 8, 1.0),  # E100: X16, U9, P=1.0
                (15, 8, 1.0),  # E101: X16, U9, P=1.0
                (15, 8, -1.0),  # E102: X16, U9, P=-1.0
                (15, 9, 1.0),  # E103: X16, U10, P=1.0
                (15, 9, -1.0),  # E104: X16, U10, P=-1.0
                (15, 9, -1.0),  # E105: X16, U10, P=-1.0
                (15, 9, 1.0),  # E106: X16, U10, P=1.0
                (16, 4, 4.0),  # E107: X17, U5, P=4.0
                (17, 4, 4.0),  # E108: X18, U5, P=4.0
                (17, 4, -4.0),  # E109: X18, U5, P=-4.0
                (17, 10, -4.0),  # E110: X18, U11, P=-4.0
                (17, 10, 4.0),  # E111: X18, U11, P=4.0
            ]
        )

        # GROUP USES mapping elements to constraints
        # From the SIF file GROUP USES section
        group_uses = jnp.array(
            [
                (0, 0),  # E1 -> C1
                (2, 1),  # E2 -> C3
                (3, 2),  # E3 -> C4
                (2, 3),  # E4 -> C3
                (3, 4),  # E5 -> C4
                (1, 5),  # E6 -> C2
                (3, 6),  # E7 -> C4
                (1, 7),  # E8 -> C2
                (3, 8),  # E9 -> C4
                (0, 9),  # E10 -> C1
                (1, 10),  # E11 -> C2
                (0, 11),  # E12 -> C1
                (1, 12),  # E13 -> C2
                (2, 13),  # E14 -> C3
                (4, 14),  # E15 -> C5
                (5, 15),  # E16 -> C6
                (4, 16),  # E17 -> C5
                (5, 17),  # E18 -> C6
                (3, 18),  # E19 -> C4
                (5, 19),  # E20 -> C6
                (3, 20),  # E21 -> C4
                (5, 21),  # E22 -> C6
                (2, 22),  # E23 -> C3
                (3, 23),  # E24 -> C4
                (2, 24),  # E25 -> C3
                (3, 25),  # E26 -> C4
                (0, 26),  # E27 -> C1
                (6, 27),  # E28 -> C7
                (0, 28),  # E29 -> C1
                (6, 29),  # E30 -> C7
                (0, 30),  # E31 -> C1
                (1, 31),  # E32 -> C2
                (8, 32),  # E33 -> C9
                (9, 33),  # E34 -> C10
                (0, 34),  # E35 -> C1
                (1, 35),  # E36 -> C2
                (8, 36),  # E37 -> C9
                (9, 37),  # E38 -> C10
                (0, 38),  # E39 -> C1
                (1, 39),  # E40 -> C2
                (8, 40),  # E41 -> C9
                (9, 41),  # E42 -> C10
                (0, 42),  # E43 -> C1
                (1, 43),  # E44 -> C2
                (8, 44),  # E45 -> C9
                (9, 45),  # E46 -> C10
                (7, 46),  # E47 -> C8
                (9, 47),  # E48 -> C10
                (7, 48),  # E49 -> C8
                (9, 49),  # E50 -> C10
                (2, 50),  # E51 -> C3
                (3, 51),  # E52 -> C4
                (6, 52),  # E53 -> C7
                (7, 53),  # E54 -> C8
                (2, 54),  # E55 -> C3
                (3, 55),  # E56 -> C4
                (6, 56),  # E57 -> C7
                (7, 57),  # E58 -> C8
                (2, 58),  # E59 -> C3
                (3, 59),  # E60 -> C4
                (6, 60),  # E61 -> C7
                (7, 61),  # E62 -> C8
                (2, 62),  # E63 -> C3
                (3, 63),  # E64 -> C4
                (6, 64),  # E65 -> C7
                (7, 65),  # E66 -> C8
                (2, 66),  # E67 -> C3
                (8, 67),  # E68 -> C9
                (2, 68),  # E69 -> C3
                (8, 69),  # E70 -> C9
                (2, 70),  # E71 -> C3
                (3, 71),  # E72 -> C4
                (10, 72),  # E73 -> C11
                (11, 73),  # E74 -> C12
                (2, 74),  # E75 -> C3
                (3, 75),  # E76 -> C4
                (10, 76),  # E77 -> C11
                (11, 77),  # E78 -> C12
                (2, 78),  # E79 -> C3
                (3, 79),  # E80 -> C4
                (10, 80),  # E81 -> C11
                (11, 81),  # E82 -> C12
                (2, 82),  # E83 -> C3
                (3, 83),  # E84 -> C4
                (10, 84),  # E85 -> C11
                (11, 85),  # E86 -> C12
                (9, 86),  # E87 -> C10
                (11, 87),  # E88 -> C12
                (9, 88),  # E89 -> C10
                (11, 89),  # E90 -> C12
                (4, 90),  # E91 -> C5
                (5, 91),  # E92 -> C6
                (8, 92),  # E93 -> C9
                (9, 93),  # E94 -> C10
                (4, 94),  # E95 -> C5
                (5, 95),  # E96 -> C6
                (8, 96),  # E97 -> C9
                (9, 97),  # E98 -> C10
                (4, 98),  # E99 -> C5
                (5, 99),  # E100 -> C6
                (8, 100),  # E101 -> C9
                (9, 101),  # E102 -> C10
                (4, 102),  # E103 -> C5
                (5, 103),  # E104 -> C6
                (8, 104),  # E105 -> C9
                (9, 105),  # E106 -> C10
                (4, 106),  # E107 -> C5
                (4, 107),  # E108 -> C5
                (10, 108),  # E109 -> C11
                (4, 109),  # E110 -> C5
                (10, 110),  # E111 -> C11
            ],
            dtype=jnp.int32,
        )

        return elements, group_uses
