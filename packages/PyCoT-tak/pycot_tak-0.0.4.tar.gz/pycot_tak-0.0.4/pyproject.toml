
[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "PyCoT-tak"
version = "0.0.4"
description = "PyCoT: Python Cursor-on-Target toolkit (node-CoT style) with XML->CoTEvent, GeoJSON, Cesium conversion capabilities"
readme = "README.md"
requires-python = ">=3.9"
authors = [{name = "COASsoft"}, {name = "Oscar Aguilar Ramos", email = "aguilardeciudad@gmail.com"}]
keywords = ["TAK","ATAK","CoT","Cursor on Target","GIS","GeoJSON","Cesium","XML","Parsing","Data Conversion"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup :: XML"
]

dependencies = [
  "lxml>=5.0.0",
  "pydantic>=2.0.0",
  "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
speed = ["lxml>=5.0.0", "orjson>=3.0.0"]
ws = ["websockets>=12.0.0"]
proto = ["takproto>=0.3.0"]
dev = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.0.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "mypy>=1.0.0",
  "ruff>=0.1.0"
]
docs = [
  "mkdocs>=1.5.0",
  "mkdocs-material>=9.0.0",
  "mkdocstrings[python]>=0.20.0"
]

[project.scripts]
pycot-cat = "pycot.cli:cot_cat_main"
pycot-send = "pycot.cli:cot_send_main"
pycot-bridge = "pycot.cli:cot_bridge_main"

[project.urls]
Homepage = "https://github.com/COASsoft/PyCoT"
Repository = "https://github.com/COASsoft/PyCoT"
Issues = "https://github.com/COASsoft/PyCoT/issues"
Documentation = "https://github.com/COASsoft/PyCoT"

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pycot = ["*.xml", "*.xsd"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--cov=pycot",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml"
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/pycot"]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
