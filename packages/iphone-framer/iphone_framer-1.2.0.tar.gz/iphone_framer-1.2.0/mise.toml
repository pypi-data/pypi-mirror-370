
# Authentication Setup for Publishing:
# 
# For PyPI (production):
#   export UV_PUBLISH_TOKEN=<your-pypi-token>
#   OR
#   export UV_PUBLISH_USERNAME=__token__
#   export UV_PUBLISH_PASSWORD=<your-pypi-token>
#
# For TestPyPI (testing):
#   export UV_PUBLISH_TOKEN=<your-testpypi-token>
#   OR
#   export UV_PUBLISH_USERNAME=__token__
#   export UV_PUBLISH_PASSWORD=<your-testpypi-token>
#
# Get tokens from:
#   PyPI: https://pypi.org/manage/account/token/
#   TestPyPI: https://test.pypi.org/manage/account/token/

[tasks]
# Build tasks
build = 'uv build'
clean-build = 'rm -rf dist/ && uv build'

# Publishing tasks (requires UV_PUBLISH_TOKEN environment variable)
publish = 'uv publish'
test-publish = 'uv publish --publish-url https://test.pypi.org/legacy/'

# Publishing with explicit token (pass token as argument)
publish-with-token = 'uv publish --token'
test-publish-with-token = 'uv publish --publish-url https://test.pypi.org/legacy/ --token'

# Version management tasks
bump-major = 'uv version --bump major'
bump-minor = 'uv version --bump minor'
bump-patch = 'uv version --bump patch'

# Complete release workflow (requires UV_PUBLISH_TOKEN environment variable)
release = 'rm -rf dist/ && uv build && uv publish'
test-release = 'rm -rf dist/ && uv build && uv publish --publish-url https://test.pypi.org/legacy/'

# Testing tasks
test = 'python iphone_framer.py screenshot.png -o output.png -t "Revolutionary Design" -s "Experience the future" --device 6.9_inch'
test2 = 'python iphone_framer.py screenshot.png -o output.png -t "Revolutionary Design" -s "Experience the future" --device 6.9_inch --gradient ocean --gradient-direction vertical'

[tools]
python = "3.8"
