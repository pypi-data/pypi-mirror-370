[tool.poetry]
name = "jsonAI"
version = "0.15.2.3"  # Patch bump for PyPI republish; previous versions exist on PyPI
description = "A Python library for dynamic JSON generation based on schemas using language models."
authors = ["1rgs <kishoretvk9@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/kishoretvk/GenerativeJson"
repository = "https://github.com/kishoretvk/GenerativeJson"
documentation = "https://github.com/kishoretvk/GenerativeJson#readme"
keywords = ["json", "llm", "schema", "generation", "fastapi", "openai", "ollama", "transformers"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]

[[tool.poetry.packages]]
from = "."
include = "jsonAI"

[tool.poetry.dependencies]
python = "^3.9,<4.0"
termcolor = "^2.3.0"
jaxtyping = "^0.2.28"
jsonschema = "^4.22.0"
PyYAML = "^6.0.1"
lxml = "^5.2.2"
ollama = "^0.2.1"
click = "^8.1.7"
requests = "^2.32.0"
aiohttp = "^3.9.5"
cachetools = "^5.3.1"
# Observability
prometheus-client = "^0.20.0"
opentelemetry-api = "^1.24.0"
opentelemetry-sdk = "^1.24.0"
opentelemetry-exporter-otlp = "^1.24.0"
opentelemetry-instrumentation-fastapi = "^0.45b0"
opentelemetry-instrumentation-asgi = "^0.45b0"

[tool.poetry.group.dev.dependencies]
scipy = "^1.13.1"
pandas = "^2.2.2"
pandas-stubs = { version = "^2.3.0.250703", python = ">=3.10,<4.0" }
ipykernel = "^6.22.0"
torch = "^2.0.0"
accelerate = "^0.18.0"
bitsandbytes = "^0.38.1"
transformers = "^4.27.4"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
flake8 = "^7.1.0"
black = "^24.8.0"
mypy = "^1.8.0"
bandit = "^1.7.5"
  # ...existing dev dependencies...
pre-commit = "^3.8.0"
pylint = "^3.2.7"

# Runtime server dependencies for API server (moved from dev to main)
fastapi = "^0.112.0"
uvicorn = {extras = ["standard"], version = "^0.30.5"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
httpx = "^0.27.0"
pydantic = "^2.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
create = true
in-project = true

[tool.black]
line-length = 120
target-version = ['py39']


[tool.pytest]
addopts = "--cov=jsonAI --cov-report=xml"
python_files = "jsonAI/*.py"

[tool.pylint]
max-line-length = 120
disable = [
  "C0114", "C0115", "C0116",  # missing module/class/function docstrings
  "C0301",  # line-too-long
  "C0303",  # trailing-whitespace
  "W0707",  # raise-missing-from
  "C0415",  # import-outside-toplevel
  "W0613",  # unused-argument
  "W0612",  # unused-variable
  "R0903",  # too-few-public-methods
  "C0103"   # invalid-name
]
ignore = ["tests", "examples"]

[tool.mypy]
python_version = "3.11"
strict_optional = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["jsonschema", "yaml", "requests", "openai", "torch", "transformers", "cachetools"]
ignore_missing_imports = true
