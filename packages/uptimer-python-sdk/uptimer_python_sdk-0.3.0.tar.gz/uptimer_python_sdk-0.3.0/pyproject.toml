[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "uptimer-python-sdk"
version = "0.3.0"
description = "A Python SDK for uptimer"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
urls = { "Repository" = "https://github.com/myuptime-info/uptimer-python-sdk" }
authors = [{ name = "Roman Zadoev", email = "zadoev@gmail.com" }]
dependencies = ["httpx>=0.28.1"]

[tool.hatch.build.targets.wheel]
packages = ["src/uptimer"]
include = ["LICENSE", "NOTICE", "README.md"]


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true
[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "playwright>=1.54.0",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-httpx>=0.35.0",
    "pytest-playwright>=0.7.0",
    "responses>=0.25.7",
    "ruff>=0.12.5",
    "twine>=6.1.0",
]


[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN204",
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D406",    # Section name should end with a newline
    "D407",    # Missing dashed underline after section
    "D413",    # Missing blank line after last section
    "E501",    # Line too long (handled by black)
    "S101",    # Use of assert detected (tests)
    "PLR2004", # Magic value used in comparison (tests)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101", "PLR2004", "F401", "ANN201"]
"examples/**/*.py" = ["ALL"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pytest-playwright]
headed = false
