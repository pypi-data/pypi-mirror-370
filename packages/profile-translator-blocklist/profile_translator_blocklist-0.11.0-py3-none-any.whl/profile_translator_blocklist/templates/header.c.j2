// THIS FILE HAS BEEN AUTOGENERATED. DO NOT EDIT.

/**
 * Nefilter queue for device {{device}}
 */

// Standard libraries
#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include <unistd.h>
#include <string.h>
#include <pthread.h>
#include <assert.h>
#include <signal.h>
#include <sys/time.h>
// Custom libraries
#include "nfqueue.h"
#include "packet_utils.h"
#include "rule_utils.h"
// Parsers
#include "header.h"
{% set dns_parser_included = namespace(value=False) %}
{% for parser in custom_parsers %}
{% if "dns" in parser %}
{% set dns_parser_included.value = True %}
#include "dns.h"
#include "dns_map.h"
{% else %}
#include "{{parser}}.h"
{% endif %}
{% endfor %}
{% if domain_names|length > 0 and not dns_parser_included.value %}
#include "dns.h"
#include "dns_map.h"
{% endif %}


/* CONSTANTS */

float DROP_PROBA = {{drop_proba}};  // Drop probability for random drop verdict mode

{% if num_threads > 0 %}
#define NUM_THREADS {{num_threads}}

/**
 * Thread-specific data.
 */
typedef struct {
    uint8_t   id;      // Thread ID
    uint32_t  seed;    // Thread-specific seed for random number generation
    pthread_t thread;  // The thread itself
} thread_data_t;

thread_data_t thread_data[NUM_THREADS];
{% endif %}

{% if "dns" in custom_parsers or "mdns" in custom_parsers or domain_names|length > 0 %}
dns_map_t *dns_map;  // Domain name to IP address mapping
{% endif %}

#ifdef DEBUG
uint16_t dropped_packets = 0;
#endif /* DEBUG */
