[tool.poetry]
name = "telebot-constructor"
version = "0.2.16"
description = "No-code Telegram bot constructor"
authors = ["Igor Vaiman <gosha.vaiman@gmail.com>"]
license = "GPL-3"
readme = "README.md"
packages = [{ include = "telebot_constructor" }]
include = ["telebot_constructor/static/**/*", "telebot_constructor/data/*"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
coverage = "^7.3.0"
dictdiffer = "^0.9.0"
pytest-aiohttp = "^1.0.5"
pytest-asyncio = "^0.23.7"
python-dotenv = "^0.20.0"
aioresponses = "^0.7.7"
pre-commit = "^2.19.0"
mypy = "^1.4.1"
setuptools = "^80.9.0"
yarb-against-war = "1.0.2"
ruff = "^0.11.0"
memray = "^1.17.2"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
dirty = false
style = "semver"

[tool.poetry.dependencies]
python = "^3.12"
telebot-components = "^0.15.1"
pydantic = "^2.8.2"
aiohttp-swagger = "^1.0.16"
telebot-against-war = "^0.7.12"
cryptography = "^44.0.1"
cachetools = "^5.3.1"
urllib3 = "^1.26.18"
aiohttp = "^3.11.6"
pillow = "^10.3.0"
telegramify-markdown = "^0.5.1"
aiobotocore = "^2.15.2"
python-slugify = "^8.0.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
extend-select = ["I"]  # check and fix imports

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
incremental = false
files = '.'
exclude = ["dist"]

[tool.coverage.report]
omit = ['tests/**']
skip_covered = true
show_missing = true
fail_under = 80
exclude_lines = [
    # re-enable the standard pragma
    'pragma: no cover',
    # non-runnable code
    'if __name__ == .__main__.:',
    # abstract methods aren't run:
    '@(abc\.)?abstractmethod',
    # ellipsis is used in abstract method bodies
    '\.\.\.',
    # stub methods
    'raise NotImplementedError()',
]
