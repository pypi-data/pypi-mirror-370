#nop --
#nop Class Definitions
#nop --

#var events-description {Gestione Eventi migliaorata rispetto la stock tintin++}
#var events-help {
Sistema di gestione eventi avanzato:\n
FUNZIONI PRINCIPALI:\n
• event_register <evento> <handler> <azione>\n
  Registra un'azione per un evento specifico\n
• event_remove_event <evento>\n
  Rimuove completamente un evento\n
• event_remove_handler <handler>\n
  Rimuove l'handler da tutti gli eventi\n
• event_remove_specific <evento> <handler>\n
  Rimuove handler specifico da evento specifico\n
• event_raise <evento> [args...]\n
  Scatena un evento con argomenti opzionali\n
COME FUNZIONA:\n
1. Gli eventi sono memorizzati in _events[nome][handler]\n
2. Ogni evento può avere multipli handler\n
3. Gli handler sono eseguiti quando l'evento viene scatenato\n
4. I parametri vengono passati agli handler\n
ESEMPI:\n
event_register morte player_died {#echo Sei morto!}\n
event_register morte log_death {#log append deaths.txt}\n
event_raise morte\n
EVENTI AUTOMATICI:\n
• SESSION ACTIVATED - quando si attiva la sessione\n
INTERNE:\n
• event_eval - esegue azioni dinamiche con parametri
}

#nop --
#nop Modloader Stuff
#nop --

#alias events-register {
	#if {@isloaded{modloader}} {
		register_module events
	} {
		#class events kill
	}
}


#var _events {};
#alias _event_tmp_ali #nop;

#nop event_register eventName handlerName action
#nop adds action to the eventName event under the tag handlerName.

#alias event_register
{
  #var _events[%1][%2] {%3};
}


#nop event_remove_event eventName
#nop removes eventName completely

#alias event_remove_event
{
  #unvar _events[%1];
}


#nop event_remove_handler handlerName
#nop removes handlerName from all events

#alias event_remove_handler
{

  #foreach {*{_events[]}} {sublist}
  {
    #unvar _events[$sublist][%1];
    #if {"${_events[$sublist]}" == ""} {#unvar _events[$sublist]};
  }
}


#nop event_remove_specific eventName handlerName
#nop removes handlerName from eventName

#alias event_remove_specific
{
  #unvar _events[%1][%2];
  #if {"${_events[%1]}" == ""} {#unvar _events[%1]};
}


#nop event_eval is a helper function that allows dynamic alias definitions.

#alias event_eval
{
  #alias _event_tmp_ali {%1};
  _event_tmp_ali %2;
  #alias _event_tmp_ali #nop;
}

#nop event_raise eventName args
#nop calls all actions for eventName with args

#alias event_raise
{
  #foreach {*{_events[%1][]}} {handler}
  {
    event_eval {${_events[%1][$handler]}} {%0};
  }
} {5}

#event {SESSION ACTIVATED} { event_raise {SESSION ACTIVATED} {%0}}

#nop -- vim: syntax=tt
