{%- macro get_required(props_dict) %}
{%- set reqs = [] %}
{%- for prop_name in props_dict %}
{%- if props_dict[prop_name].required %}
{%- set _ = reqs.append(prop_name) %}
{%- endif %}
{%- endfor %}
{%- if reqs | length > 0 %}
required:
{%- for req in reqs %}
- {{ req }}
{%- endfor %}
{%- else %}
required: []
{%- endif %}
{%- endmacro %}


{%- macro render_prop(name, prop) %}
{{ name }}:
  type: {{ prop.typ }}
  {%- if prop.typ == "array" %}
  items:
    type: {{ prop.subtype }}
    {%- if prop.subtype == "object" %}
    {{- get_required(prop.subtype_props) | indent(4) }}
    {%- if prop.subtype_desc is not none %}
    description: {{ prop.subtype_desc | yaml }}
    {%- endif %}
    properties:
    {%- for subprop_name in prop.subtype_props %}
      {{- render_prop(subprop_name, prop.subtype_props[subprop_name]) | indent(6) }}
    {%- endfor %}
    {%- endif %}
  {%- endif %}
  {%- for key in prop.args %}
  {{ key | maybekebab }}: {{ prop.args[key] | yaml }}
  {%- endfor %}
  {%- if prop.subprops is not none %}
  {{- get_required(prop.subprops) | indent(2) }}
  properties:
    {%- for subprop_name in prop.subprops %}
  {{- render_prop(subprop_name, prop.subprops[subprop_name]) | indent(4) }}
    {%- endfor %}
  {%- endif %}
{%- endmacro %}

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  name: {{ gvi.crd_name }}
spec:
  group: {{ gvi.group }}
  names:
    kind: {{ gvi.kind }}
    plural: {{ gvi.plural }}
    {%- if gvi.short_names is none or gvi.short_names|length == 0 %}
    shortNames: []
    {%- else %}
    shortNames:
    {%- for short_name in gvi.short_names %}
    - {{ short_name }}
    {% endfor %}
    {% endif %}
    singular: {{ gvi.singular }}
  scope: {{ gvi.scope }}
  versions:
  {%- for version in version_props %}
  {%- set props = version_props[version].props %}
  {%- set status = version_props[version].status %}
  - name: {{ version }}
    {%- if version in version_print_columns %}
    additionalPrinterColumns:
      {%- for col in version_print_columns[version] %}
      - jsonPath: {{ col.json_path }}
        name: {{ col.name }}
        type: {{ col.type }}
      {%- endfor %}
    {%- endif %}
    served: true
    {%- if version == gvi.api_version %}
    storage: true
    {%- else %}
    storage: false
    {%- endif %}
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        {%- if version in version_desc %}
        description: |-
          {{ version_desc[version] | indent(12) }}
        {%- endif %}
        type: object
        properties:
          apiVersion:
            type: string
            description: |-
              APIVersion defines the versioned schema of this representation 
              of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          kind:
            type: string
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          metadata:
            type: object
          {{- render_prop("status", status) | indent(10) }}
          spec:
            type: object
            description: |-
              Specification of the desired state of the {{ gvi.kind }} resource.
              More Info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
            {%- for prop_name in props %}
            {{- render_prop(prop_name, props[prop_name]) | indent(14) }}
            {%- endfor %}
            {{- get_required(props) | indent(12) }}
  {%- endfor %}
