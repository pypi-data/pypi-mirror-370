[project]
name = "nexosapi"
version = "0.1.0"
description = "SDK for Nexos API"
authors = [{ name = "Kamil Rybacki", email = "kamilandrzejrybacki@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"

[tool.poetry]
include = ["*.pyi"]
exclude = ["tests/**", "docs/**", "examples/**", "make/**"]

[tool.poetry.dependencies]
python = "^3.12"
environ-config = "^24.1.0"
dependency-injector = "^4.48.1"
httpx = "^0.28.1"
tenacity = "^9.1.2"

[tool.poetry.group.dev.dependencies]
pydantic = "^2.11.7"
mypy = "1.17.1"
ruff = "0.11.8"
pre-commit = "^3.6.0"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-cov = "^4.1.0"
pytest-order = "^1.3.0"
pytest-mypy = "^1.0.1"
testcontainers = "^4.10.0"
types-requests = "^2.32.4.20250611"
fastapi = "^0.116.1"
uvicorn = "^0.35.0"
mkdocstrings-python = "^1.17.0"
mkdocs-material = { "extras" = ["imaging"], "version" = "^9.6.17" }
mkdocs-redirects = "^1.2.2"
mike = "^2.0.0"
mkdocs-panzoom-plugin = "^0.1.0"
mkdocs-glightbox = "^0.1.0"
mkdocs-exclude = "^1.0.2"
mkdocs-autoapi = "^0.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",  # flake8-annotations
    "COM",  # flake8-commas
    "C90",  # mccabe complexity
    "DJ",   # django
    "EXE",  # flake8-executable
    "T10",  # debugger
    "TID",  # flake8-tidy-imports
    "D100",   # ignore missing docs
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D205",
    "D203",
    "D212",
    "D400",
    "D401",
    "D415",
    "E402",   # false positives for local imports
    "E501",   # line too long
    "TRY003", # external messages in exceptions are too verbose
    "TD002",
    "TD003",
    "FIX002", # too verbose descriptions of todos
    "PGH003", # concrete type ignores
    "UP045",  # for BaseModel use Optional[X] instead of X | None
    "G004",
    "EM101",
    "EM102",
    "LOG015",
    "S101",
    "ASYNC210",
    "TC001",
    "SIM102",
    "PLR0911",
    "SLF001",
    "FBT001",
    "FBT002",
    "UP046",
    "D413",
    "D412",
]
exclude = [
    "*.pyi",  # ignore type stubs
    "*.ipynb",  # ignore Jupyter notebooks
    "tests/**",  # ignore tests
    "make/**",  # ignore types compiler and other build utils
]

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
python_version = "3.13"
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
follow_untyped_imports = true
pretty = true
exclude = [
  "^.*.pyi$"
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_calls = false
check_untyped_defs = false
ignore_missing_imports = true
strict_optional = false
no_implicit_optional = false

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
markers = [
    "offline: tests that can be carried out offline",
    "chosen: helper marker for running only chosen tests with `test-chosen` command",
]
