name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install Python dependencies
      run: |
        uv sync --dev

    - name: Install frontend dependencies
      run: |
        cd streamlit_json_tip/frontend
        npm ci

    - name: Build frontend
      run: |
        cd streamlit_json_tip/frontend
        npm run build

    - name: Build package
      run: uv run python -m build

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Extract changelog for this version
      id: changelog
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        # Extract changelog section for this version
        awk "/^## \[$VERSION\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.txt
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.RELEASE_NOTES }}
        files: |
          dist/streamlit_json_tip-${{ steps.version.outputs.VERSION }}.tar.gz
          dist/streamlit_json_tip-${{ steps.version.outputs.VERSION }}-py3-none-any.whl
        draft: false
        prerelease: false

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}