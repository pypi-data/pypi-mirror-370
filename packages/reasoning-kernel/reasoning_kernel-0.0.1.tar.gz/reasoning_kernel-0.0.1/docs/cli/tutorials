# MSA Reasoning Kernel CLI Tutorials

This directory contains interactive tutorials that guide you through using the key features of the MSA Reasoning Kernel CLI. Each tutorial provides step-by-step instructions and examples to help you get the most out of the CLI.

## Available Tutorials

1. [Getting Started with Basic Reasoning](#getting-started-with-basic-reasoning)
2. [Document and Code Analysis](#document-and-code-analysis)
3. [Session Management](#session-management)
4. [Batch Processing](#batch-processing)
5. [Exporting Results](#exporting-results)
6. [Configuration Wizard](#configuration-wizard)

## Getting Started with Basic Reasoning

This tutorial walks you through the basics of using the MSA Reasoning Kernel CLI for simple reasoning tasks.

### Step 1: Basic Query

Start by asking a simple question using the CLI:

```bash
reasoning-kernel "What are the key challenges in implementing renewable energy at scale?"
```

The CLI will process your query and return a detailed analysis.

### Step 2: Using Different Reasoning Modes

Try the same query with different reasoning modes:

```bash
# Knowledge-based reasoning only
reasoning-kernel --mode knowledge "What are the key challenges in implementing renewable energy at scale?"

# Both knowledge and probabilistic reasoning
reasoning-kernel --mode both "What are the key challenges in implementing renewable energy at scale?"
```

### Step 3: Interactive Mode

For extended reasoning sessions, use the interactive mode:

```bash
reasoning-kernel --interactive
```

In interactive mode, you can have a conversation with the reasoning engine, asking follow-up questions and exploring different aspects of a topic.

### Step 4: JSON Output

For integration with other tools, use JSON output:

```bash
reasoning-kernel --output json "What are the key challenges in implementing renewable energy at scale?" > result.json
```

## Document and Code Analysis

This tutorial shows how to analyze documents and code using the CLI.

### Step 1: Document Analysis

Create a text file with some content to analyze:

```bash
echo "The company's quarterly revenue increased by 15% compared to last year. However, operational costs also rose by 10%, resulting in a net profit margin of 8%." > business_report.txt
```

Analyze the document:

```bash
reasoning-kernel analyze --file business_report.txt --type document
```

### Step 2: Code Analysis

Create a Python script to analyze:

```bash
cat > example.py << 'EOF'
def calculate_profit(revenue, costs):
    """Calculate profit based on revenue and costs"""
    if revenue < 0 or costs < 0:
        raise ValueError("Revenue and costs must be positive")
    return revenue - costs

def main():
    revenue = 1000000
    costs = 800000
    profit = calculate_profit(revenue, costs)
    print(f"Profit: ${profit}")

if __name__ == "__main__":
    main()
EOF
```

Analyze the code:

```bash
reasoning-kernel analyze --file example.py --type code --language python
```

## Session Management

This tutorial demonstrates how to manage reasoning sessions.

### Step 1: Create a Session

Create a new session for your analysis:

```bash
reasoning-kernel session create renewable-energy-analysis "Analysis of renewable energy challenges and opportunities"
```

### Step 2: Use the Session

Run a query using your session:

```bash
reasoning-kernel reason --session-id renewable-energy-analysis "What are the main technological barriers to renewable energy adoption?"
```

### Step 3: List Sessions

View your sessions:

```bash
reasoning-kernel session list
```

### Step 4: Load a Session

Load a session to continue working with it:

```bash
reasoning-kernel session load renewable-energy-analysis
```

## Batch Processing

This tutorial shows how to process multiple queries in batch mode.

### Step 1: Create a Batch File

Create a JSON file with multiple queries:

```bash
cat > batch_queries.json << 'EOF'
{
  "queries": [
    {
      "id": "business-1",
      "query": "Analyze market trends for renewable energy investments in 2025",
      "mode": "both"
    },
    {
      "id": "business-2",
      "query": "Evaluate the impact of remote work on urban real estate markets",
      "mode": "knowledge"
    },
    {
      "id": "business-3",
      "query": "Assess the risks and opportunities of AI adoption in healthcare",
      "mode": "both"
    }
  ]
}
EOF
```

### Step 2: Process the Batch

Process the queries in batch mode:

```bash
reasoning-kernel batch process batch_queries.json --output-dir ./batch_results --session-id business-q1-2025
```

### Step 3: Review Results

Check the results in the output directory:

```bash
ls -la ./batch_results
```

## Exporting Results

This tutorial demonstrates how to export your reasoning results.

### Step 1: Export a Session

Export a session to different formats:

```bash
# Export to JSON
reasoning-kernel session export renewable-energy-analysis --output results.json --format json

# Export to Markdown
reasoning-kernel session export renewable-energy-analysis --output results.md --format md

# Export to PDF (requires weasyprint)
reasoning-kernel session export renewable-energy-analysis --output results.pdf --format pdf
```

### Step 2: Export History

Export your recent history:

```bash
# Export last 10 history entries to Markdown
reasoning-kernel export history --output recent_history.md --format md --limit 10
```

## Configuration Wizard

This tutorial shows how to use the interactive configuration wizard.

### Step 1: Run the Wizard

Start the configuration wizard:

```bash
reasoning-kernel wizard run
```

### Step 2: Follow the Prompts

The wizard will guide you through setting up:
- Azure OpenAI connection
- Daytona sandbox settings
- Redis connection (optional)
- PostgreSQL connection (optional)

### Step 3: Verify Configuration

Check your configuration:

```bash
reasoning-kernel config show