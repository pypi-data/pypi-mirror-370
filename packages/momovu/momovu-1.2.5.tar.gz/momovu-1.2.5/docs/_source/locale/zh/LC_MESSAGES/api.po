# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Jeff Moe
# This file is distributed under the same license as the Momovu package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Momovu 1.2.4.dev2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-16 10:24-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh <LL@li.org>\n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../../_source/api.rst:3
msgid "API Reference"
msgstr "API 参考"

#: ../../../_source/api.rst:5
msgid ""
"This document provides a comprehensive API reference for the Momovu library."
" All public classes, methods, and functions are documented here using "
"automatic documentation generation from the source code."
msgstr "本文档为 Momovu 库提供了全面的 API 参考。所有公共类、方法和函数均通过从源代码自动生成文档的方式在此处进行了记录。"

#: ../../../_source/api.rst:10
msgid "Table of Contents"
msgstr "目录"

#: ../../../_source/api.rst:13
msgid "Core Module"
msgstr "核心模块"

#: ../../../_source/api.rst:16
msgid "Main Entry Point"
msgstr "主入口点"

#: momovu.main:1 of
msgid "Main entry point for the Momovu application."
msgstr "Momovu 应用程序的主入口点。"

#: momovu.main.parse_arguments:1 of
msgid "Process CLI arguments with validation and help text."
msgstr "处理带有验证和帮助文本的 CLI 参数。"

#: ../../../_source/api.rst
msgid "Returns"
msgstr "退货"

#: momovu.main.parse_arguments:3 of
msgid "Namespace with all command options"
msgstr "包含所有命令选项的命名空间"

#: momovu.main.main:5 momovu.main.parse_arguments:5
#: momovu.main.setup_logging:5 of
msgid "Example"
msgstr "例子"

#: momovu.main.setup_logging:1 of
msgid "Configure log levels from debug/verbose CLI flags."
msgstr "从调试/详细 CLI 标志配置日志级别。"

#: ../../../_source/api.rst
msgid "Parameters"
msgstr "参数"

#: momovu.main.setup_logging:3 of
msgid "Namespace with debug and verbose attributes"
msgstr "带有调试和详细信息属性的命名空间"

#: momovu.main.main:1 of
msgid "Launch Momovu with error handling and proper exit codes."
msgstr "使用错误处理和适当的退出代码启动 Momovu。"

#: ../../../_source/api.rst
msgid "Raises"
msgstr "提高"

#: momovu.main.main:3 of
msgid "Always exits with appropriate code"
msgstr "始终使用适当的代码退出"

#: ../../../_source/api.rst:24
msgid "Models"
msgstr "模型"

#: ../../../_source/api.rst:26
msgid ""
"The models implement the Model component of the MVP (Model-View-Presenter) "
"architecture pattern. They handle data storage and business logic."
msgstr "模型实现了MVP（Model-View-Presenter）架构模式中的Model组件。它们负责处理数据存储和业务逻辑。"

#: ../../../_source/api.rst:30
msgid "Base Model"
msgstr "基础模型"

#: momovu.models.base:1 of
msgid "Base model class with property change notification support."
msgstr "具有属性更改通知功能的基础模型类。"

#: momovu.models.base:3 of
msgid ""
"This module provides the foundation for all models in the MVP architecture. "
"It implements property change notifications without Qt dependencies."
msgstr "此模块为MVP架构中的所有模型提供了基础。它实现了属性更改通知，且不依赖Qt。"

#: momovu.models.base.BaseModel:1 momovu.models.base.PropertyChangedEvent:1
#: momovu.presenters.base.BasePresenter:1
#: momovu.presenters.configuration.ConfigurationPresenter:1
#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:1
#: momovu.views.components.dialog_manager.DialogManager:1
#: momovu.views.components.document_operations.DocumentOperationResult:1
#: momovu.views.components.margin_renderer.MarginRenderer:1
#: momovu.views.components.menu_builder.MenuBuilder:1
#: momovu.views.components.navigation_controller.NavigationController:1
#: momovu.views.components.page_positions.PagePositions:1
#: momovu.views.components.page_renderer.PageRenderer:1
#: momovu.views.components.renderers.base.BaseRenderer:1
#: momovu.views.components.scroll_manager.ScrollManager:1
#: momovu.views.components.signal_connections.SignalConnections:1
#: momovu.views.components.toggle_manager.ToggleManager:1
#: momovu.views.components.toolbar_builder.ToolbarBuilder:1
#: momovu.views.components.ui_state_manager.UIStateManager:1
#: momovu.views.components.window_setup.WindowSetup:1 of
msgid "Bases: :py:class:`object`"
msgstr "基类: :py:class:`object`"

#: momovu.models.base.PropertyChangedEvent:1 of
msgid "Event fired when a model property changes."
msgstr "当模型属性更改时触发的事件。"

#: momovu.models.base.PropertyChangedEvent.__init__:1 of
msgid "Initialize a property changed event."
msgstr "初始化属性更改事件。"

#: momovu.models.base.PropertyChangedEvent.__init__:3 of
msgid "Name of the property that changed"
msgstr "更改的属性名称"

#: momovu.models.base.PropertyChangedEvent.__init__:4 of
msgid "Previous value of the property"
msgstr "属性的先前值"

#: momovu.models.base.PropertyChangedEvent.__init__:5 of
msgid "New value of the property"
msgstr "属性的新值"

#: momovu.models.base.PropertyChangedEvent.__repr__:1 of
msgid "Return a developer-friendly string representation."
msgstr "返回一个对开发人员友好的字符串表示形式。"

#: momovu.models.base.BaseModel:1 of
msgid "Base class for all models with property change notification."
msgstr "所有具有属性更改通知功能的模型的基类。"

#: momovu.models.base.BaseModel:3 of
msgid ""
"This class provides: - Property change notification mechanism - Property "
"validation framework - Observer pattern implementation (no Qt dependencies)"
msgstr ""
"此类提供：  \n"
"- 属性更改通知机制  \n"
"- 属性验证框架  \n"
"- 观察者模式实现（无 Qt 依赖）"

#: momovu.models.base.BaseModel.__init__:1 of
msgid "Initialize the base model with empty observers and properties."
msgstr "使用空的观察者和属性初始化基础模型。"

#: momovu.models.base.BaseModel.add_observer:1 of
msgid "Add an observer for property changes."
msgstr "为属性更改添加一个观察者。"

#: momovu.models.base.BaseModel.add_observer:3 of
msgid "Callback function to be called on property changes"
msgstr "属性更改时要调用的回调函数"

#: momovu.models.base.BaseModel.remove_observer:1 of
msgid "Remove an observer from the notification list."
msgstr "从通知列表中移除一个观察者。"

#: momovu.models.base.BaseModel.remove_observer:3 of
msgid "Callback function to remove (no-op if not registered)"
msgstr "回调函数用于移除（如果未注册则为无操作）"

#: momovu.models.base.BaseModel.set_property:1 of
msgid "Set a property value with optional validation."
msgstr "使用可选验证设置属性值。"

#: momovu.models.base.BaseModel.get_property:3
#: momovu.models.base.BaseModel.set_property:3 of
msgid "Property name"
msgstr "房产名称"

#: momovu.models.base.BaseModel.set_property:4 of
msgid "New value"
msgstr "新值"

#: momovu.models.base.BaseModel.set_property:5 of
msgid "Whether to validate the value"
msgstr "是否验证该值"

#: momovu.models.base.BaseModel.set_property:7 of
msgid "True if the property was set, False if validation failed"
msgstr "如果属性已设置，则为 True；如果验证失败，则为 False"

#: momovu.models.base.BaseModel.get_property:1 of
msgid "Get a property value."
msgstr "获取属性值。"

#: momovu.models.base.BaseModel.get_property:4 of
msgid "Default value if property doesn't exist"
msgstr "如果属性不存在的默认值"

#: momovu.models.base.BaseModel.get_property:6 of
msgid "The property value or default"
msgstr "属性值或默认值"

#: momovu.models.base.BaseModel.add_validator:1 of
msgid "Add a validator for a property."
msgstr "为一个属性添加验证器。"

#: momovu.models.base.BaseModel.add_validator:3 of
msgid "Name of the property to validate"
msgstr "要验证的属性名称"

#: momovu.models.base.BaseModel.add_validator:4 of
msgid "Function that returns True if value is valid"
msgstr "如果值有效则返回 True 的函数"

#: momovu.models.base.BaseModel.begin_batch_update:1 of
msgid "Start batching property changes to reduce notification overhead."
msgstr "开始对属性更改进行批处理以减少通知开销。"

#: momovu.models.base.BaseModel.end_batch_update:1 of
msgid "Flush all pending property change notifications at once."
msgstr "一次性刷新所有待处理的属性更改通知。"

#: ../../../_source/api.rst:38
msgid "Document Model"
msgstr "文档模型"

#: momovu.models.document:1 of
msgid "PDF document model for MVP architecture."
msgstr "MVP 架构的 PDF 文档模型。"

#: momovu.models.document:3 of
msgid ""
"This model handles PDF document state without any UI dependencies. It stores"
" document metadata and provides validation."
msgstr "该模型处理PDF文档状态，没有任何UI依赖。它存储文档元数据并提供验证功能。"

#: momovu.models.configuration.ConfigurationModel:1
#: momovu.models.document.Document:1
#: momovu.models.margin_settings.MarginSettingsModel:1
#: momovu.models.view_state.ViewStateModel:1 of
msgid "Bases: :py:class:`~momovu.models.base.BaseModel`"
msgstr "基础类：:py:class:`~momovu.models.base.BaseModel`"

#: momovu.models.document.Document:1 of
msgid "Model for PDF document data."
msgstr "PDF 文档数据模型。"

#: momovu.models.document.Document:3 of
msgid ""
"This model stores: - File path - Page count - Page sizes - Document status"
msgstr ""
"此模型存储以下信息：  \n"
"- 文件路径  \n"
"- 页数  \n"
"- 页面尺寸  \n"
"- 文档状态"

#: momovu.models.document.Document:9 of
msgid ""
"It does NOT handle: - PDF rendering (that's a view concern) - PDF loading "
"(that's a presenter concern)"
msgstr ""
"它不处理：  \n"
"- PDF 渲染（这是视图层的问题）  \n"
"- PDF 加载（这是展示层的问题）"

#: momovu.models.document.Document.__init__:1 of
msgid "Initialize empty document model with default validators."
msgstr "使用默认验证器初始化空文档模型。"

#: momovu.models.document.Document.file_path:1 of
msgid "Path to the loaded PDF file, None if no document loaded."
msgstr "已加载的 PDF 文件的路径，如果没有加载文档则为 None。"

#: momovu.models.document.Document.page_count:1 of
msgid "Total number of pages in the document (0 if not loaded)."
msgstr "文档中的总页数（未加载时为0）。"

#: momovu.models.document.Document.page_sizes:1 of
msgid "List of (width, height) tuples in points for each page."
msgstr "每页的（宽度，高度）元组列表，以点为单位。"

#: momovu.models.document.Document.is_loaded:1 of
msgid "True if a document is successfully loaded and ready."
msgstr "如果文档已成功加载并准备好，则为真。"

#: momovu.models.document.Document.error_message:1 of
msgid "Error description if document failed to load, None otherwise."
msgstr "如果文档加载失败的错误描述，否则为None。"

#: momovu.models.document.Document.get_page_size:1 of
msgid "Get size of a specific page."
msgstr "获取特定页面的大小。"

#: momovu.models.document.Document.get_page_size:3
#: momovu.presenters.document.DocumentPresenter.get_page_size:3
#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:5
#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:3
#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:3
#: of
msgid "Zero-based page index"
msgstr "基于零的页索引"

#: momovu.models.document.Document.get_page_size:5 of
msgid "Tuple of (width, height) or None if invalid index"
msgstr "无效索引时为 (宽度, 高度) 的元组或 None"

#: momovu.models.document.Document.clear:1 of
msgid "Reset model to initial unloaded state."
msgstr "将模型重置为初始未加载状态。"

#: momovu.models.document.Document.update_from_document_info:1 of
msgid "Batch update all document properties after successful load."
msgstr "成功加载后批量更新所有文档属性。"

#: momovu.models.document.Document.update_from_document_info:3 of
msgid "Full path to the PDF file"
msgstr "PDF 文件的完整路径"

#: momovu.models.document.Document.update_from_document_info:4 of
msgid "Total pages in document"
msgstr "文档中的总页数"

#: momovu.models.document.Document.update_from_document_info:5 of
msgid "(width, height) tuples for each page"
msgstr "每页的（宽度，高度）元组"

#: momovu.models.document.Document.set_error:1 of
msgid "Mark document as failed to load with error description."
msgstr "将文档标记为加载失败，并附上错误描述。"

#: momovu.models.document.Document.set_error:3 of
msgid "Human-readable error explanation"
msgstr "易于理解的错误说明"

#: momovu.models.document.Document.__repr__:1 of
msgid "Developer-friendly string representation of document state."
msgstr "文档状态的开发者友好型字符串表示形式。"

#: ../../../_source/api.rst:46
msgid "Margin Settings Model"
msgstr "保证金设置模型"

#: momovu.models.margin_settings:1 of
msgid "Margin settings model for MVP architecture."
msgstr "MVP 架构的边距设置模型。"

#: momovu.models.margin_settings:3 of
msgid "This model handles margin configuration without any UI dependencies."
msgstr "该模型处理边距配置时没有任何 UI 依赖。"

#: momovu.models.margin_settings.MarginSettingsModel:1 of
msgid "Model for margin settings data."
msgstr "保证金设置数据模型。"

#: momovu.models.margin_settings.MarginSettingsModel:3 of
msgid ""
"This model stores: - Safety margins (in mm and points) - Spine width - Flap "
"dimensions - Document type"
msgstr ""
"此模型存储以下内容：  \n"
"- 安全边距（以毫米和磅为单位）  \n"
"- 书脊宽度  \n"
"- 翻页尺寸  \n"
"- 文件类型"

#: momovu.models.margin_settings.MarginSettingsModel:9 of
msgid ""
"It does NOT handle: - Margin rendering (that's a view concern) - Margin "
"calculation (that's a presenter concern)"
msgstr ""
"它不处理以下内容：  \n"
"- 页边距渲染（这是视图的职责）  \n"
"- 页边距计算（这是演示器的职责）"

#: momovu.models.margin_settings.MarginSettingsModel.__init__:1 of
msgid "Initialize margin settings with publishing industry defaults."
msgstr "使用出版行业的默认设置初始化页边距。"

#: momovu.models.margin_settings.MarginSettingsModel.document_type:1 of
msgid "'interior', 'cover', or 'dustjacket'."
msgstr "“内页”、“封面”或“书封”。"

#: momovu.models.margin_settings.MarginSettingsModel.document_type
#: momovu.models.view_state.ViewStateModel.view_mode of
msgid "type"
msgstr "类型"

#: momovu.models.margin_settings.MarginSettingsModel.document_type:3 of
msgid "Current document type"
msgstr "当前文件类型"

#: momovu.models.margin_settings.MarginSettingsModel.num_pages:1 of
msgid "Get number of pages."
msgstr "获取页数。"

#: momovu.models.margin_settings.MarginSettingsModel.safety_margin_mm:1 of
msgid "Get safety margin in millimeters."
msgstr "获取以毫米为单位的安全余量。"

#: momovu.models.margin_settings.MarginSettingsModel.safety_margin_points:1 of
msgid "Get safety margin in points."
msgstr "获取安全边际点数。"

#: momovu.models.margin_settings.MarginSettingsModel.spine_width:1 of
msgid "Get spine width."
msgstr "获取脊柱宽度。"

#: momovu.models.margin_settings.MarginSettingsModel.flap_width:1 of
msgid "Get flap width."
msgstr "获取襟翼宽度。"

#: momovu.models.margin_settings.MarginSettingsModel.flap_height:1 of
msgid "Get flap height."
msgstr "获取襟翼高度。"

#: momovu.models.margin_settings.MarginSettingsModel.show_margins:1
#: momovu.models.view_state.ViewStateModel.show_margins:1 of
msgid "Get show margins flag."
msgstr "获取显示边距标志。"

#: momovu.models.margin_settings.MarginSettingsModel.show_trim_lines:1
#: momovu.models.view_state.ViewStateModel.show_trim_lines:1 of
msgid "Get show trim lines flag."
msgstr "获取修剪线标志。"

#: momovu.models.margin_settings.MarginSettingsModel.show_barcode:1
#: momovu.models.view_state.ViewStateModel.show_barcode:1 of
msgid "Get show barcode flag."
msgstr "获取显示条形码标志。"

#: momovu.models.margin_settings.MarginSettingsModel.show_fold_lines:1
#: momovu.models.view_state.ViewStateModel.show_fold_lines:1 of
msgid "Get show fold lines flag."
msgstr "获取显示折线标志"

#: momovu.models.margin_settings.MarginSettingsModel.show_bleed_lines:1 of
msgid "Get show bleed lines flag."
msgstr "获取显示出血线标志"

#: momovu.models.margin_settings.MarginSettingsModel.__repr__:1 of
msgid "Developer-friendly string representation of margin settings."
msgstr "对开发人员友好的边距设置字符串表示形式。"

#: ../../../_source/api.rst:54
msgid "Configuration Model"
msgstr "配置模型"

#: momovu.models.configuration:1 of
msgid "Configuration model for MVP architecture."
msgstr "MVP 架构的配置模型。"

#: momovu.models.configuration.ConfigurationModel:1 of
msgid "Model for configuration data following MVP pattern."
msgstr "遵循MVP模式的配置数据模型。"

#: momovu.models.configuration.ConfigurationModel.__init__:1 of
msgid "Initialize configuration model with validators and defaults."
msgstr "使用验证器和默认值初始化配置模型。"

#: momovu.models.configuration.ConfigurationModel.get_defaults:1 of
msgid "Get default configuration values."
msgstr "获取默认配置值。"

#: momovu.models.configuration.ConfigurationModel.get_defaults:3 of
msgid "Dictionary of all default values"
msgstr "所有默认值的词典"

#: momovu.models.configuration.ConfigurationModel.get_color:1 of
msgid "Get color configuration for an overlay type."
msgstr "获取叠加类型的颜色配置。"

#: momovu.models.configuration.ConfigurationModel.get_color:3 of
msgid "Type of overlay (margin_overlay, barcode_area, etc.)"
msgstr "覆盖类型（margin_overlay、barcode_area 等）"

#: momovu.models.configuration.ConfigurationModel.get_color:5 of
msgid "Dictionary with color and opacity"
msgstr "带颜色和透明度的字典"

#: momovu.models.configuration.ConfigurationModel.set_color:1 of
msgid "Set color configuration for an overlay type."
msgstr "为叠加类型设置颜色配置。"

#: momovu.models.configuration.ConfigurationModel.set_color:3 of
msgid "Type of overlay"
msgstr "覆盖类型"

#: momovu.models.configuration.ConfigurationModel.set_color:4 of
msgid "Color in #RRGGBB format"
msgstr "#RRGGBB 格式的颜色"

#: momovu.models.configuration.ConfigurationModel.set_color:5 of
msgid "Opacity value (0.0-1.0)"
msgstr "不透明度值（0.0-1.0）"

#: momovu.models.configuration.ConfigurationModel.get_line_width:1 of
msgid "Get line width for a line type."
msgstr "获取线型的线宽。"

#: momovu.models.configuration.ConfigurationModel.get_line_width:3 of
msgid "Type of line (fold_lines, trim_lines, etc.)"
msgstr "线型（折线、修剪线等）"

#: momovu.models.configuration.ConfigurationModel.get_line_width:5 of
msgid "Line width in pixels"
msgstr "以像素为单位的线宽"

#: momovu.models.configuration.ConfigurationModel.set_line_width:1 of
msgid "Set line width for a line type."
msgstr "为线型设置线宽。"

#: momovu.models.configuration.ConfigurationModel.set_line_width:3 of
msgid "Type of line"
msgstr "线路类型"

#: momovu.models.configuration.ConfigurationModel.set_line_width:4 of
msgid "Width in pixels (must be positive)"
msgstr "像素宽度（必须为正数）"

#: momovu.models.configuration.ConfigurationModel.get_preference:1 of
msgid "Get a preference value."
msgstr "获取一个偏好值。"

#: momovu.models.configuration.ConfigurationModel.get_preference:3
#: momovu.models.configuration.ConfigurationModel.set_preference:3 of
msgid "Preference key"
msgstr "首选项键"

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:4
#: momovu.models.configuration.ConfigurationModel.get_preference:4 of
msgid "Default value if key doesn't exist"
msgstr "如果键不存在的默认值"

#: momovu.models.configuration.ConfigurationModel.get_preference:6 of
msgid "Preference value or default"
msgstr "首选项值或默认值"

#: momovu.models.configuration.ConfigurationModel.set_preference:1 of
msgid "Set a preference value."
msgstr "设置首选项值。"

#: momovu.lib.configuration_manager.ConfigurationManager.set_value:4
#: momovu.models.configuration.ConfigurationModel.set_preference:4 of
msgid "Value to set"
msgstr "要设置的值"

#: momovu.models.configuration.ConfigurationModel.get_document_defaults:1 of
msgid "Get default settings for a document type."
msgstr "获取文档类型的默认设置。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:3
#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:3
#: momovu.models.configuration.ConfigurationModel.get_document_defaults:3
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:3
#: of
msgid "Document type (interior, cover, dustjacket)"
msgstr "文件类型（内页、封面、护封）"

#: momovu.models.configuration.ConfigurationModel.get_document_defaults:5 of
msgid "Dictionary of default settings"
msgstr "默认设置词典"

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:1 of
msgid "Set default settings for a document type."
msgstr "为文档类型设置默认设置。"

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:3
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:3
#: of
msgid "Document type"
msgstr "文件类型"

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:4 of
msgid "Dictionary of settings"
msgstr "设置词典"

#: ../../../_source/api.rst:62
msgid "View State Model"
msgstr "视图状态模型"

#: momovu.models.view_state:1 of
msgid "View state model for MVP architecture."
msgstr "MVP 架构的视图状态模型。"

#: momovu.models.view_state:3 of
msgid "This model handles view state without any UI dependencies."
msgstr "该模型处理视图状态时没有任何 UI 依赖项。"

#: momovu.models.view_state.ViewStateModel:1 of
msgid "Model for view state data."
msgstr "视图状态数据模型。"

#: momovu.models.view_state.ViewStateModel:3 of
msgid ""
"This model stores: - Current page/page pair - View mode (single/side-by-"
"side) - Zoom level - Visibility flags"
msgstr ""
"此模型存储以下内容：  \n"
"- 当前页面/页面对  \n"
"- 查看模式（单页/并排）  \n"
"- 缩放级别  \n"
"- 可见性标志"

#: momovu.models.view_state.ViewStateModel:9 of
msgid ""
"It does NOT handle: - View rendering (that's a view concern) - Navigation "
"logic (that's a presenter concern)"
msgstr ""
"它不处理：  \n"
"- 视图渲染（那是视图的职责）  \n"
"- 导航逻辑（那是Presenter的职责）"

#: momovu.models.view_state.ViewStateModel.__init__:1 of
msgid ""
"Initialize view state with default single-page mode and all overlays "
"visible."
msgstr "使用默认的单页模式和所有覆盖层可见来初始化视图状态。"

#: momovu.models.view_state.ViewStateModel.current_page:1 of
msgid "Zero-based index of the currently displayed page."
msgstr "当前显示页面的零基索引。"

#: momovu.models.view_state.ViewStateModel.view_mode:1 of
msgid "'single' or 'side_by_side'."
msgstr "“single” 或 “side_by_side”。"

#: momovu.models.view_state.ViewStateModel.view_mode:3 of
msgid "Current viewing mode"
msgstr "当前浏览模式"

#: momovu.models.view_state.ViewStateModel.zoom_level:1 of
msgid "Current zoom factor where 1.0 = 100%, 2.0 = 200%, etc."
msgstr "当前的缩放比例，其中 1.0 = 100%，2.0 = 200%，依此类推。"

#: momovu.models.view_state.ViewStateModel.show_spine_line:1 of
msgid "Get show spine line flag."
msgstr "获取显示脊线标志"

#: momovu.models.view_state.ViewStateModel.is_fullscreen:1 of
msgid "Get fullscreen state."
msgstr "获取全屏状态。"

#: momovu.models.view_state.ViewStateModel.is_presentation:1 of
msgid "Get presentation mode state."
msgstr "获取演示模式状态。"

#: momovu.models.view_state.ViewStateModel.is_single_page_mode:1 of
msgid "True if displaying one page at a time."
msgstr "如果一次显示一页，则为真。"

#: momovu.models.view_state.ViewStateModel.is_side_by_side_mode:1 of
msgid "True if displaying page pairs side-by-side."
msgstr "如果并排显示页面对，则为真。"

#: momovu.models.view_state.ViewStateModel.toggle_view_mode:1 of
msgid "Switch between single page and side-by-side page pair display."
msgstr "切换单页和并排页对显示。"

#: momovu.models.view_state.ViewStateModel.__repr__:1 of
msgid "Developer-friendly string representation of view state."
msgstr "视图状态的开发者友好型字符串表示形式。"

#: ../../../_source/api.rst:70
msgid "Presenters"
msgstr "演讲者"

#: ../../../_source/api.rst:72
msgid ""
"The presenters implement the Presenter component of the MVP architecture "
"pattern. They handle the business logic and coordinate between models and "
"views."
msgstr "演示者实现了MVP架构模式中的Presenter组件。它们处理业务逻辑，并在模型和视图之间进行协调。"

#: ../../../_source/api.rst:76
msgid "Base Presenter"
msgstr "基础演示者"

#: momovu.presenters.base:1 of
msgid "Base presenter class for MVP architecture."
msgstr "MVP 架构的基础 Presenter 类。"

#: momovu.presenters.base:3 of
msgid ""
"This module provides the foundation for all presenters. Presenters handle "
"business logic and coordinate between models and views."
msgstr "此模块为所有演示器提供了基础。演示器处理业务逻辑，并在模型和视图之间进行协调。"

#: momovu.presenters.base.IView:1 of
msgid "Bases: :py:class:`~typing.Protocol`"
msgstr "基础类：:py:class:`~typing.Protocol`"

#: momovu.presenters.base.IView:1 of
msgid "Interface that all views must implement for presenter interaction."
msgstr "所有视图必须实现的用于与演示器交互的接口。"

#: momovu.presenters.base.IView.update_display:1 of
msgid "Receive property updates from presenter."
msgstr "接收来自演示者的属性更新。"

#: momovu.presenters.base.IView.update_display:3 of
msgid "Changed properties as key-value pairs"
msgstr "以键值对形式更改的属性"

#: momovu.presenters.base.BasePresenter:1 of
msgid "Base class for all presenters in the MVP architecture."
msgstr "MVP 架构中所有 Presenter 的基类。"

#: momovu.presenters.base.BasePresenter:3 of
msgid ""
"This class provides: - View reference management - Model coordination - "
"Common presenter functionality"
msgstr ""
"此类提供：  \n"
"- 视图引用管理  \n"
"- 模型协调  \n"
"- 通用的Presenter功能"

#: momovu.presenters.base.BasePresenter.__init__:1 of
msgid "Initialize the base presenter."
msgstr "初始化基础演示者。"

#: momovu.presenters.base.BasePresenter.__init__:3 of
msgid "Optional view to attach to this presenter"
msgstr "可选的视图，可附加到此演示者"

#: momovu.presenters.base.BasePresenter.view:1 of
msgid "Access the currently attached view instance."
msgstr "访问当前附加的视图实例。"

#: momovu.presenters.base.BasePresenter.has_view:1 of
msgid "Check if presenter has an active view connection."
msgstr "检查演讲者是否有活动的视图连接。"

#: momovu.presenters.base.BasePresenter.update_view:1 of
msgid "Push property changes to attached view if present."
msgstr "如果存在附加视图，则将属性更改推送到附加视图。"

#: momovu.presenters.base.BasePresenter.update_view:3 of
msgid "Property updates to send"
msgstr "房产更新信息发送"

#: momovu.presenters.base.BasePresenter.cleanup:1
#: momovu.presenters.document.DocumentPresenter.cleanup:1 of
msgid "Release resources and remove model observers."
msgstr "释放资源并移除模型观察者。"

#: momovu.presenters.base.BasePresenter.cleanup:3 of
msgid "Subclasses override to disconnect from models and clear state."
msgstr "子类可覆盖以断开与模型的连接并清除状态。"

#: ../../../_source/api.rst:84
msgid "Configuration Presenter"
msgstr "配置演示器"

#: momovu.presenters.configuration:1 of
msgid "Configuration presenter for MVP architecture."
msgstr "MVP 架构的配置呈现器。"

#: momovu.presenters.configuration.ConfigurationPresenter:1 of
msgid "Presenter for configuration management."
msgstr "配置管理演示者。"

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:1 of
msgid "Initialize the configuration presenter."
msgstr "初始化配置演示器。"

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:3 of
msgid "Configuration model"
msgstr "配置模型"

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:4 of
msgid "Configuration manager"
msgstr "配置管理器"

#: momovu.presenters.configuration.ConfigurationPresenter.load_configuration:1
#: of
msgid "Load configuration from storage into model."
msgstr "从存储加载配置到模型中。"

#: momovu.presenters.configuration.ConfigurationPresenter.save_configuration:1
#: of
msgid "Save model configuration to storage."
msgstr "将模型配置保存到存储。"

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:1
#: of
msgid "Apply configuration to the application."
msgstr "将配置应用到应用程序。"

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:3
#: of
msgid "Main window instance to apply configuration to"
msgstr "要应用配置的主窗口实例"

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:4
#: of
msgid "If True, skip restoring window geometry/state"
msgstr "如果为 True，则跳过恢复窗口几何/状态"

#: momovu.presenters.configuration.ConfigurationPresenter.reset_to_defaults:1
#: of
msgid "Reset configuration to default values."
msgstr "将配置重置为默认值。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:1
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:1
#: of
msgid "Get overlay settings for a document type."
msgstr "获取文档类型的覆盖设置。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:5
#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:4
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:5
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:4
#: of
msgid "Dictionary of overlay visibility settings"
msgstr "叠加层可见性设置字典"

#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:1
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:1
#: of
msgid "Save overlay settings for a document type."
msgstr "为文档类型保存覆盖设置。"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:1 of
msgid "Add a file to the recent files list."
msgstr "将文件添加到最近的文件列表中。"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:3
#: momovu.presenters.document.DocumentPresenter.load_document:3 of
msgid "Path to the PDF file"
msgstr "PDF文件的路径"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:4 of
msgid "Type of document (interior, cover, dustjacket)"
msgstr "文件类型（内页、封面、护封）"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:5 of
msgid "Number of pages (for covers/dustjackets)"
msgstr "页数（用于封面/护封）"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:6 of
msgid "Current page being viewed"
msgstr "当前浏览的页面"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:7 of
msgid "Current view mode (single, side_by_side)"
msgstr "当前视图模式（单视图，分屏视图）"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:8 of
msgid "Current zoom level"
msgstr "当前缩放级别"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:9 of
msgid "Current overlay visibility settings"
msgstr "当前覆盖层可见性设置"

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:10
#: momovu.views.components.page_strategies.base.BaseStrategy.render:4 of
msgid "Whether in presentation mode"
msgstr "无论是在演示模式下"

#: momovu.presenters.configuration.ConfigurationPresenter.get_recent_files:1
#: of
msgid "Get the list of recent files."
msgstr "获取最近文件的列表。"

#: momovu.presenters.configuration.ConfigurationPresenter.get_recent_files:3
#: of
msgid "List of recent file dictionaries"
msgstr "最近文件词典列表"

#: momovu.lib.configuration_manager.ConfigurationManager.clear_recent_files:1
#: momovu.presenters.configuration.ConfigurationPresenter.clear_recent_files:1
#: momovu.views.components.preferences_dialog.PreferencesDialog.clear_recent_files:1
#: of
msgid "Clear the recent files list."
msgstr "清除最近的文件列表。"

#: ../../../_source/api.rst:92
msgid "Document Presenter"
msgstr "文档演示器"

#: momovu.presenters.document:1 of
msgid "Document presenter for handling PDF document logic."
msgstr "用于处理PDF文档逻辑的文档演示器。"

#: momovu.presenters.document:3 of
msgid ""
"This presenter manages PDF document operations without UI dependencies. It "
"coordinates between Document and the view layer."
msgstr "此演示器管理 PDF 文档操作，不依赖用户界面。它在文档和视图层之间进行协调。"

#: momovu.presenters.document.DocumentPresenter:1
#: momovu.presenters.margin.MarginPresenter:1
#: momovu.presenters.navigation.NavigationPresenter:1 of
msgid "Bases: :py:class:`~momovu.presenters.base.BasePresenter`"
msgstr "基础类: :py:class:`~momovu.presenters.base.BasePresenter`"

#: momovu.presenters.document.DocumentPresenter:1 of
msgid "Presenter for PDF document operations."
msgstr "用于PDF文档操作的演示文稿。"

#: momovu.presenters.document.DocumentPresenter:3 of
msgid ""
"This presenter handles: - PDF loading and error handling - Page management -"
" Document type detection - Document state coordination"
msgstr ""
"该演示器处理以下内容：  \n"
"- PDF 加载和错误处理  \n"
"- 页面管理  \n"
"- 文档类型检测  \n"
"- 文档状态协调"

#: momovu.presenters.document.DocumentPresenter.__init__:1 of
msgid "Initialize the document presenter."
msgstr "初始化文档展示器。"

#: momovu.presenters.document.DocumentPresenter.__init__:3 of
msgid "Optional document model to use"
msgstr "要使用的可选文档模型"

#: momovu.presenters.document.DocumentPresenter.set_qt_document:1 of
msgid "Set the Qt PDF document for loading operations."
msgstr "设置 Qt PDF 文档以进行加载操作。"

#: momovu.presenters.document.DocumentPresenter.set_qt_document:3 of
msgid "The QPdfDocument instance to use"
msgstr "要使用的 QPdfDocument 实例"

#: momovu.presenters.document.DocumentPresenter.set_qt_document:7 of
msgid ""
"The presenter currently delegates PDF operations to QPdfDocument. This "
"design allows for future migration to alternative PDF backends without "
"affecting the view layer."
msgstr "目前，演示者将 PDF 操作委托给 QPdfDocument。这种设计允许将来迁移到其他 PDF 后端，而不会影响视图层。"

#: momovu.presenters.document.DocumentPresenter.load_document:1 of
msgid "Load a PDF document."
msgstr "加载一个PDF文档。"

#: momovu.presenters.document.DocumentPresenter.load_document:5 of
msgid "True if loaded successfully"
msgstr "如果成功加载则为真"

#: momovu.presenters.document.DocumentPresenter.get_page_count:1 of
msgid "Get the number of pages in the document."
msgstr "获取文档中的页数。"

#: momovu.presenters.document.DocumentPresenter.get_page_count:3 of
msgid "Number of pages, or 0 if no document is loaded"
msgstr "页数，如果没有加载文档则为 0"

#: momovu.presenters.document.DocumentPresenter.get_page_size:1 of
msgid "Get the size of a specific page in points."
msgstr "获取特定页面的尺寸（以点为单位）。"

#: momovu.presenters.document.DocumentPresenter.get_page_size:5 of
msgid "Tuple of (width, height) in points, or None if page index is invalid"
msgstr "以点为单位的 (宽度, 高度) 元组，如果页面索引无效则为 None"

#: momovu.presenters.document.DocumentPresenter.is_document_loaded:1 of
msgid "Check if a document is currently loaded."
msgstr "检查是否已加载文档。"

#: momovu.presenters.document.DocumentPresenter.is_document_loaded:3 of
msgid "True if a document is loaded and ready for operations"
msgstr "如果文档已加载并准备好进行操作，则为真"

#: momovu.presenters.document.DocumentPresenter.close_document:1 of
msgid "Close the current document and reset to initial state."
msgstr "关闭当前文档并重置为初始状态。"

#: momovu.presenters.document.DocumentPresenter.close_document:3 of
msgid ""
"This method: - Closes the Qt PDF document - Clears the model state - "
"Notifies observers of the change"
msgstr ""
"此方法：  \n"
"- 关闭 Qt PDF 文档  \n"
"- 清除模型状态  \n"
"- 通知观察者状态已更改"

#: momovu.presenters.document.DocumentPresenter.model:1 of
msgid "Access the underlying document model."
msgstr "访问底层文档模型。"

#: momovu.presenters.document.DocumentPresenter.is_loaded:1 of
msgid "Backward compatibility property for is_document_loaded()."
msgstr "is_document_loaded() 的向后兼容属性。"

#: ../../../_source/api.rst:100
msgid "Margin Presenter"
msgstr "保证金展示"

#: momovu.presenters.margin:1 of
msgid "Margin presenter for handling margin calculations and logic."
msgstr "用于处理保证金计算和逻辑的保证金呈现器。"

#: momovu.presenters.margin:3 of
msgid ""
"This presenter manages margin operations without UI dependencies. It "
"coordinates between MarginSettingsModel and the view layer."
msgstr "此演示器可在不依赖用户界面的情况下管理边距操作。它在 MarginSettingsModel 和视图层之间进行协调。"

#: momovu.presenters.margin.MarginPresenter:1 of
msgid "Presenter for margin calculations and management."
msgstr "用于边距计算和管理的演示器。"

#: momovu.presenters.margin.MarginPresenter:3 of
msgid ""
"This presenter handles: - Margin calculations - Trim line positioning - "
"Spine/flap calculations - Barcode area logic"
msgstr ""
"该演讲者负责以下内容：  \n"
"- 页边距计算  \n"
"- 修剪线定位  \n"
"- 脊部/折页计算  \n"
"- 条形码区域逻辑"

#: momovu.presenters.margin.MarginPresenter.__init__:1 of
msgid "Initialize the margin presenter."
msgstr "初始化边距演示器。"

#: momovu.presenters.margin.MarginPresenter.__init__:3 of
msgid "Optional margin settings model to use"
msgstr "可选的边距设置模型"

#: momovu.presenters.margin.MarginPresenter.set_document_type:1
#: momovu.views.main_window.MainWindow.set_document_type:1 of
msgid "Set the document type."
msgstr "设置文档类型。"

#: momovu.presenters.margin.MarginPresenter.set_document_type:3 of
msgid "Type of document ('interior', 'cover', 'dustjacket')"
msgstr "文档类型（'内页'，'封面'，'护封'）"

#: momovu.presenters.margin.MarginPresenter.get_document_type:1 of
msgid "Get the current document type."
msgstr "获取当前文档类型。"

#: momovu.presenters.margin.MarginPresenter.get_document_type:3 of
msgid "The current document type ('interior', 'cover', or 'dustjacket')"
msgstr "当前文档类型（'interior'、'cover' 或 'dustjacket'）"

#: momovu.presenters.margin.MarginPresenter.set_num_pages:1 of
msgid "Update page count and recalculate spine width for cover/dustjacket."
msgstr "更新页数并重新计算封面/护封的书脊宽度。"

#: momovu.presenters.margin.MarginPresenter.set_num_pages:3 of
msgid "Total pages in the document"
msgstr "文档中的总页数"

#: momovu.presenters.margin.MarginPresenter.set_show_margins:1 of
msgid "Enable or disable safety margin overlay display."
msgstr "启用或禁用安全边距叠加显示。"

#: momovu.presenters.margin.MarginPresenter.set_show_margins:3 of
msgid "True to display margin overlays"
msgstr "显示页边距覆盖层"

#: momovu.presenters.margin.MarginPresenter.set_show_trim_lines:1 of
msgid "Enable or disable trim line display at page edges."
msgstr "启用或禁用页边的裁剪线显示。"

#: momovu.presenters.margin.MarginPresenter.set_show_trim_lines:3 of
msgid "True to display trim lines"
msgstr "显示修剪线"

#: momovu.presenters.margin.MarginPresenter.set_show_barcode:1 of
msgid "Enable or disable barcode area indicator on covers."
msgstr "启用或禁用封面的条码区域指示器。"

#: momovu.presenters.margin.MarginPresenter.set_show_barcode:3 of
msgid "True to display barcode area"
msgstr "显示条码区域"

#: momovu.presenters.margin.MarginPresenter.set_show_fold_lines:1 of
msgid "Enable or disable spine/flap fold line display."
msgstr "启用或禁用脊线/折痕线显示。"

#: momovu.presenters.margin.MarginPresenter.set_show_fold_lines:3 of
msgid "True to display fold lines"
msgstr "显示折痕线"

#: momovu.presenters.margin.MarginPresenter.set_show_bleed_lines:1 of
msgid "Enable or disable bleed line display at page edges."
msgstr "启用或禁用页面边缘的出血线显示。"

#: momovu.presenters.margin.MarginPresenter.set_show_bleed_lines:3 of
msgid "True to display bleed lines"
msgstr "显示出血线"

#: momovu.presenters.margin.MarginPresenter.cleanup:1
#: momovu.presenters.navigation.NavigationPresenter.cleanup:1 of
msgid "Remove model observer and release resources."
msgstr "移除模型观察器并释放资源。"

#: momovu.presenters.margin.MarginPresenter.model:1 of
msgid "Access the underlying margin settings model."
msgstr "访问底层保证金设置模型。"

#: ../../../_source/api.rst:108
msgid "Navigation Presenter"
msgstr "导航演示器"

#: momovu.presenters.navigation:1 of
msgid "Navigation presenter for handling page navigation logic."
msgstr "用于处理页面导航逻辑的导航演示器。"

#: momovu.presenters.navigation:3 of
msgid ""
"This presenter manages navigation operations without UI dependencies. It "
"coordinates between ViewStateModel and the view layer."
msgstr "此演示者管理导航操作，不依赖用户界面。它在 ViewStateModel 和视图层之间进行协调。"

#: momovu.presenters.navigation.NavigationPresenter:1 of
msgid "Presenter for page navigation operations."
msgstr "用于页面导航操作的演示器。"

#: momovu.presenters.navigation.NavigationPresenter:3 of
msgid ""
"This presenter handles: - Page navigation (next, previous, first, last) - "
"Side-by-side pair navigation - Page jumping - Navigation validation"
msgstr ""
"该演示器处理以下功能：  \n"
"- 页面导航（下一页、上一页、第一页、最后一页）  \n"
"- 并排配对导航  \n"
"- 跳转到指定页面  \n"
"- 导航验证"

#: momovu.presenters.navigation.NavigationPresenter.__init__:1 of
msgid "Initialize the navigation presenter."
msgstr "初始化导航演示器。"

#: momovu.presenters.navigation.NavigationPresenter.__init__:3 of
msgid "Optional view state model to use"
msgstr "要使用的可选视图状态模型"

#: momovu.presenters.navigation.NavigationPresenter.__init__:4 of
msgid "Total number of pages in the document"
msgstr "文档中的总页数"

#: momovu.presenters.navigation.NavigationPresenter.set_total_pages:1 of
msgid "Update page count and adjust current page if necessary."
msgstr "更新页数，必要时调整当前页面。"

#: momovu.presenters.navigation.NavigationPresenter.set_total_pages:3 of
msgid "New total page count"
msgstr "新的总页数"

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:1 of
msgid "Navigate to a specific page."
msgstr "导航到特定页面。"

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:3 of
msgid "Zero-based page index to navigate to"
msgstr "要导航到的零基页索引"

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:5 of
msgid "True if navigation was successful"
msgstr "如果导航成功则为真"

#: momovu.presenters.navigation.NavigationPresenter.next_page:1 of
msgid "Advance to the next page or page pair in side-by-side mode."
msgstr "在并排模式下前进到下一页或下一页对。"

#: momovu.presenters.navigation.NavigationPresenter.next_page:3 of
msgid "True if navigation occurred, False if already at end"
msgstr "如果已导航则为 True，如果已在末尾则为 False"

#: momovu.presenters.navigation.NavigationPresenter.previous_page:1 of
msgid "Move back to the previous page or page pair in side-by-side mode."
msgstr "在并排模式下，返回到前一页或前一页对。"

#: momovu.presenters.navigation.NavigationPresenter.previous_page:3 of
msgid "True if navigation occurred, False if already at start"
msgstr "如果已导航则为真，如果已在起点则为假"

#: momovu.presenters.navigation.NavigationPresenter.go_to_first_page:1 of
msgid "Jump to the beginning of the document."
msgstr "跳到文档的开头。"

#: momovu.presenters.navigation.NavigationPresenter.go_to_first_page:3
#: momovu.presenters.navigation.NavigationPresenter.go_to_last_page:3 of
msgid "True if navigation occurred"
msgstr "如果发生了导航，则为真"

#: momovu.presenters.navigation.NavigationPresenter.go_to_last_page:1 of
msgid "Jump to the end of the document, handling side-by-side edge cases."
msgstr "跳到文档末尾，处理并排的边缘情况。"

#: momovu.presenters.navigation.NavigationPresenter.set_view_mode:1 of
msgid "Set the view mode."
msgstr "设置视图模式。"

#: momovu.presenters.navigation.NavigationPresenter.set_view_mode:3 of
msgid "View mode ('single' or 'side_by_side')"
msgstr "查看模式（'single' 或 'side_by_side'）"

#: momovu.presenters.navigation.NavigationPresenter.toggle_view_mode:1 of
msgid "Switch between single page and side-by-side page display."
msgstr "切换单页和并排页面显示。"

#: momovu.presenters.navigation.NavigationPresenter.get_current_page:1 of
msgid "Get the zero-based index of the currently displayed page."
msgstr "获取当前显示页面的从零开始的索引。"

#: momovu.presenters.navigation.NavigationPresenter.get_current_page:3 of
msgid "Current page index (0 to total_pages-1)"
msgstr "当前页索引（0 到 total_pages-1）"

#: momovu.presenters.navigation.NavigationPresenter.get_total_pages:1 of
msgid "Get the total page count in the document."
msgstr "获取文档中的总页数。"

#: momovu.presenters.navigation.NavigationPresenter.get_total_pages:3 of
msgid "Number of pages, or 0 if no document loaded"
msgstr "页数，如果没有加载文档则为 0"

#: momovu.presenters.navigation.NavigationPresenter.get_current_page_pair:1 of
msgid "Get the current page pair for side-by-side mode."
msgstr "获取并排模式的当前页面对。"

#: momovu.presenters.navigation.NavigationPresenter.get_current_page_pair:3 of
msgid "Tuple of (left_page, right_page) where right_page may be None"
msgstr "(left_page, right_page) 元组，其中 right_page 可以为 None"

#: momovu.presenters.navigation.NavigationPresenter.is_at_first_page:1 of
msgid "Check if navigation is at the document start."
msgstr "检查导航是否位于文档开头。"

#: momovu.presenters.navigation.NavigationPresenter.is_at_first_page:3 of
msgid "True if on page 0"
msgstr "如果在第 0 页则为真"

#: momovu.presenters.navigation.NavigationPresenter.is_at_last_page:1 of
msgid "Check if navigation is at the document end."
msgstr "检查导航是否已到达文档末尾。"

#: momovu.presenters.navigation.NavigationPresenter.is_at_last_page:3 of
msgid "True if no more pages can be navigated forward"
msgstr "如果无法再向前导航更多页面，则为真"

#: momovu.presenters.navigation.NavigationPresenter.get_page_display_text:1 of
msgid "Get formatted text for page display."
msgstr "获取用于页面显示的格式化文本。"

#: momovu.presenters.navigation.NavigationPresenter.get_page_display_text:3 of
msgid "Formatted page display text (e.g., \"Page 1 of 10\")"
msgstr "格式化的页面显示文本（例如，“第 1 页，共 10 页”）"

#: momovu.presenters.navigation.NavigationPresenter.can_go_next:1 of
msgid "Check if forward navigation is available."
msgstr "检查是否可以向前导航。"

#: momovu.presenters.navigation.NavigationPresenter.can_go_next:3 of
msgid "True unless at the last page"
msgstr "除非在最后一页，否则为真"

#: momovu.presenters.navigation.NavigationPresenter.can_go_previous:1 of
msgid "Check if backward navigation is available."
msgstr "检查是否可以反向导航。"

#: momovu.presenters.navigation.NavigationPresenter.can_go_previous:3 of
msgid "True unless at the first page"
msgstr "除非在第一页，否则为真"

#: momovu.presenters.navigation.NavigationPresenter.model:1 of
msgid "Access the underlying view state model."
msgstr "访问底层视图状态模型。"

#: ../../../_source/api.rst:116
msgid "Views"
msgstr "观点"

#: ../../../_source/api.rst:118
msgid ""
"The views implement the View component of the MVP architecture pattern. They"
" handle the user interface and display logic."
msgstr "视图实现了MVP架构模式中的View组件。它们处理用户界面和显示逻辑。"

#: ../../../_source/api.rst:122
msgid "Main Window"
msgstr "主窗口"

#: momovu.views.main_window:1 of
msgid "Main window for the Momovu PDF viewer application."
msgstr "Momovu PDF 阅读器应用程序的主窗口。"

#: momovu.views.main_window:3 of
msgid ""
"This refactored version delegates functionality to specialized components, "
"keeping the main window clean and focused on coordination only."
msgstr "此重构版本将功能委托给专用组件，使主窗口保持整洁，并仅专注于协调工作。"

#: momovu.views.main_window.MainWindow:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QMainWindow`"
msgstr "基类：:py:class:`~PySide6.QtWidgets.QMainWindow`"

#: momovu.views.main_window.MainWindow:1 of
msgid "Main window for the MVP PDF viewer application."
msgstr "MVP PDF 查看器应用程序的主窗口。"

#: momovu.views.main_window.MainWindow.__init__:1 of
msgid "Initialize the main window."
msgstr "初始化主窗口。"

#: momovu.views.main_window.MainWindow.load_pdf:1 of
msgid "Load a PDF file with error handling."
msgstr "带错误处理加载PDF文件。"

#: momovu.views.main_window.MainWindow.render_current_page:1 of
msgid "Render pages using the page renderer component with error handling."
msgstr "使用带错误处理的页面渲染器组件来渲染页面。"

#: momovu.views.main_window.MainWindow.render_current_page:3 of
msgid "If True, skip automatic fit-to-page (useful for overlay toggles)"
msgstr "如果为 True，则跳过自动适应页面（适用于叠加切换）"

#: momovu.views.main_window.MainWindow.update_page_label:1 of
msgid "Update the page label in the status bar and spinbox."
msgstr "更新状态栏和微调框中的页面标签。"

#: momovu.views.components.navigation_controller.NavigationController.on_page_number_changed:1
#: momovu.views.main_window.MainWindow.on_page_number_changed:1 of
msgid "Handle page number spinbox change."
msgstr "处理页码微调框更改。"

#: momovu.views.components.navigation_controller.NavigationController.on_page_number_changed:3
#: momovu.views.main_window.MainWindow.on_page_number_changed:3 of
msgid "New page number (1-based)"
msgstr "新的页码（从1开始）"

#: momovu.views.main_window.MainWindow.on_num_pages_changed:1 of
msgid "Handle number of pages spinbox change."
msgstr "处理页数微调框更改。"

#: momovu.views.main_window.MainWindow.open_file_dialog:1 of
msgid "Open a file dialog to select a PDF with error handling."
msgstr "打开一个文件对话框以选择PDF文件，并进行错误处理。"

#: momovu.views.main_window.MainWindow.toggle_fullscreen:1 of
msgid "Toggle fullscreen mode."
msgstr "切换全屏模式。"

#: momovu.views.main_window.MainWindow.toggle_presentation:1 of
msgid "Toggle presentation mode."
msgstr "切换演示模式。"

#: momovu.views.main_window.MainWindow.enter_presentation_mode:1 of
msgid "Enter presentation mode."
msgstr "进入演示模式。"

#: momovu.views.main_window.MainWindow.exit_presentation_mode:1 of
msgid "Exit presentation mode."
msgstr "退出演示模式。"

#: momovu.views.main_window.MainWindow.toggle_side_by_side:1 of
msgid "Toggle side-by-side view mode."
msgstr "切换并排视图模式。"

#: momovu.views.main_window.MainWindow.toggle_margins:1 of
msgid "Toggle margin visibility."
msgstr "切换页边距可见性。"

#: momovu.views.main_window.MainWindow.toggle_trim_lines:1 of
msgid "Toggle trim lines visibility."
msgstr "切换修剪线的可见性。"

#: momovu.views.main_window.MainWindow.toggle_barcode:1 of
msgid "Toggle barcode visibility."
msgstr "切换条码可见性。"

#: momovu.views.main_window.MainWindow.toggle_fold_lines:1 of
msgid "Toggle fold lines visibility."
msgstr "切换折叠线的可见性。"

#: momovu.views.main_window.MainWindow.toggle_bleed_lines:1 of
msgid "Toggle bleed lines visibility."
msgstr "切换出血线的可见性。"

#: momovu.views.main_window.MainWindow.zoom_in:1 of
msgid "Zoom in from viewport center."
msgstr "从视口中心放大。"

#: momovu.views.main_window.MainWindow.zoom_out:1 of
msgid "Zoom out from viewport center."
msgstr "从视口中心缩小。"

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:1
#: momovu.views.main_window.MainWindow.fit_to_page:1 of
msgid "Fit the current page(s) to the view."
msgstr "将当前页(面)适应视图。"

#: momovu.views.main_window.MainWindow.show_shortcuts_dialog:1 of
msgid "Show the keyboard shortcuts dialog."
msgstr "显示键盘快捷键对话框。"

#: momovu.views.main_window.MainWindow.show_about_dialog:1 of
msgid "Show the about dialog."
msgstr "显示关于对话框。"

#: momovu.views.main_window.MainWindow.show_go_to_page_dialog:1 of
msgid "Show the go to page dialog."
msgstr "显示跳转页面对话框。"

#: momovu.views.main_window.MainWindow.show_spine_calculator_dialog:1 of
msgid "Show the spine width calculator dialog."
msgstr "显示脊宽计算器对话框。"

#: momovu.views.main_window.MainWindow.keyPressEvent:1 of
msgid "Handle keyboard events by delegating to GraphicsView."
msgstr "通过委托给 GraphicsView 来处理键盘事件。"

#: momovu.views.main_window.MainWindow.keyPressEvent:3 of
msgid ""
"This exists for compatibility with tests and Qt's event system. All actual "
"handling is in GraphicsView."
msgstr "这是为了与测试和Qt的事件系统兼容而存在的。所有实际的处理都在GraphicsView中。"

#: momovu.views.main_window.MainWindow.go_to_first_page:1 of
msgid "Navigate to first page."
msgstr "导航到第一页。"

#: momovu.views.main_window.MainWindow.previous_page:1 of
msgid "Navigate to previous page."
msgstr "返回上一页。"

#: momovu.views.main_window.MainWindow.next_page:1 of
msgid "Navigate to next page."
msgstr "前往下一页。"

#: momovu.views.main_window.MainWindow.go_to_last_page:1 of
msgid "Navigate to last page."
msgstr "转到最后一页。"

#: momovu.views.main_window.MainWindow.closeEvent:1 of
msgid "Handle window close event and cleanup resources."
msgstr "处理窗口关闭事件并清理资源。"

#: momovu.views.main_window.MainWindow.close_pdf:1 of
msgid "Close the current PDF document without exiting the application."
msgstr "不退出应用程序的情况下关闭当前 PDF 文档。"

#: momovu.views.main_window.MainWindow.show_preferences_dialog:1 of
msgid "Show the preferences dialog with proper lifecycle management."
msgstr "使用适当的生命周期管理显示首选项对话框。"

#: momovu.views.main_window.MainWindow.load_recent_file:1 of
msgid "Load a recent file from the menu."
msgstr "从菜单中加载最近的文件。"

#: momovu.views.main_window.MainWindow.load_recent_file:3 of
msgid "Path to the PDF file to load"
msgstr "要加载的 PDF 文件的路径"

#: ../../../_source/api.rst:130
msgid "Page Item"
msgstr "页面项目"

#: momovu.views.page_item:1 of
msgid ""
"PDF page item for MVP viewer - renders dynamically based on zoom level."
msgstr "MVP查看器的PDF页面项——根据缩放级别动态渲染。"

#: momovu.views.page_item.PageItem:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QGraphicsItem`"
msgstr "基类：:py:class:`~PySide6.QtWidgets.QGraphicsItem`"

#: momovu.views.page_item.PageItem:1 of
msgid "PDF page graphics item that renders dynamically based on zoom level."
msgstr "根据缩放级别动态渲染的 PDF 页面图形项。"

#: momovu.views.page_item.PageItem:3 of
msgid ""
"This is a simplified version of PageItem specifically for the MVP viewer. It"
" renders the PDF page at the appropriate resolution for the current zoom "
"level."
msgstr "这是为MVP查看器特别简化版的PageItem。它会根据当前的缩放级别以适当的分辨率渲染PDF页面。"

#: momovu.views.page_item.PageItem.__init__:1 of
msgid "Initialize the PDF page item."
msgstr "初始化 PDF 页面项。"

#: momovu.views.page_item.PageItem.__init__:3 of
msgid "The PDF document"
msgstr "PDF文档"

#: momovu.views.page_item.PageItem.__init__:4 of
msgid "Zero-based page number"
msgstr "零基页码"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:5
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:5
#: momovu.views.page_item.PageItem.__init__:5 of
msgid "Page width in points"
msgstr "以磅为单位的页面宽度"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:6
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:6
#: momovu.views.page_item.PageItem.__init__:6 of
msgid "Page height in points"
msgstr "页面高度（磅）"

#: momovu.views.page_item.PageItem.boundingRect:1 of
msgid "Define item's scene space boundaries for Qt rendering."
msgstr "为Qt渲染定义项目的场景空间边界。"

#: momovu.views.page_item.PageItem.paint:1 of
msgid ""
"Render only the visible portion of the PDF page for optimal performance."
msgstr "为获得最佳性能，仅渲染PDF页面的可见部分。"

#: momovu.views.page_item.PageItem.paint:3 of
msgid "Uses caching and buffer zones for smooth panning experience."
msgstr "使用缓存和缓冲区以实现流畅的平移体验。"

#: momovu.views.page_item.PageItem.cleanup:1 of
msgid "Clean up resources when page item is being removed."
msgstr "在页面项被移除时清理资源。"

#: momovu.views.page_item.PageItem.cleanup:3 of
msgid ""
"This is called when the scene is cleared or the item is removed. Ensures "
"timers are stopped to prevent crashes."
msgstr "在场景被清除或该项目被移除时调用。确保计时器已停止以防止崩溃。"

#: ../../../_source/api.rst:138
msgid "View Components"
msgstr "查看组件"

#: ../../../_source/api.rst:140
msgid "These components handle specific aspects of the view layer."
msgstr "这些组件处理视图层的特定方面。"

#: ../../../_source/api.rst:143
msgid "About Dialog"
msgstr "关于对话"

#: momovu.views.components.about_dialog:1 of
msgid "About dialog component for the Momovu application."
msgstr "关于Momovu应用程序的对话组件。"

#: momovu.views.components.about_dialog:3 of
msgid ""
"This module provides a dedicated About dialog that displays application "
"information, version details, and links to resources."
msgstr "此模块提供一个专用的“关于”对话框，用于显示应用程序信息、版本详细信息以及资源链接。"

#: momovu.lib.shortcuts_dialog.ShortcutsDialog:1
#: momovu.views.components.about_dialog.AboutDialog:1
#: momovu.views.components.preferences_dialog.PreferencesDialog:1
#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog:1
#: of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QDialog`"
msgstr "基类：:py:class:`~PySide6.QtWidgets.QDialog`"

#: momovu.views.components.about_dialog.AboutDialog:1 of
msgid "About dialog showing application information and version details."
msgstr "关于对话框显示应用程序信息和版本详细信息。"

#: momovu.views.components.about_dialog.AboutDialog.__init__:1 of
msgid "Initialize the About dialog."
msgstr "初始化“关于”对话框。"

#: momovu.views.components.about_dialog.AboutDialog.__init__:3
#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:3
#: of
msgid "Parent widget for the dialog"
msgstr "对话框的父窗口部件"

#: ../../../_source/api.rst:151
msgid "Cleanup Coordinator"
msgstr "清理协调员"

#: momovu.views.components.cleanup_coordinator:1 of
msgid "Cleanup coordinator for managing resource cleanup during shutdown."
msgstr "用于在关闭期间管理资源清理的清理协调器。"

#: momovu.views.components.cleanup_coordinator:3 of
msgid ""
"This component handles the orderly cleanup of all resources when the main "
"window closes or encounters an error during initialization. It ensures "
"components are cleaned up in the correct order to prevent crashes from "
"dangling references."
msgstr "此组件负责在主窗口关闭或初始化过程中遇到错误时，有序地清理所有资源。它确保组件按正确的顺序进行清理，以防止因悬空引用而导致的崩溃。"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:1 of
msgid "Coordinates cleanup of all components during shutdown."
msgstr "在关闭期间协调清理所有组件。"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:3 of
msgid ""
"This class manages the cleanup process in phases to ensure proper ordering "
"and prevent crashes from dangling signal connections or references."
msgstr "此类分阶段管理清理过程，以确保正确的顺序，并防止因悬空信号连接或引用而导致崩溃。"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.__init__:1
#: of
msgid "Initialize the cleanup coordinator."
msgstr "初始化清理协调器。"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.__init__:3
#: of
msgid "Reference to the main window containing components to clean up"
msgstr "引用包含要清理的组件的主窗口"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.cleanup_resources:1
#: of
msgid "Execute phased shutdown sequence to safely release all resources."
msgstr "执行分阶段关闭序列以安全释放所有资源。"

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.cleanup_resources:3
#: of
msgid ""
"Cleanup phases: 1. Disconnect signals (prevents crashes from dangling "
"connections) 2. Clean up view components (they reference other components) "
"3. Clear graphics scene 4. Clean up PDF document 5. Clean up presenters"
msgstr ""
"清理阶段：  \n"
"1. 断开信号（防止悬空连接导致崩溃）  \n"
"2. 清理视图组件（它们引用其他组件）  \n"
"3. 清除图形场景  \n"
"4. 清理 PDF 文档  \n"
"5. 清理演示器"

#: ../../../_source/api.rst:159
msgid "Dialog Manager"
msgstr "对话管理器"

#: momovu.views.components.dialog_manager:1 of
msgid "Dialog manager component for handling all dialog operations."
msgstr "用于处理所有对话操作的对话管理组件。"

#: momovu.views.components.dialog_manager:3 of
msgid ""
"This component follows the Single Responsibility Principle by centralizing "
"all dialog-related functionality, making the main window cleaner and more "
"focused."
msgstr "该组件通过集中所有对话框相关功能，遵循单一职责原则，使主窗口更简洁、更专注。"

#: momovu.views.components.dialog_manager.DialogManager:1 of
msgid "Manages all dialog operations for the application."
msgstr "管理应用程序的所有对话框操作。"

#: momovu.views.components.dialog_manager.DialogManager:3 of
msgid ""
"This class encapsulates dialog creation, display, and result handling, "
"providing a clean interface for the main window to use dialogs without "
"dealing with implementation details."
msgstr "此类封装了对话框的创建、显示和结果处理，为主窗口提供了一个简洁的接口，使其在使用对话框时无需处理实现细节。"

#: momovu.views.components.dialog_manager.DialogManager.__init__:1 of
msgid "Initialize the dialog manager."
msgstr "初始化对话管理器。"

#: momovu.views.components.dialog_manager.DialogManager.__init__:3 of
msgid "The parent widget (typically MainWindow) for dialogs"
msgstr "对话框的父窗口部件（通常是 MainWindow）"

#: momovu.views.components.dialog_manager.DialogManager.set_file_load_callback:1
#: of
msgid "Register handler for file selection from open dialog."
msgstr "为从打开对话框中选择文件注册处理程序。"

#: momovu.views.components.dialog_manager.DialogManager.set_file_load_callback:3
#: of
msgid "Function that receives the selected PDF file path"
msgstr "接收所选PDF文件路径的函数"

#: momovu.views.components.dialog_manager.DialogManager.set_page_navigation_callback:1
#: of
msgid "Register handler for go-to-page dialog results."
msgstr "注册处理跳转页面对话框结果的处理程序。"

#: momovu.views.components.dialog_manager.DialogManager.set_page_navigation_callback:3
#: of
msgid "Function that receives the target page number (1-based)"
msgstr "接收目标页码（从1开始）的函数"

#: momovu.views.components.dialog_manager.DialogManager.show_open_file_dialog:1
#: of
msgid "Display PDF file selection dialog and trigger callback on selection."
msgstr "显示 PDF 文件选择对话框，并在选择时触发回调。"

#: momovu.views.components.dialog_manager.DialogManager.show_shortcuts_dialog:1
#: of
msgid "Display the keyboard shortcuts reference dialog."
msgstr "显示键盘快捷键参考对话框。"

#: momovu.views.components.dialog_manager.DialogManager.show_about_dialog:1 of
msgid "Display application information and credits dialog."
msgstr "显示应用程序信息和致谢对话框。"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:1
#: of
msgid "Display page number input dialog and trigger navigation callback."
msgstr "显示页码输入对话框并触发导航回调。"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:3
#: of
msgid "Currently displayed page (1-based)"
msgstr "当前显示的页码（从1开始）"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:4
#: of
msgid "Maximum page number allowed"
msgstr "允许的最大页码数"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:5
#: of
msgid "False prevents dialog display"
msgstr "False 防止对话框显示"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:1
#: of
msgid "Extract page info from presenters and show go-to-page dialog."
msgstr "从演讲者中提取页面信息并显示跳转页面对话框。"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:3
#: of
msgid "Source for document loaded state"
msgstr "加载文档状态的来源"

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:4
#: of
msgid "Source for current/total page counts"
msgstr "当前/总页数的来源"

#: ../../../_source/api.rst:167
msgid "Document Operations"
msgstr "文档操作"

#: momovu.views.components.document_operations:1 of
msgid "Document operation utilities for the Main Window."
msgstr "为主窗口的文档操作提供实用工具。"

#: momovu.views.components.document_operations:3 of
msgid ""
"This module contains pure functions and utilities for document operations, "
"extracted from the Main Window to reduce complexity and improve testability."
msgstr "此模块包含用于文档操作的纯函数和实用工具，从主窗口中提取出来以降低复杂度并提高可测试性。"

#: momovu.views.components.document_operations.extract_filename_from_path:1 of
msgid "Get filename component from full path."
msgstr "从完整路径中获取文件名组件。"

#: momovu.views.components.document_operations.extract_filename_from_path:3 of
msgid "Full or relative path"
msgstr "完整路径或相对路径"

#: momovu.views.components.document_operations.extract_filename_from_path:5 of
msgid "Filename with extension (e.g., 'document.pdf')"
msgstr "带扩展名的文件名（例如：'document.pdf'）"

#: momovu.views.components.document_operations.format_window_title:1 of
msgid "Build window title showing app name and current document."
msgstr "构建显示应用程序名称和当前文档的窗口标题。"

#: momovu.views.components.document_operations.format_window_title:3 of
msgid "Application name (e.g., 'Momovu')"
msgstr "应用程序名称（例如，“Momovu”）"

#: momovu.views.components.document_operations.format_window_title:4 of
msgid "Current document name to append"
msgstr "要追加的当前文档名称"

#: momovu.views.components.document_operations.format_window_title:6 of
msgid "'AppName' or 'AppName - filename.pdf'"
msgstr "'应用程序名称' 或 '应用程序名称 - 文件名.pdf'"

#: momovu.views.components.document_operations.should_show_error_dialog:1 of
msgid "Filter out system exits from user-facing error dialogs."
msgstr "从面向用户的错误对话框中过滤掉系统退出信息。"

#: momovu.views.components.document_operations.should_show_error_dialog:3 of
msgid "Exception to evaluate"
msgstr "评估异常"

#: momovu.views.components.document_operations.should_show_error_dialog:5 of
msgid "False for KeyboardInterrupt/SystemExit, True otherwise"
msgstr "对于 KeyboardInterrupt/SystemExit 为 False，其他情况为 True"

#: momovu.views.components.document_operations.create_error_message:1 of
msgid "Format exception into readable error message for users."
msgstr "将格式异常转换为用户可读的错误信息。"

#: momovu.views.components.document_operations.create_error_message:3 of
msgid "Exception to format"
msgstr "格式例外"

#: momovu.views.components.document_operations.create_error_message:4 of
msgid "Optional location/operation description"
msgstr "可选的位置/操作描述"

#: momovu.views.components.document_operations.create_error_message:6 of
msgid "Human-readable error description"
msgstr "可读性错误描述"

#: momovu.views.components.document_operations.DocumentOperationResult:1 of
msgid "Result of a document operation with success/failure information."
msgstr "文档操作的结果，包含成功/失败信息。"

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:1
#: of
msgid "Initialize the result."
msgstr "初始化结果。"

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:3
#: of
msgid "Whether the operation succeeded"
msgstr "操作是否成功"

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:4
#: of
msgid "Optional message about the operation"
msgstr "关于操作的可选消息"

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:5
#: of
msgid "Optional data returned by the operation"
msgstr "操作返回的可选数据"

#: momovu.views.components.document_operations.DocumentOperationResult.__bool__:1
#: of
msgid "Enable 'if result:' syntax to check success."
msgstr "启用 'if result:' 语法来检查是否成功。"

#: momovu.views.components.document_operations.safe_document_operation:1 of
msgid "Wrap operation with try/catch and structured result."
msgstr "用 try/catch 包裹操作并使用结构化结果。"

#: momovu.views.components.document_operations.safe_document_operation:3 of
msgid "Description for logging"
msgstr "日志描述"

#: momovu.views.components.document_operations.safe_document_operation:4 of
msgid "Callable to execute"
msgstr "可调用以执行"

#: momovu.views.components.document_operations.safe_document_operation:5 of
msgid "Positional arguments for operation"
msgstr "操作的位置参数"

#: momovu.views.components.document_operations.safe_document_operation:6 of
msgid "Keyword arguments for operation"
msgstr "操作的关键字参数"

#: momovu.views.components.document_operations.safe_document_operation:8 of
msgid "Result object with success flag and error details"
msgstr "带有成功标志和错误详细信息的结果对象"

#: ../../../_source/api.rst:175
msgid "Graphics View"
msgstr "图形视图"

#: momovu.views.components.graphics_view:1 of
msgid ""
"Custom graphics view component for PDF viewing with mouse and keyboard "
"support."
msgstr "支持鼠标和键盘操作的 PDF 查看自定义图形视图组件。"

#: momovu.views.components.graphics_view.GraphicsView:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QGraphicsView`"
msgstr "基类：:py:class:`~PySide6.QtWidgets.QGraphicsView`"

#: momovu.views.components.graphics_view.GraphicsView:1 of
msgid "Custom graphics view with mouse wheel and DIRECT keyboard support."
msgstr "自定义图形视图，支持鼠标滚轮和直接键盘操作。"

#: momovu.views.components.graphics_view.GraphicsView.__init__:1 of
msgid "Initialize the graphics view."
msgstr "初始化图形视图。"

#: momovu.views.components.graphics_view.GraphicsView.__init__:3 of
msgid "Reference to the main window for event handling"
msgstr "事件处理的主窗口引用"

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:1 of
msgid "Central keyboard event handler for all viewer shortcuts."
msgstr "所有查看器快捷方式的中央键盘事件处理程序。"

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:3 of
msgid ""
"Handles navigation, zoom, and UI toggle shortcuts. Arrow keys adapt based on"
" zoom level (pan when zoomed, navigate otherwise)."
msgstr "处理导航、缩放和用户界面切换的快捷方式。箭头键根据缩放级别自动调整（缩放时平移，其他情况下导航）。"

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:6 of
msgid ""
"NOTE: When adding or modifying keyboard shortcuts here, remember to update "
"the shortcuts dialog in lib/shortcuts_dialog.py::_populate_shortcuts()"
msgstr ""
"注意：在此处添加或修改键盘快捷键时，请记得更新 lib/shortcuts_dialog.py::_populate_shortcuts() "
"中的快捷键对话框"

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:1 of
msgid "Handle mouse wheel for zoom, pan, or page navigation."
msgstr "使用鼠标滚轮进行缩放、平移或页面导航。"

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:3 of
msgid ""
"Behavior depends on modifiers and zoom level: - Ctrl + Scroll: Zoom at mouse"
" position - Shift + Scroll: Horizontal pan (at any zoom level) - When zoomed"
" in (>1.05x): Vertical pan - When not zoomed: Page navigation"
msgstr ""
"行为取决于修饰键和缩放级别：  \n"
"- Ctrl + 滚动：在鼠标位置缩放  \n"
"- Shift + 滚动：水平平移（在任何缩放级别下）  \n"
"- 当放大（>1.05倍）时：垂直平移  \n"
"- 当未缩放时：页面导航"

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:9 of
msgid "Qt wheel event containing delta and modifiers"
msgstr "包含 delta 和修饰键的 Qt 鼠标滚轮事件"

#: momovu.views.components.graphics_view.GraphicsView.cleanup:1 of
msgid "Release scene connection and clear references (idempotent)."
msgstr "释放场景连接并清除引用（幂等操作）。"

#: ../../../_source/api.rst:183
msgid "Margin Renderer"
msgstr "边距渲染器"

#: momovu.views.components.margin_renderer:1 of
msgid "Margin rendering component for the PDF viewer."
msgstr "PDF 查看器的页边距渲染组件。"

#: momovu.views.components.margin_renderer:3 of
msgid ""
"This refactored version delegates to specialized renderers for each document"
" type, following the Single Responsibility Principle and keeping the file "
"under 400 lines."
msgstr "此重构版本遵循单一职责原则，为每种文档类型委托给专用的渲染器，使文件行数保持在400行以内。"

#: momovu.views.components.margin_renderer.MarginRenderer:1 of
msgid ""
"Component responsible for coordinating margin, trim line, and overlay "
"rendering."
msgstr "负责协调边距、修剪线和叠加渲染的组件。"

#: momovu.views.components.margin_renderer.MarginRenderer:3 of
msgid ""
"This class delegates actual rendering to specialized renderers based on "
"document type, following the Single Responsibility Principle."
msgstr "此类根据文档类型将实际渲染委托给专用的渲染器，遵循单一职责原则。"

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:1 of
msgid "Initialize the margin renderer."
msgstr "初始化边距渲染器。"

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:3
#: momovu.views.components.page_renderer.PageRenderer.__init__:3
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:3
#: momovu.views.components.renderers.base.BaseRenderer.__init__:3
#: momovu.views.components.renderers.cover.CoverRenderer.__init__:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:3
#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:3 of
msgid "The Qt graphics scene to render to"
msgstr "用于渲染的 Qt 图形场景"

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:4
#: momovu.views.components.page_renderer.PageRenderer.__init__:6
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:6 of
msgid "Presenter for margin operations"
msgstr "边距操作演示者"

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:5
#: momovu.views.components.page_renderer.PageRenderer.__init__:8
#: momovu.views.components.renderers.base.BaseRenderer.__init__:4
#: momovu.views.components.renderers.cover.CoverRenderer.__init__:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:4
#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:4 of
msgid "Optional configuration manager for reading user preferences"
msgstr "用于读取用户偏好的可选配置管理器"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:1
#: of
msgid "Render all enabled overlays on top of page content."
msgstr "在页面内容之上渲染所有启用的覆盖层。"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:3
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:3
#: of
msgid "Page left edge in scene coordinates"
msgstr "场景坐标中页面的左边缘"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:4
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:4
#: of
msgid "Page top edge in scene coordinates"
msgstr "场景坐标中页面顶部边缘"

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:7
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:7
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:7
#: of
msgid "Optional edge to skip when drawing trim lines (\"left\" or \"right\")"
msgstr "绘制修剪线时可选的跳过边（\"left\" 或 \"right\"）"

#: momovu.views.components.margin_renderer.MarginRenderer.set_show_fold_lines:1
#: of
msgid "Enable/disable spine and flap fold indicators."
msgstr "启用/禁用书脊和折页指示器。"

#: momovu.views.components.margin_renderer.MarginRenderer.set_show_fold_lines:3
#: of
msgid "True to display fold lines on covers/dustjackets"
msgstr "在封面/护封上显示折痕线"

#: momovu.views.components.margin_renderer.MarginRenderer.clear_renderer_caches:1
#: of
msgid "Clear cached configuration values in all renderers."
msgstr "清除所有渲染器中的缓存配置值。"

#: momovu.views.components.margin_renderer.MarginRenderer.clear_renderer_caches:3
#: momovu.views.components.page_renderer.PageRenderer.clear_renderer_caches:3
#: momovu.views.components.renderers.base.BaseRenderer.clear_caches:3 of
msgid ""
"This should be called when configuration changes to ensure new values are "
"loaded."
msgstr "应在配置更改时调用此方法，以确保加载新值。"

#: ../../../_source/api.rst:191
msgid "Menu Builder"
msgstr "菜单生成器"

#: momovu.views.components.menu_builder:1 of
msgid "Menu builder component for the main window."
msgstr "主窗口的菜单生成组件。"

#: momovu.views.components.menu_builder:3 of
msgid "This component handles all menu creation and setup."
msgstr "此组件负责处理所有菜单的创建和设置。"

#: momovu.views.components.menu_builder.MenuBuilder:1 of
msgid "Component responsible for building and managing the menu bar."
msgstr "负责构建和管理菜单栏的组件。"

#: momovu.views.components.menu_builder.MenuBuilder.__init__:1 of
msgid "Initialize the menu builder."
msgstr "初始化菜单生成器。"

#: momovu.views.components.menu_builder.MenuBuilder.__init__:3 of
msgid "The main window to add menus to"
msgstr "添加菜单的主窗口"

#: momovu.views.components.menu_builder.MenuBuilder.build_menus:1 of
msgid "Create and populate all application menus in the menu bar."
msgstr "创建并在菜单栏中填充所有应用程序菜单。"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:1 of
msgid "Set initial checked states for View menu overlay toggles."
msgstr "为“查看”菜单覆盖切换项设置初始选中状态。"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:3 of
msgid "Whether margins should be visible initially"
msgstr "初始是否应显示页边距"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:4 of
msgid "Whether trim lines should be visible initially"
msgstr "是否应最初显示修剪线"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:5 of
msgid "Whether barcode area should be visible initially"
msgstr "是否应最初显示条形码区域"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:6 of
msgid "Whether fold lines should be visible initially"
msgstr "是否应最初显示折线"

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:7 of
msgid "Whether bleed lines should be visible initially"
msgstr "是否应最初显示出血线"

#: momovu.views.components.menu_builder.MenuBuilder.update_view_menu_for_document_type:1
#: of
msgid ""
"Show/hide View menu items based on what's relevant for the document type."
msgstr "根据文档类型的相关性显示或隐藏“查看”菜单项。"

#: momovu.views.components.menu_builder.MenuBuilder.update_view_menu_for_document_type:3
#: momovu.views.components.toggle_manager.ToggleManager.set_document_type:3 of
msgid "One of 'interior', 'cover', or 'dustjacket'"
msgstr "“internal”、“cover”或“dustjacket”之一"

#: ../../../_source/api.rst:199
msgid "Navigation Controller"
msgstr "导航控制器"

#: momovu.views.components.navigation_controller:1 of
msgid ""
"Centralized navigation controller - single source of truth for ALL "
"navigation."
msgstr "集中式导航控制器 - 所有导航的唯一真实来源。"

#: momovu.views.components.navigation_controller.NavigationController:1 of
msgid "Controls all navigation in the application."
msgstr "控制应用程序中的所有导航。"

#: momovu.views.components.navigation_controller.NavigationController:3 of
msgid ""
"This is the SINGLE place where navigation happens. No more scattered "
"methods, no more event chains."
msgstr "这是导航发生的唯一位置。不再有分散的方法，也不再有事件链。"

#: momovu.views.components.navigation_controller.NavigationController.__init__:1
#: of
msgid "Initialize the navigation controller."
msgstr "初始化导航控制器。"

#: momovu.views.components.navigation_controller.NavigationController.__init__:3
#: momovu.views.components.state_saver.StateSaver.__init__:3
#: momovu.views.components.toggle_manager.ToggleManager.__init__:3
#: momovu.views.components.window_setup.WindowSetup.__init__:3 of
msgid "Reference to the main window"
msgstr "主窗口的引用"

#: momovu.views.components.navigation_controller.NavigationController.scroll_controller:1
#: of
msgid "Lazy initialization of scroll controller."
msgstr "滚动控制器的延迟初始化。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_first:1
#: of
msgid "Navigate to the first page."
msgstr "导航到第一页。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_previous:1
#: of
msgid "Navigate to the previous page or page pair in side-by-side mode."
msgstr "在并排模式下，导航到上一页或上一对页面。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_next:1
#: of
msgid "Navigate to the next page or page pair in side-by-side mode."
msgstr "在并排模式下导航到下一页或页面对。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_last:1
#: of
msgid "Navigate to the last page."
msgstr "导航到最后一页。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_to_page:1
#: of
msgid "Navigate to a specific page by number."
msgstr "通过页码导航到特定页面。"

#: momovu.views.components.navigation_controller.NavigationController.navigate_to_page:3
#: of
msgid "1-based page number to navigate to"
msgstr "要跳转到的1开始的页码"

#: ../../../_source/api.rst:207
msgid "Page Positions"
msgstr "页面位置"

#: momovu.views.components.page_positions:1 of
msgid "Page position calculator for determining page locations in the view."
msgstr "页面位置计算器，用于确定视图中的页面位置。"

#: momovu.views.components.page_positions.PagePositions:1 of
msgid "Calculates page positions for scrolling and navigation."
msgstr "计算滚动和导航的页面位置。"

#: momovu.views.components.page_positions.PagePositions.__init__:1 of
msgid "Initialize the calculator."
msgstr "初始化计算器。"

#: momovu.views.components.page_positions.PagePositions.__init__:3
#: momovu.views.components.page_renderer.PageRenderer.__init__:5
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:5
#: momovu.views.components.scroll_manager.ScrollManager.__init__:4 of
msgid "Presenter for document operations"
msgstr "文档操作演示者"

#: momovu.views.components.page_positions.PagePositions.__init__:4
#: momovu.views.components.page_renderer.PageRenderer.__init__:7
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:7
#: momovu.views.components.scroll_manager.ScrollManager.__init__:5 of
msgid "Presenter for navigation operations"
msgstr "导航操作演示者"

#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:1
#: of
msgid "Find center point of page in vertically stacked layout."
msgstr "在垂直堆叠布局中找到页面的中心点。"

#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:5
#: of
msgid "(x, y) scene coordinates of page center"
msgstr "页面中心的 (x, y) 场景坐标"

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:1
#: of
msgid "Find center point of page pair containing the given page."
msgstr "查找包含给定页面的页面对的中心点。"

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:3
#: of
msgid "Book layout: page 1 alone, then pairs (2-3), (4-5), etc."
msgstr "书本布局：第1页单独，然后是双页（2-3页），（4-5页）等。"

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:7
#: of
msgid "(x, y) scene coordinates of pair center"
msgstr "(x, y) 场景坐标对中心"

#: ../../../_source/api.rst:215
msgid "Page Renderer"
msgstr "页面渲染器"

#: momovu.views.components.page_renderer:1 of
msgid "Page rendering component for the PDF viewer."
msgstr "PDF 查看器的页面渲染组件。"

#: momovu.views.components.page_renderer:3 of
msgid ""
"This refactored version uses the Strategy pattern to delegate rendering to "
"specialized strategies based on the view mode and document type."
msgstr "此重构版本使用策略模式，根据视图模式和文档类型将渲染委托给专门的策略。"

#: momovu.views.components.page_renderer.PageRenderer:1 of
msgid "Component responsible for coordinating page rendering."
msgstr "负责协调页面渲染的组件。"

#: momovu.views.components.page_renderer.PageRenderer:3 of
msgid ""
"This class uses the Strategy pattern to delegate actual rendering to "
"specialized strategies based on the current view mode."
msgstr "此类使用策略模式，根据当前视图模式将实际渲染委托给专门的策略。"

#: momovu.views.components.page_renderer.PageRenderer.__init__:1 of
msgid "Initialize the page renderer."
msgstr "初始化页面渲染器。"

#: momovu.views.components.page_renderer.PageRenderer.__init__:4
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:4 of
msgid "The Qt PDF document"
msgstr "Qt PDF 文档"

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:1 of
msgid "Select and execute the appropriate rendering strategy."
msgstr "选择并执行适当的渲染策略。"

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:3 of
msgid ""
"Strategy selection based on: - Presentation mode → single/pair only - "
"Interior + side-by-side → all pairs stacked - Interior + single → all pages "
"stacked - Cover/dustjacket → single page only"
msgstr ""
"基于以下内容选择策略：  \n"
"- 演示模式 → 仅单页/双页  \n"
"- 内页 + 并排 → 所有双页堆叠  \n"
"- 内页 + 单页 → 所有页面堆叠  \n"
"- 封面/护封 → 仅单页"

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:9 of
msgid "Optional zoom adjustment after rendering"
msgstr "渲染后可选的缩放调整"

#: momovu.views.components.page_renderer.PageRenderer.set_presentation_mode:1
#: of
msgid "Enable/disable presentation mode rendering."
msgstr "启用/禁用演示模式渲染。"

#: momovu.views.components.page_renderer.PageRenderer.set_presentation_mode:3
#: of
msgid "True for single page/pair only, False for stacked pages"
msgstr "单页/双页对为真，叠放页为假"

#: momovu.views.components.page_renderer.PageRenderer.set_show_fold_lines:1 of
msgid "Control spine/flap fold line visibility."
msgstr "控制脊线/折痕线的可见性。"

#: momovu.views.components.page_renderer.PageRenderer.set_show_fold_lines:3 of
msgid "True to display fold indicators on covers/dustjackets"
msgstr "在封面/护封上显示折叠指示"

#: momovu.views.components.page_renderer.PageRenderer.clear_renderer_caches:1
#: of
msgid "Clear cached configuration values in renderers."
msgstr "清除渲染器中的缓存配置值。"

#: momovu.views.components.page_renderer.PageRenderer.cleanup:1 of
msgid "Release all strategy instances and clear references (idempotent)."
msgstr "释放所有策略实例并清除引用（幂等操作）。"

#: ../../../_source/api.rst:223
msgid "Page SpinBox"
msgstr "页面微调框"

#: momovu.views.components.page_spinbox:1 of
msgid "Custom QSpinBox that properly handles navigation keys."
msgstr "自定义的 QSpinBox，能够正确处理导航键。"

#: momovu.views.components.page_spinbox.PageSpinBox:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QSpinBox`"
msgstr "基础类：:py:class:`~PySide6.QtWidgets.QSpinBox`"

#: momovu.views.components.page_spinbox.PageSpinBox:1 of
msgid ""
"Custom spinbox for page navigation that doesn't interfere with document "
"navigation keys."
msgstr "用于页面导航的自定义旋转框，不会干扰文档导航键。"

#: momovu.views.components.page_spinbox.PageSpinBox.__init__:1 of
msgid "Initialize the page spinbox."
msgstr "初始化页面微调框。"

#: momovu.lib.shortcuts_dialog.ShortcutsDialog.__init__:3
#: momovu.views.components.page_spinbox.PageSpinBox.__init__:3
#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:4 of
msgid "Parent widget"
msgstr "父级小部件"

#: momovu.views.components.page_spinbox.PageSpinBox.set_main_window:1 of
msgid "Connect to main window for delegating navigation keys."
msgstr "连接到主窗口以委派导航键。"

#: momovu.views.components.page_spinbox.PageSpinBox.set_main_window:3 of
msgid "MainWindow instance with graphics_view"
msgstr "带有图形视图的主窗口实例"

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:1 of
msgid "Intercept navigation keys and delegate to graphics view."
msgstr "拦截导航键并将其委托给图形视图。"

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:3 of
msgid ""
"Allows arrow keys, page up/down, etc. to navigate document instead of "
"changing spinbox value."
msgstr "允许使用方向键、页面上/下等来浏览文档，而不是更改微调框的值。"

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:6 of
msgid "Qt keyboard event"
msgstr "Qt 键盘事件"

#: ../../../_source/api.rst:231
msgid "Preferences Dialog"
msgstr "偏好设置对话框"

#: momovu.views.components.preferences_dialog:1 of
msgid "Preferences dialog for Momovu application."
msgstr "Momovu 应用的首选项对话框。"

#: momovu.views.components.preferences_dialog.PreferencesDialog:1 of
msgid "Preferences dialog following PySide6 best practices."
msgstr "遵循 PySide6 最佳实践的首选项对话框。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:1 of
msgid "Initialize the preferences dialog."
msgstr "初始化首选项对话框。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:3 of
msgid "Configuration manager instance"
msgstr "配置管理器实例"

#: momovu.views.components.preferences_dialog.PreferencesDialog.setup_ui:1 of
msgid "Set up the dialog UI."
msgstr "设置对话 UI。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_general_tab:1
#: of
msgid "Create the general settings tab."
msgstr "创建常规设置选项卡。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_general_tab:3
#: of
msgid "Widget containing general settings"
msgstr "包含常规设置的小部件"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_colors_tab:1
#: of
msgid "Create the colors settings tab."
msgstr "创建颜色设置选项卡。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_colors_tab:3
#: of
msgid "Widget containing color settings"
msgstr "包含颜色设置的小部件"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_recent_files_tab:1
#: of
msgid "Create the recent files management tab."
msgstr "创建最近文件管理选项卡。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_recent_files_tab:3
#: of
msgid "Widget containing recent files list"
msgstr "包含最近文件列表的小工具"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:1
#: of
msgid "Create a color picker button with preview."
msgstr "创建一个带预览功能的颜色选择按钮。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:3
#: of
msgid "Initial color"
msgstr "初始颜色"

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:5
#: of
msgid "Color picker button"
msgstr "颜色选择按钮"

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:1
#: of
msgid "Update button appearance to show color."
msgstr "更新按钮外观以显示颜色。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:3
#: of
msgid "Button to update"
msgstr "更新按钮"

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:4
#: of
msgid "Color to display"
msgstr "显示颜色"

#: momovu.views.components.preferences_dialog.PreferencesDialog.choose_color:1
#: of
msgid "Open color dialog for the specified overlay type."
msgstr "为指定的覆盖类型打开颜色对话框。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.choose_color:3
#: of
msgid "Type of overlay to set color for"
msgstr "要设置颜色的覆盖类型"

#: momovu.views.components.preferences_dialog.PreferencesDialog.apply_colorblind_preset:1
#: of
msgid "Apply a colorblind preset to all color settings."
msgstr "将色盲预设应用到所有颜色设置中。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.apply_colorblind_preset:3
#: of
msgid "Name of the preset to apply (protanopia, deuteranopia, or tritanopia)"
msgstr "要应用的预设名称（protanopia、deuteranopia 或 tritanopia）"

#: momovu.views.components.preferences_dialog.PreferencesDialog.on_recent_file_selection_changed:1
#: of
msgid "Handle recent file selection change."
msgstr "处理最近的文件选择更改。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.remove_selected_file:1
#: of
msgid "Remove the selected file from recent files."
msgstr "从最近的文件中移除所选文件。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.reset_to_defaults:1
#: of
msgid "Reset all settings to defaults with confirmation."
msgstr "确认后将所有设置重置为默认值。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.load_settings:1
#: of
msgid "Load current settings into the dialog."
msgstr "将当前设置加载到对话框中。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.load_recent_files:1
#: of
msgid "Load recent files into the list widget."
msgstr "将最近的文件加载到列表小部件中。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.save_settings:1
#: of
msgid ""
"Save settings from the dialog using batch update to prevent signal spam."
msgstr "使用批处理更新从对话框中保存设置，以防止信号过多。"

#: momovu.views.components.preferences_dialog.PreferencesDialog.accept:1 of
msgid "Accept the dialog and save settings with proper cleanup."
msgstr "接受对话并保存设置，同时进行适当的清理。"

#: ../../../_source/api.rst:239
msgid "Scroll Manager"
msgstr "滚动管理器"

#: momovu.views.components.scroll_manager:1 of
msgid "Scroll controller for managing view scrolling to pages."
msgstr "用于管理视图滚动到页面的滚动控制器。"

#: momovu.views.components.scroll_manager.ScrollManager:1 of
msgid "Manages scrolling the graphics view to show specific pages."
msgstr "管理图形视图的滚动以显示特定页面。"

#: momovu.views.components.scroll_manager.ScrollManager.__init__:1 of
msgid "Initialize the scroll controller."
msgstr "初始化滚动控制器。"

#: momovu.views.components.scroll_manager.ScrollManager.__init__:3 of
msgid "The QGraphicsView to control"
msgstr "用于控制的 QGraphicsView"

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page:1
#: of
msgid "Center view on current page in stacked single-page layout."
msgstr "在堆叠的单页布局中将当前页面置于视图中心。"

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page_pair:1
#: of
msgid "Center view on current page pair in stacked side-by-side layout."
msgstr "在堆叠并排布局中，将视图中心定位到当前页面对。"

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page_pair:3
#: of
msgid "Follows book convention: page 1 alone, then pairs (2-3), (4-5), etc."
msgstr "遵循书籍的惯例：第1页单独显示，然后是双页（2-3）、（4-5）等。"

#: ../../../_source/api.rst:247
msgid "Signal Connections"
msgstr "信号连接"

#: momovu.views.components.signal_connections:1 of
msgid "Signal connector component for managing all signal-slot connections."
msgstr "用于管理所有信号-插槽连接的信号连接组件。"

#: momovu.views.components.signal_connections.SignalConnections:1 of
msgid "Manages all signal-slot connections for the main window."
msgstr "管理主窗口的所有信号-插槽连接。"

#: momovu.views.components.signal_connections.SignalConnections:3 of
msgid ""
"This class tracks all connections for safe cleanup to prevent crashes from "
"dangling signal connections."
msgstr "此类会跟踪所有连接以进行安全清理，从而防止因悬空信号连接而导致崩溃。"

#: momovu.views.components.signal_connections.SignalConnections.__init__:1 of
msgid "Initialize the signal connector."
msgstr "初始化信号连接器。"

#: momovu.views.components.signal_connections.SignalConnections.__init__:3 of
msgid "The main window with signals to connect"
msgstr "带有要连接信号的主窗口"

#: momovu.views.components.signal_connections.SignalConnections.connect_all_signals:1
#: of
msgid "Establish all Qt signal-slot connections for the UI."
msgstr "为 UI 建立所有 Qt 信号-槽连接。"

#: momovu.views.components.signal_connections.SignalConnections.cleanup:1 of
msgid ""
"Disconnect all tracked signals to prevent dangling references (idempotent)."
msgstr "断开所有被跟踪的信号，以防止出现悬空引用（可重复操作）。"

#: ../../../_source/api.rst:255
msgid "Spine Width Calculator Dialog"
msgstr "脊宽计算器对话框"

#: momovu.views.components.spine_width_calculator_dialog:1 of
msgid "Spine width calculator dialog for book production."
msgstr "用于图书制作的书脊宽度计算对话框。"

#: momovu.views.components.spine_width_calculator_dialog:3 of
msgid ""
"This dialog allows users to calculate spine width based on page count and "
"document type (cover or dustjacket)."
msgstr "此对话框允许用户根据页数和文档类型（封面或护封）计算书脊宽度。"

#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:1
#: of
msgid "Format spine width removing unnecessary trailing zeros."
msgstr "格式化脊宽，去掉不必要的末尾零。"

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:5
#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:3
#: of
msgid "Spine width in millimeters"
msgstr "脊宽（毫米）"

#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:5
#: of
msgid "Formatted string without trailing zeros"
msgstr "没有末尾零的格式化字符串"

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:1
#: of
msgid "Calculate spine width for covers using Lulu's formula."
msgstr "使用 Lulu 的公式计算书脊宽度以制作书封。"

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:3
#: of
msgid "Number of pages in the book"
msgstr "书中的页数"

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:5
#: of
msgid "Spine width in millimeters, rounded to 3 decimal places"
msgstr "脊宽，单位为毫米，保留三位小数"

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog:1
#: of
msgid ""
"Dialog for calculating spine width based on page count and document type."
msgstr "根据页数和文档类型计算书脊宽度的对话框。"

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:1
#: of
msgid "Initialize the spine width calculator dialog."
msgstr "初始化脊柱宽度计算器对话框。"

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:4
#: of
msgid "Initial page count to display"
msgstr "初始显示页数"

#: ../../../_source/api.rst:263
msgid "State Saver"
msgstr "国家节约者"

#: momovu.views.components.state_saver:1 of
msgid "State saver component for automatically saving document state changes."
msgstr "用于自动保存文档状态更改的状态保存组件。"

#: momovu.lib.configuration_manager.ConfigurationManager:1
#: momovu.views.components.state_saver.StateSaver:1
#: momovu.views.components.zoom_controller.ZoomController:1 of
msgid "Bases: :py:class:`~PySide6.QtCore.QObject`"
msgstr "基类：:py:class:`~PySide6.QtCore.QObject`"

#: momovu.views.components.state_saver.StateSaver:1 of
msgid "Automatically saves document state when it changes."
msgstr "文档内容更改时会自动保存状态。"

#: momovu.views.components.state_saver.StateSaver:3 of
msgid ""
"This component monitors various state changes and updates the recent file "
"entry to ensure all state is persisted."
msgstr "该组件会监控各种状态变化，并更新最近的文件条目，以确保所有状态都被持久化保存。"

#: momovu.views.components.state_saver.StateSaver.__init__:1 of
msgid "Initialize the state saver."
msgstr "初始化状态保存器。"

#: momovu.views.components.state_saver.StateSaver.__del__:1 of
msgid "Cleanup when the state saver is destroyed."
msgstr "当状态保存器被销毁时进行清理。"

#: momovu.views.components.state_saver.StateSaver.connect_signals:1 of
msgid "Connect to all signals that indicate state changes."
msgstr "连接到所有表示状态变化的信号。"

#: momovu.views.components.state_saver.StateSaver.save_state:1 of
msgid "Save the current document state to recent files."
msgstr "将当前文档状态保存到最近的文件中。"

#: momovu.views.components.state_saver.StateSaver.save_state:3 of
msgid "This debounces rapid changes to avoid excessive saves."
msgstr "这会消除快速变化，以避免过多保存。"

#: momovu.views.components.state_saver.StateSaver.disable_saves:1 of
msgid "Temporarily disable state saving."
msgstr "暂时禁用状态保存。"

#: momovu.views.components.state_saver.StateSaver.enable_saves:1 of
msgid "Re-enable state saving."
msgstr "重新启用状态保存。"

#: momovu.views.components.state_saver.StateSaver.save_state_immediate:1 of
msgid "Save the current document state immediately without debouncing."
msgstr "立即保存当前文档状态，不进行防抖处理。"

#: ../../../_source/api.rst:271
msgid "Toggle Manager"
msgstr "切换管理器"

#: momovu.views.components.toggle_manager:1 of
msgid "Toggle manager component for handling all UI toggle operations."
msgstr "用于处理所有 UI 切换操作的切换管理组件。"

#: momovu.views.components.toggle_manager.ToggleManager:1 of
msgid "Manages all toggle operations for the main window."
msgstr "管理主窗口的所有切换操作。"

#: momovu.views.components.toggle_manager.ToggleManager.__init__:1 of
msgid "Initialize the toggle manager."
msgstr "初始化切换管理器。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_fullscreen:1 of
msgid "Switch between fullscreen and windowed display modes."
msgstr "在全屏和窗口显示模式之间切换。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_presentation:1
#: of
msgid "Switch between presentation mode (fullscreen, no UI) and normal mode."
msgstr "在演示模式（全屏，无用户界面）和普通模式之间切换。"

#: momovu.views.components.toggle_manager.ToggleManager.enter_presentation_mode:1
#: of
msgid ""
"Enable presentation mode with fullscreen display and hidden UI elements."
msgstr "启用全屏显示并隐藏 UI 元素的演示模式。"

#: momovu.views.components.toggle_manager.ToggleManager.exit_presentation_mode:1
#: of
msgid "Return to normal viewing mode with visible UI elements."
msgstr "返回显示 UI 元素的正常观看模式。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_side_by_side:1
#: of
msgid ""
"Switch between single page and side-by-side page display for interior "
"documents."
msgstr "在单页视图和并排视图之间切换内部文档的显示。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_margins:1 of
msgid "Show or hide the safety margin overlays on pages."
msgstr "在页面上显示或隐藏安全边距覆盖层。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_trim_lines:1 of
msgid "Show or hide the trim/cut lines at page edges."
msgstr "显示或隐藏页面边缘的修边/裁剪线。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_barcode:1 of
msgid "Show or hide the barcode area indicator on cover/dustjacket documents."
msgstr "在封面/护封文件上显示或隐藏条形码区域指示器。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_fold_lines:1 of
msgid "Show or hide the spine/flap fold lines on cover/dustjacket documents."
msgstr "在封面/护封文档上显示或隐藏书脊/折痕线。"

#: momovu.views.components.toggle_manager.ToggleManager.toggle_bleed_lines:1
#: of
msgid ""
"Show or hide the bleed lines at page edges on cover/dustjacket documents."
msgstr "在封面/护封文档中显示或隐藏页面边缘的出血线。"

#: momovu.views.components.toggle_manager.ToggleManager.set_document_type:1 of
msgid "Change the document type and update UI accordingly."
msgstr "更改文档类型并相应地更新用户界面。"

#: ../../../_source/api.rst:279
msgid "Toolbar Builder"
msgstr "工具栏生成器"

#: momovu.views.components.toolbar_builder:1 of
msgid "Toolbar builder component for the main window."
msgstr "主窗口的工具栏生成组件。"

#: momovu.views.components.toolbar_builder:3 of
msgid "This component handles toolbar creation and setup."
msgstr "该组件负责工具栏的创建和设置。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder:1 of
msgid "Component responsible for building and managing the toolbar."
msgstr "负责构建和管理工具栏的组件。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.__init__:1 of
msgid "Initialize the toolbar builder."
msgstr "初始化工具栏生成器。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.__init__:3 of
msgid "The main window to add toolbar to"
msgstr "要添加工具栏的主要窗口"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:1 of
msgid "Create main toolbar with navigation, page controls, and zoom actions."
msgstr "创建包含导航、页面控制和缩放操作的主工具栏。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:3 of
msgid "Menu actions to reuse in toolbar (e.g., 'open')"
msgstr "可在工具栏中重复使用的菜单操作（例如，“打开”）"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:4 of
msgid "Presenter for determining document-specific controls"
msgstr "用于确定文档特定控件的演示者"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:1 of
msgid "Retrieve a toolbar widget by its identifier."
msgstr "通过其标识符检索工具栏小部件。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:3 of
msgid "Widget identifier (e.g., 'page_spinbox', 'num_pages_spinbox')"
msgstr "小部件标识符（例如，'page_spinbox'，'num_pages_spinbox'）"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:5 of
msgid "The widget if found, None otherwise"
msgstr "如果找到小部件，则返回该小部件，否则返回 None"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:1
#: of
msgid "Show/hide toolbar controls based on document type."
msgstr "根据文档类型显示/隐藏工具栏控件。"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:3
#: of
msgid ""
"Visibility rules: - Interior: Shows page navigation and current page spinbox"
" - Cover/Dustjacket: Shows page count spinbox for spine calculation - "
"Navigation buttons only appear for multi-page interior documents"
msgstr ""
"可见性规则：  \n"
"- 内页：显示页面导航和当前页码微调框  \n"
"- 封面/护封：显示用于书脊计算的页数微调框  \n"
"- 导航按钮仅在多页内页文档中显示"

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:8
#: of
msgid "Deprecated parameter, kept for compatibility"
msgstr "已弃用的参数，为兼容性保留"

#: ../../../_source/api.rst:287
msgid "UI State Manager"
msgstr "UI 状态管理器"

#: momovu.views.components.ui_state_manager:1 of
msgid ""
"UI state manager component for handling presentation and fullscreen modes."
msgstr "用于处理演示和全屏模式的 UI 状态管理组件。"

#: momovu.views.components.ui_state_manager.UIStateManager:1 of
msgid "Manages UI state transitions like presentation and fullscreen modes."
msgstr "管理 UI 状态转换，如演示模式和全屏模式。"

#: momovu.views.components.ui_state_manager.UIStateManager.__init__:1 of
msgid "Initialize the UI state manager."
msgstr "初始化 UI 状态管理器。"

#: momovu.views.components.ui_state_manager.UIStateManager.__init__:3 of
msgid "The main window to manage"
msgstr "管理主窗口"

#: momovu.views.components.ui_state_manager.UIStateManager.toggle_fullscreen:1
#: of
msgid "Switch between fullscreen and maximized window states."
msgstr "在全屏和最大化窗口状态之间切换。"

#: momovu.views.components.ui_state_manager.UIStateManager.toggle_presentation:1
#: of
msgid "Switch between presentation mode and normal viewing mode."
msgstr "在演示模式和普通浏览模式之间切换。"

#: momovu.views.components.ui_state_manager.UIStateManager.enter_presentation_mode:1
#: of
msgid "Hide all UI chrome and enter fullscreen for distraction-free viewing."
msgstr "隐藏所有用户界面元素并进入全屏模式，以无干扰的方式观看。"

#: momovu.views.components.ui_state_manager.UIStateManager.exit_presentation_mode:1
#: of
msgid "Restore UI elements and return to windowed viewing mode."
msgstr "恢复用户界面元素并返回窗口查看模式。"

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:1
#: of
msgid "Set initial window display state based on startup parameters."
msgstr "根据启动参数设置初始窗口显示状态。"

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:3
#: of
msgid "True to start in fullscreen mode"
msgstr "以全屏模式启动"

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:4
#: of
msgid "True to start in presentation mode"
msgstr "按真实大小在演示模式下开始"

#: ../../../_source/api.rst:295
msgid "Window Setup"
msgstr "窗口设置"

#: momovu.views.components.window_setup:1 of
msgid "Window initializer component for handling complex initialization."
msgstr "用于处理复杂初始化的窗口初始化组件。"

#: momovu.views.components.window_setup.WindowSetup:1 of
msgid "Handles complex initialization for the main window."
msgstr "处理主窗口的复杂初始化。"

#: momovu.views.components.window_setup.WindowSetup.__init__:1 of
msgid "Initialize the window initializer."
msgstr "初始化窗口初始化器。"

#: momovu.views.components.window_setup.WindowSetup.init_models_and_presenters:1
#: of
msgid "Create MVP components and wire them together."
msgstr "创建MVP组件并将它们连接起来。"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:1 of
msgid "Cache constructor parameters for deferred initialization."
msgstr "为延迟初始化缓存构造函数参数。"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:3 of
msgid "Initial PDF to load"
msgstr "要加载的初始 PDF"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:4 of
msgid "Page count for spine width calculation"
msgstr "用于计算书脊宽度的页数"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:5 of
msgid "One of 'interior', 'cover', 'dustjacket'"
msgstr "“内页”、“封面”或“护封”之一"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:6 of
msgid "Enable page pair view"
msgstr "启用页面配对视图"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:7 of
msgid "Display safety margins"
msgstr "显示安全余量"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:8 of
msgid "Display trim indicators"
msgstr "显示修边指示器"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:9 of
msgid "Display barcode area"
msgstr "显示条码区域"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:10 of
msgid "Display spine/flap folds"
msgstr "显示书脊/折页折叠效果"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:11 of
msgid "Display bleed lines"
msgstr "显示出血线"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:12 of
msgid "Launch in presentation mode"
msgstr "以演示模式启动"

#: momovu.views.components.window_setup.WindowSetup.store_init_params:13 of
msgid "Launch fullscreen"
msgstr "全屏播放"

#: momovu.views.components.window_setup.WindowSetup.apply_initial_settings:1
#: of
msgid "Configure UI state from stored initialization parameters."
msgstr "从存储的初始化参数配置 UI 状态。"

#: momovu.views.components.window_setup.WindowSetup.initialize_document:1 of
msgid "Load initial PDF and apply window display mode."
msgstr "加载初始 PDF 并应用窗口显示模式。"

#: momovu.views.components.window_setup.WindowSetup.create_action_aliases:1 of
msgid "Map builder-created actions to main window attributes for easy access."
msgstr "将地图构建器创建的操作映射到主窗口属性，以便于访问。"

#: ../../../_source/api.rst:303
msgid "Zoom Controller"
msgstr "缩放控制器"

#: momovu.views.components.zoom_controller:1 of
msgid "Zoom controller component for managing view zoom operations."
msgstr "用于管理视图缩放操作的缩放控制器组件。"

#: momovu.views.components.zoom_controller:3 of
msgid ""
"This component encapsulates all zoom-related functionality, providing a "
"clean interface for zoom operations while maintaining separation of "
"concerns."
msgstr "该组件封装了所有与缩放相关的功能，为缩放操作提供了清晰的接口，同时保持了关注点的分离。"

#: momovu.views.components.zoom_controller.ZoomController:1 of
msgid "Controls all zoom operations for the PDF viewer."
msgstr "控制 PDF 查看器的所有缩放操作。"

#: momovu.views.components.zoom_controller.ZoomController:3 of
msgid ""
"This class manages zoom in/out operations and fit-to-page functionality, "
"handling the complex logic for different document types and view modes. It "
"follows the Single Responsibility Principle by focusing solely on zoom-"
"related operations."
msgstr "此类管理放大/缩小操作和适应页面功能，处理不同文档类型和视图模式的复杂逻辑。它遵循单一职责原则，专注于与缩放相关的操作。"

#: momovu.views.components.zoom_controller.ZoomController.__init__:1 of
msgid "Initialize the zoom controller."
msgstr "初始化缩放控制器。"

#: momovu.views.components.zoom_controller.ZoomController.__init__:3 of
msgid "The graphics view to control zoom for"
msgstr "用于控制图形视图的缩放"

#: momovu.views.components.zoom_controller.ZoomController.__init__:4 of
msgid "The graphics scene containing the content"
msgstr "包含内容的图形场景"

#: momovu.lib.configuration_manager.ConfigurationManager.__init__:3
#: momovu.views.components.zoom_controller.ZoomController.__init__:5 of
msgid "Optional parent QObject for proper cleanup"
msgstr "用于正确清理的可选父QObject"

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:1
#: of
msgid "Set callbacks for accessing presenters."
msgstr "为访问演示者设置回调函数。"

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:3
#: of
msgid ""
"This allows the controller to access presenter state without creating tight "
"coupling."
msgstr "这使控制器能够访问演示器的状态，而不会产生紧密耦合。"

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:6
#: of
msgid "Callback to get margin presenter"
msgstr "回调以获取保证金演示器"

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:7
#: of
msgid "Callback to get navigation presenter"
msgstr "回调以获取导航演示器"

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:8
#: of
msgid "Callback to get document presenter"
msgstr "回调以获取文档演示者"

#: momovu.views.components.zoom_controller.ZoomController.set_update_callback:1
#: of
msgid "Set callback for updating UI after zoom operations."
msgstr "设置回调以在缩放操作后更新 UI。"

#: momovu.views.components.zoom_controller.ZoomController.set_update_callback:3
#: of
msgid "Callback to update page label"
msgstr "回调以更新页面标签"

#: momovu.views.components.zoom_controller.ZoomController.zoom_in:1 of
msgid "Increase zoom level by the standard zoom factor from viewport center."
msgstr "从视口中心按标准缩放因子增加缩放级别。"

#: momovu.views.components.zoom_controller.ZoomController.zoom_out:1 of
msgid "Decrease zoom level by the standard zoom factor from viewport center."
msgstr "从视口中心按标准缩放因子缩小视图。"

#: momovu.views.components.zoom_controller.ZoomController.get_current_zoom:1
#: of
msgid "Get the current zoom level."
msgstr "获取当前的缩放级别。"

#: momovu.views.components.zoom_controller.ZoomController.get_current_zoom:3
#: of
msgid "Current zoom level (1.0 = 100%)"
msgstr "当前缩放级别（1.0 = 100%）"

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:1 of
msgid "Set the internal zoom level without applying scale."
msgstr "设置内部缩放级别而不应用比例。"

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:3 of
msgid ""
"Used by GraphicsView after it performs mouse-centered zoom. This method only"
" updates the tracking value."
msgstr "GraphicsView 在执行以鼠标为中心的缩放后使用此方法。该方法仅更新跟踪值。"

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:6 of
msgid "The new zoom level (1.0 = 100%)"
msgstr "新的缩放级别（1.0 = 100%）"

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:7 of
msgid "Whether to emit the zoom_changed signal"
msgstr "是否发出 zoom_changed 信号"

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:3 of
msgid ""
"This method handles different fitting strategies based on: - Document type "
"(interior/cover/dustjacket) - View mode (single/side-by-side)"
msgstr ""
"此方法根据以下因素处理不同的拟合策略：  \n"
"- 文档类型（内页/封面/护封）  \n"
"- 查看模式（单页/并排）"

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:7 of
msgid ""
"For interior documents with all pages rendered, this fits only the current "
"page in view, not all pages."
msgstr "对于所有页面均已渲染的内部文档，此功能仅适合当前显示的页面，而不是所有页面。"

#: ../../../_source/api.rst:311
msgid "Page Rendering Strategies"
msgstr "页面渲染策略"

#: ../../../_source/api.rst:313
msgid "These strategies implement different page rendering approaches."
msgstr "这些策略采用不同的页面渲染方法。"

#: ../../../_source/api.rst:316
msgid "Base Strategy"
msgstr "基础策略"

#: momovu.views.components.page_strategies.base:1 of
msgid "Base strategy for page rendering."
msgstr "页面渲染的基本策略。"

#: momovu.views.components.page_strategies.base.BaseStrategy:1 of
msgid "Bases: :py:class:`~abc.ABC`"
msgstr "基类：:py:class:`~abc.ABC`"

#: momovu.views.components.page_strategies.base.BaseStrategy:1 of
msgid "Abstract base class for page rendering strategies."
msgstr "页面渲染策略的抽象基类。"

#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:1 of
msgid "Initialize the render strategy."
msgstr "初始化渲染策略。"

#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:8 of
msgid "Renderer for margins and overlays"
msgstr "用于边距和覆盖层的渲染器"

#: momovu.views.components.page_strategies.base.BaseStrategy.render:1 of
msgid "Render pages according to the strategy."
msgstr "根据策略渲染页面。"

#: momovu.views.components.page_strategies.base.BaseStrategy.render:3 of
msgid "Current page index (0-based)"
msgstr "当前页索引（从0开始）"

#: momovu.views.components.page_strategies.base.BaseStrategy.render:5 of
msgid "Whether to show fold lines"
msgstr "是否显示折线"

#: momovu.views.components.page_strategies.base.BaseStrategy.render:6 of
msgid "Optional callback to fit page to view"
msgstr "可选的回调以适应页面到视图"

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:1
#: of
msgid "Instantiate and position a page widget for rendering."
msgstr "实例化并定位一个页面小部件以进行渲染。"

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:4
#: of
msgid "Left edge position in scene coordinates"
msgstr "场景坐标中左侧边缘位置"

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:5
#: of
msgid "Top edge position in scene coordinates"
msgstr "场景坐标中顶部边缘的位置"

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:7
#: of
msgid "Positioned PageItem ready for scene insertion, None if page invalid"
msgstr "将 PageItem 定位到准备插入场景的位置，如果页面无效则为 None"

#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:1
#: of
msgid "Render safety margins and trim indicators on top of page."
msgstr "在页面顶部显示安全边距和修剪指示器。"

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:1
#: of
msgid "Schedule zoom adjustment for presentation mode."
msgstr "为演示模式调整日程缩放。"

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:3
#: of
msgid "True triggers fit callback"
msgstr "真实触发器适合回调"

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:4
#: of
msgid "Function to scale view to page bounds"
msgstr "将视图缩放到页面范围的功能"

#: momovu.views.components.page_strategies.base.BaseStrategy.update_scene_rect:1
#: of
msgid ""
"Expand scene boundaries to include all rendered pages with padding for zoom."
msgstr "扩展场景边界以包含所有已渲染的页面，并为缩放添加内边距。"

#: momovu.views.components.page_strategies.base.BaseStrategy.update_scene_rect:3
#: of
msgid ""
"The padding allows proper mouse-centered zoom at document edges by giving Qt"
" room to position the viewport beyond the actual content bounds. Only adds "
"padding when zoomed in to avoid scrollbar issues."
msgstr ""
"填充允许在文档边缘进行以鼠标为中心的适当缩放，通过为 Qt 提供空间，使其可以将视口定位在实际内容边界之外。仅在放大时添加填充，以避免滚动条问题。"

#: momovu.views.components.page_strategies.base.BaseStrategy.cleanup_page_items:1
#: of
msgid "Clean up all PageItem instances before clearing the scene."
msgstr "在清除场景之前，请清理所有 PageItem 实例。"

#: momovu.views.components.page_strategies.base.BaseStrategy.cleanup_page_items:3
#: of
msgid "This ensures timers are stopped and resources are freed properly."
msgstr "这可以确保计时器被正确停止，资源被正确释放。"

#: ../../../_source/api.rst:324
msgid "All Pages Strategy"
msgstr "所有页面策略"

#: momovu.views.components.page_strategies.all_pages:1 of
msgid "All pages rendering strategy."
msgstr "所有页面的渲染策略。"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy:1
#: momovu.views.components.page_strategies.page_pair.PagePairStrategy:1
#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy:1
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy:1 of
msgid ""
"Bases: "
":py:class:`~momovu.views.components.page_strategies.base.BaseStrategy`"
msgstr ""
"基础类：:py:class:`~momovu.views.components.page_strategies.base.BaseStrategy`"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy:1 of
msgid "Strategy for rendering all pages vertically stacked."
msgstr "将所有页面垂直堆叠的策略。"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:1
#: of
msgid "Stack all document pages vertically with preserved scroll position."
msgstr "将所有文档页面垂直堆叠，并保留滚动位置。"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:3
#: of
msgid "Ignored - all pages shown regardless"
msgstr "忽略 - 显示所有页面"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:4
#: of
msgid "Ignored - not applicable for all pages"
msgstr "忽略 - 不适用于所有页面"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:5
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:5
#: of
msgid "Whether to display fold indicators"
msgstr "是否显示折叠标记"

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:6
#: of
msgid "Ignored - no fitting for multi-page view"
msgstr "已忽略 - 多页视图不适用"

#: ../../../_source/api.rst:332
msgid "Page Pair Strategy"
msgstr "页面配对策略"

#: momovu.views.components.page_strategies.page_pair:1 of
msgid "Page pair rendering strategy."
msgstr "页面对渲染策略。"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy:1 of
msgid "Strategy for rendering a pair of pages side by side."
msgstr "并排显示页面对的策略。"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:1
#: of
msgid "Display current page with its pair (page 1 alone, then 2-3, 4-5, etc)."
msgstr "以成对的方式显示当前页面（第1页单独显示，然后是2-3页，4-5页等）。"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:3
#: of
msgid "Page to display with its pair"
msgstr "与其配对一起显示的页面"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:4
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:4
#: of
msgid "Triggers fit_callback if True"
msgstr "如果为 True，则触发 fit_callback"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:5
#: of
msgid "Display spine line between pages"
msgstr "在页面间显示书脊线"

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:6
#: of
msgid "Function to scale pair to viewport"
msgstr "将配对缩放到视口的功能"

#: ../../../_source/api.rst:340
msgid "Side by Side Strategy"
msgstr "并列战略"

#: momovu.views.components.page_strategies.side_by_side:1 of
msgid "Side-by-side rendering strategy for all pages."
msgstr "所有页面的并排渲染策略。"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy:1
#: of
msgid ""
"Strategy for rendering all pages in side-by-side pairs vertically stacked."
msgstr "一种将所有页面以垂直堆叠方式并排成对呈现的策略。"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:1
#: of
msgid "Stack all page pairs vertically (page 1 alone, then 2-3, 4-5, etc)."
msgstr "将所有页面对垂直堆叠（第1页单独一页，然后是2-3页，4-5页，以此类推）。"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:3
#: of
msgid "Book layout: page 1 on right, then even pages left/odd pages right."
msgstr "书本版式：第1页在右侧，然后偶数页在左侧，奇数页在右侧。"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:5
#: of
msgid "Ignored - all pairs shown regardless"
msgstr "忽略 - 显示所有组合"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:6
#: of
msgid "Ignored - not applicable for all pairs"
msgstr "忽略 - 不适用于所有货币对"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:7
#: of
msgid "Display spine lines between pages"
msgstr "在页面之间显示书脊线"

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:8
#: of
msgid "Ignored - no fitting for multi-pair view"
msgstr "忽略 - 多对视图不适用"

#: ../../../_source/api.rst:348
msgid "Single Page Strategy"
msgstr "单页策略"

#: momovu.views.components.page_strategies.single_page:1 of
msgid "Single page rendering strategy."
msgstr "单页渲染策略。"

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy:1 of
msgid "Strategy for rendering a single page."
msgstr "单页渲染策略。"

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:1
#: of
msgid "Display only the current page, optionally fitted to view."
msgstr "仅显示当前页面，可选择适合视图的大小。"

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:3
#: of
msgid "Page index to display"
msgstr "要显示的页面索引"

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:6
#: of
msgid "Function to scale page to viewport"
msgstr "将页面缩放至视口的功能"

#: ../../../_source/api.rst:356
msgid "Margin Renderers"
msgstr "边距渲染器"

#: ../../../_source/api.rst:358
msgid ""
"These renderers handle margin and overlay drawing for different document "
"types."
msgstr "这些渲染器处理不同文档类型的边距和覆盖绘制。"

#: ../../../_source/api.rst:361
msgid "Base Renderer"
msgstr "基础渲染器"

#: momovu.views.components.renderers.base:1 of
msgid "Base renderer class for margin and overlay drawing."
msgstr "用于边距和覆盖绘制的基础渲染器类。"

#: momovu.views.components.renderers.base.BaseRenderer:1 of
msgid "Base class for all margin renderers."
msgstr "所有边距渲染器的基类。"

#: momovu.views.components.renderers.base.BaseRenderer.__init__:1 of
msgid "Initialize the base renderer."
msgstr "初始化基础渲染器。"

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:1
#: of
msgid "Get color from configuration or use default."
msgstr "从配置中获取颜色或使用默认颜色。"

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:3
#: of
msgid "Configuration key for the color (e.g., \"margin_overlay\", \"barcode_area\")"
msgstr "颜色的配置键（例如，“margin_overlay”，“barcode_area”）"

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:4
#: of
msgid "Default color to use if config not available"
msgstr "如果配置不可用，则使用的默认颜色"

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:6
#: of
msgid "QColor from configuration or default"
msgstr "从配置或默认值获取 QColor"

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:1
#: of
msgid "Get opacity from configuration or use default."
msgstr "从配置中获取不透明度或使用默认值。"

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:3
#: of
msgid "Configuration key for the opacity (e.g., \"margin_overlay\", \"barcode_area\")"
msgstr "用于不透明度的配置键（例如，“margin_overlay”，“barcode_area”）"

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:4
#: of
msgid "Default opacity to use if config not available"
msgstr "如果配置不可用，默认的不透明度"

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:6
#: of
msgid "Opacity value from configuration or default"
msgstr "从配置或默认值获取的不透明度值"

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:1
#: of
msgid "Get line width from configuration or use default."
msgstr "从配置中获取线宽或使用默认值。"

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:3
#: of
msgid "Configuration key for the line width (e.g., \"fold_lines\", \"trim_lines\")"
msgstr "用于线宽的配置键（例如，“fold_lines”，“trim_lines”）"

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:4
#: of
msgid "Default width to use if config not available"
msgstr "如果配置不可用，默认使用的宽度"

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:6
#: of
msgid "Line width from configuration or default"
msgstr "线宽来自配置或默认值"

#: momovu.views.components.renderers.base.BaseRenderer.clear_caches:1 of
msgid "Clear all cached configuration values."
msgstr "清除所有缓存的配置值。"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:1 of
msgid "Draw semi-transparent colored rectangle for margin visualization."
msgstr "为页边距可视化绘制半透明颜色矩形。"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:3 of
msgid "Rectangle left edge"
msgstr "矩形左侧边缘"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:4 of
msgid "Rectangle top edge"
msgstr "矩形顶部边缘"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:5 of
msgid "Rectangle width"
msgstr "矩形宽度"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:6 of
msgid "Rectangle height"
msgstr "矩形高度"

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:7 of
msgid "Fill color/pattern"
msgstr "填充颜色/图案"

#: momovu.views.components.renderers.base.BaseRenderer.get_margin_brush:1 of
msgid "Create brush for safety margin overlay rendering."
msgstr "创建用于安全边距叠加渲染的画笔。"

#: momovu.views.components.renderers.base.BaseRenderer.get_margin_brush:3 of
msgid "Semi-transparent blue/purple brush"
msgstr "半透明蓝色/紫色画笔"

#: momovu.views.components.renderers.base.BaseRenderer.get_fold_pen:1 of
msgid "Create pen for spine/flap fold indicators."
msgstr "为脊线/折页指示器创建画笔。"

#: momovu.views.components.renderers.base.BaseRenderer.get_fold_pen:3 of
msgid "2px purple dashed line pen"
msgstr "2像素紫色虚线笔"

#: momovu.views.components.renderers.base.BaseRenderer.get_trim_pen:1 of
msgid "Create pen for page edge trim marks."
msgstr "为页面边缘裁切标记创建画笔。"

#: momovu.views.components.renderers.base.BaseRenderer.get_trim_pen:3 of
msgid "1px solid black line pen"
msgstr "1像素实线黑色线条笔"

#: momovu.views.components.renderers.base.BaseRenderer.get_bleed_pen:1 of
msgid "Create pen for bleed line marks."
msgstr "创建用于出血线标记的笔。"

#: momovu.views.components.renderers.base.BaseRenderer.get_bleed_pen:3 of
msgid "1px solid light blue line pen"
msgstr "1像素浅蓝色实线笔"

#: ../../../_source/api.rst:369
msgid "Cover Renderer"
msgstr "封面渲染器"

#: momovu.views.components.renderers.cover:1 of
msgid "Renderer for cover document margins and overlays."
msgstr "用于封面文档边距和覆盖层的渲染器。"

#: momovu.views.components.renderers.cover.CoverRenderer:1
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer:1
#: momovu.views.components.renderers.interior.InteriorRenderer:1 of
msgid ""
"Bases: :py:class:`~momovu.views.components.renderers.base.BaseRenderer`"
msgstr "基类: :py:class:`~momovu.views.components.renderers.base.BaseRenderer`"

#: momovu.views.components.renderers.cover.CoverRenderer:1 of
msgid "Handles rendering for cover documents."
msgstr "负责处理封面文档的渲染。"

#: momovu.views.components.renderers.cover.CoverRenderer.__init__:1 of
msgid "Initialize the cover renderer."
msgstr "初始化封面渲染器。"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:1 of
msgid "Render safety margins on front/back covers, excluding spine area."
msgstr "在前后封面上绘制安全边距，不包括书脊区域。"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:3 of
msgid "Cover layout: [back cover][spine][front cover]"
msgstr "封面布局：[书脊][封底][封面]"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:3
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:3
#: of
msgid "Page left edge"
msgstr "页面左侧边缘"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:4
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:4
#: of
msgid "Page top edge"
msgstr "页面上边缘"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:7
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:5 of
msgid "Total cover width"
msgstr "总覆盖宽度"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:8
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:6 of
msgid "Cover height"
msgstr "封面高度"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:9
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:9
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:7
#: of
msgid "Safety margin size"
msgstr "安全裕度大小"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:7
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:10
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:7
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:10
#: of
msgid "Book spine thickness"
msgstr "书脊厚度"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:1 of
msgid "Add trim marks at cover edges accounting for bleed."
msgstr "在封面边缘添加修边标记，需考虑出血部分。"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:1
#: of
msgid "Mark spine boundaries with dashed purple lines."
msgstr "用虚紫色线标出脊柱边界。"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:1 of
msgid "Highlight barcode placement area on back cover bottom-right."
msgstr "在书脊底部右侧标出条形码放置区域。"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:8 of
msgid "Distance from edges"
msgstr "到边缘的距离"

#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:1
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:1
#: of
msgid "Add bleed marks at actual page edges (outside trim lines)."
msgstr "在实际页面边缘（裁切线外侧）添加出血标记。"

#: ../../../_source/api.rst:377
msgid "Dustjacket Renderer"
msgstr "护封渲染器"

#: momovu.views.components.renderers.dustjacket:1 of
msgid "Renderer for dustjacket document margins and overlays."
msgstr "用于精装书护封文档边距和覆盖层的渲染器。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer:1 of
msgid "Handles rendering for dustjacket documents."
msgstr "负责处理书籍封面文档的渲染。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:1
#: of
msgid "Initialize the dustjacket renderer."
msgstr "初始化书封渲染器。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:1
#: of
msgid "Render safety margins on all dustjacket sections including flaps."
msgstr "在所有封面部分（包括折口）上显示安全边距。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:3
#: of
msgid "Layout: [left flap][back cover][spine][front cover][right flap]"
msgstr "版式：[左折页][书脊背面][书脊][封面][右折页]"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:7
#: of
msgid "Total dustjacket width"
msgstr "书封总宽度"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:8
#: of
msgid "Dustjacket height"
msgstr "书套高度"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:11
#: of
msgid "Width of each flap"
msgstr "每个襟片的宽度"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_trim_lines:1
#: of
msgid "Add trim marks at dustjacket edges accounting for bleed."
msgstr "在书封边缘添加修边标记，并考虑出血部分。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_fold_lines:1
#: of
msgid "Mark flap fold positions with dashed purple lines."
msgstr "用虚紫色线标出折痕位置。"

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_barcode:1
#: of
msgid "Highlight barcode placement area on back cover section."
msgstr "在书脊部分突出显示条形码放置区域。"

#: ../../../_source/api.rst:385
msgid "Interior Renderer"
msgstr "室内渲染器"

#: momovu.views.components.renderers.interior:1 of
msgid "Renderer for interior document margins and overlays."
msgstr "用于内部文档边距和覆盖层的渲染器。"

#: momovu.views.components.renderers.interior.InteriorRenderer:1 of
msgid "Handles rendering for interior documents."
msgstr "负责处理内部文档的渲染。"

#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:1 of
msgid "Initialize the interior renderer."
msgstr "初始化内部渲染器。"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:1
#: of
msgid "Render safety margin overlays on all four edges."
msgstr "在所有四个边缘上渲染安全边距覆盖层。"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:5
#: of
msgid "Page width"
msgstr "页面宽度"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:6
#: of
msgid "Page height"
msgstr "页面高度"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:1
#: of
msgid "Add trim marks exactly at page boundaries."
msgstr "在页面边界处精确添加修边标记。"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:1
#: of
msgid "Interior documents don't have bleed lines."
msgstr "内部文件没有出血线。"

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:7
#: of
msgid "Ignored for interior documents"
msgstr "内部文件，忽略"

#: ../../../_source/api.rst:393
msgid "Library Modules"
msgstr "库模块"

#: ../../../_source/api.rst:395
msgid "These modules provide utility functions and shared functionality."
msgstr "这些模块提供实用函数和共享功能。"

#: ../../../_source/api.rst:398
msgid "Configuration Manager"
msgstr "配置管理器"

#: momovu.lib.configuration_manager:1 of
msgid ""
"Configuration management for Momovu application using PySide6 best "
"practices."
msgstr "使用 PySide6 最佳实践进行 Momovu 应用程序的配置管理。"

#: momovu.lib.configuration_manager.ConfigurationManager:1 of
msgid "Central configuration management using PySide6 best practices."
msgstr "使用 PySide6 最佳实践进行集中式配置管理。"

#: momovu.lib.configuration_manager.ConfigurationManager.__init__:1 of
msgid "Initialize the configuration manager."
msgstr "初始化配置管理器。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:1 of
msgid "Get value with automatic type conversion (PySide6 feature)."
msgstr "获取值并自动进行类型转换（PySide6 特性）"

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:3
#: momovu.lib.configuration_manager.ConfigurationManager.set_value:3 of
msgid "Configuration key"
msgstr "配置密钥"

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:5 of
msgid "Type to convert the value to"
msgstr "输入以转换该值"

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:7 of
msgid "The configuration value or default"
msgstr "配置值或默认值"

#: momovu.lib.configuration_manager.ConfigurationManager.set_value:1 of
msgid "Set value and emit change signal."
msgstr "设置值并发出更改信号。"

#: momovu.lib.configuration_manager.ConfigurationManager.add_recent_file:1 of
msgid "Add file to recent list with automatic cleanup."
msgstr "将文件添加到最近列表并自动清理。"

#: momovu.lib.configuration_manager.ConfigurationManager.add_recent_file:3 of
msgid "Dictionary containing file metadata"
msgstr "包含文件元数据的字典"

#: momovu.lib.configuration_manager.ConfigurationManager.get_recent_files:1 of
msgid "Get recent files using QSettings array API."
msgstr "使用 QSettings 数组 API 获取最近的文件。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_recent_files:3 of
msgid "List of file info dictionaries"
msgstr "文件信息字典列表"

#: momovu.lib.configuration_manager.ConfigurationManager.reset_to_defaults:1
#: of
msgid "Reset all settings to defaults."
msgstr "将所有设置恢复为默认值。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_config_file_path:1
#: of
msgid "Get the actual configuration file path for debugging."
msgstr "获取实际的配置文件路径以进行调试。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_config_file_path:3
#: of
msgid "Path to the configuration file"
msgstr "配置文件路径"

#: momovu.lib.configuration_manager.ConfigurationManager.is_writable:1 of
msgid "Check if configuration is writable."
msgstr "检查配置是否可写。"

#: momovu.lib.configuration_manager.ConfigurationManager.is_writable:3 of
msgid "True if configuration can be written"
msgstr "如果可以写入配置，则为真"

#: momovu.lib.configuration_manager.ConfigurationManager.get_status:1 of
msgid "Get configuration status for error checking."
msgstr "获取配置状态以进行错误检查。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_status:3 of
msgid "QSettings status"
msgstr "QSettings 状态"

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:1
#: of
msgid "Save window state information."
msgstr "保存窗口状态信息。"

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:3
#: of
msgid "Window geometry as bytes"
msgstr "窗口几何形状（以字节为单位）"

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:4
#: of
msgid "Window state as bytes"
msgstr "窗口状态作为字节"

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:5
#: of
msgid "Whether window is maximized"
msgstr "窗口是否最大化"

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:6
#: of
msgid "Whether window is fullscreen"
msgstr "窗口是否全屏"

#: momovu.lib.configuration_manager.ConfigurationManager.get_window_state:1 of
msgid "Get saved window state."
msgstr "获取已保存的窗口状态。"

#: momovu.lib.configuration_manager.ConfigurationManager.get_window_state:3 of
msgid "Dictionary with window state information"
msgstr "包含窗口状态信息的字典"

#: momovu.lib.configuration_manager.ConfigurationManager.begin_batch_update:1
#: of
msgid "Begin a batch update operation."
msgstr "开始批处理更新操作。"

#: momovu.lib.configuration_manager.ConfigurationManager.begin_batch_update:3
#: of
msgid ""
"During batch update, config_changed signals are suppressed until "
"end_batch_update() is called. This prevents multiple signals during bulk "
"configuration changes."
msgstr ""
"在批量更新期间，config_changed 信号会被抑制，直到调用 end_batch_update()。这可以防止在进行批量配置更改时触发多个信号。"

#: momovu.lib.configuration_manager.ConfigurationManager.end_batch_update:1 of
msgid "End a batch update operation and emit a single change signal."
msgstr "结束批量更新操作并发出一个更改信号。"

#: momovu.lib.configuration_manager.ConfigurationManager.end_batch_update:3 of
msgid ""
"This will emit a single config_changed signal with \"*\" to indicate "
"multiple changes occurred, rather than individual signals for each change."
msgstr "这将发出一个带有“*”的 config_changed 信号，表示发生了多项更改，而不是为每次更改单独发出信号。"

#: ../../../_source/api.rst:406
msgid "Constants"
msgstr "常量"

#: momovu.lib.constants:1 of
msgid "Constants used throughout the Momovu application."
msgstr "Momovu 应用程序中使用的常量。"

#: momovu.lib.constants:3 of
msgid ""
"This module defines all the constants used in the Momovu application "
"including: - Window dimensions and UI elements - Presentation settings - "
"Measurement conversions (points, mm, inches) - Cache and performance "
"settings - Zoom factors - Default margins and safety areas - Barcode "
"dimensions for covers - Spine and flap calculations - Graphics item colors "
"and styles - Z-order layering values"
msgstr ""
"此模块定义了Momovu应用程序中使用的所有常量，包括：  \n"
"- 窗口尺寸和UI元素  \n"
"- 演示设置  \n"
"- 测量转换（点、毫米、英寸）  \n"
"- 缓存和性能设置  \n"
"- 缩放系数  \n"
"- 默认边距和安全区域  \n"
"- 封面的条形码尺寸  \n"
"- 脊部和封皮计算  \n"
"- 图形项的颜色和样式  \n"
"- Z轴层级值"

#: ../../../_source/api.rst:414
msgid "Exceptions"
msgstr "例外情况"

#: momovu.lib.exceptions:1 of
msgid "Custom exceptions for Momovu."
msgstr "针对 Momovu 的自定义异常。"

#: momovu.lib.exceptions:3 of
msgid ""
"This module defines custom exception classes used throughout the Momovu "
"application to handle specific error conditions with better context and "
"debugging information."
msgstr "此模块定义了在整个Momovu应用程序中使用的自定义异常类，以便以更好的上下文和调试信息来处理特定错误条件。"

#: momovu.lib.exceptions.MomovuError:1 of
msgid "Bases: :py:class:`Exception`"
msgstr "基类：:py:class:`Exception`"

#: momovu.lib.exceptions.MomovuError:1 of
msgid "Base exception for all Momovu-specific errors."
msgstr "所有Momovu特定错误的基本异常。"

#: momovu.lib.exceptions.MomovuError:3 of
msgid ""
"All custom exceptions in the application should inherit from this class to "
"allow for easy catching of application-specific errors."
msgstr "应用程序中所有自定义异常都应继承此类，以便于捕获特定于应用程序的错误。"

#: momovu.lib.exceptions.MomovuError.__init__:1 of
msgid "Initialize the exception with a message and optional details."
msgstr "使用消息和可选的详细信息初始化异常。"

#: momovu.lib.exceptions.MomovuError.__init__:3 of
msgid "The error message"
msgstr "错误信息"

#: momovu.lib.exceptions.MomovuError.__init__:4 of
msgid "Optional dictionary with additional error context"
msgstr "可选的包含附加错误上下文的字典"

#: momovu.lib.exceptions.DocumentLoadError:1
#: momovu.lib.exceptions.PageRenderError:1 of
msgid "Bases: :py:class:`~momovu.lib.exceptions.MomovuError`"
msgstr "基础类: :py:class:`~momovu.lib.exceptions.MomovuError`"

#: momovu.lib.exceptions.DocumentLoadError:1 of
msgid "Raised when a document fails to load."
msgstr "在文档加载失败时触发。"

#: momovu.lib.exceptions.DocumentLoadError.__init__:1 of
msgid "Initialize with file path and reason for failure."
msgstr "使用文件路径和失败原因进行初始化。"

#: momovu.lib.exceptions.DocumentLoadError.__init__:3 of
msgid "Path to the document that failed to load"
msgstr "未能加载的文档路径"

#: momovu.lib.exceptions.DocumentLoadError.__init__:4 of
msgid "Reason for the load failure"
msgstr "负载失败的原因"

#: momovu.lib.exceptions.PageRenderError:1 of
msgid "Raised when a page fails to render."
msgstr "当页面无法渲染时引发。"

#: momovu.lib.exceptions.PageRenderError.__init__:1 of
msgid "Initialize with page number and reason for failure."
msgstr "使用页码和失败原因进行初始化。"

#: momovu.lib.exceptions.PageRenderError.__init__:3 of
msgid "The page that failed to render"
msgstr "未能渲染的页面"

#: momovu.lib.exceptions.PageRenderError.__init__:4 of
msgid "Reason for the render failure"
msgstr "渲染失败的原因"

#: ../../../_source/api.rst:422
msgid "Icon Theme"
msgstr "图标主题"

#: momovu.lib.icon_theme:1 of
msgid "Icon theme configuration for Qt applications."
msgstr "Qt 应用程序的图标主题配置。"

#: momovu.lib.icon_theme:3 of
msgid ""
"This module handles Qt icon theme configuration using Qt's built-in theme "
"support, including fallback themes and search paths."
msgstr "该模块通过 Qt 内置的主题支持来处理 Qt 图标主题配置，包括回退主题和搜索路径。"

#: momovu.lib.icon_theme.configure_icon_theme:1 of
msgid "Configure Qt icon theme with proper fallbacks."
msgstr "使用适当的后备方案配置 Qt 图标主题。"

#: momovu.lib.icon_theme.configure_icon_theme:3 of
msgid ""
"Uses Qt's built-in theme support: 1. Ensures standard search paths are "
"available 2. Sets up fallback theme if main theme is missing icons 3. Adds "
"fallback search paths for standalone icons"
msgstr "使用 Qt 内置的主题支持：1. 确保标准搜索路径可用 2. 如果主主题缺少图标，则设置备用主题 3. 为独立图标添加备用搜索路径"

#: ../../../_source/api.rst:430
msgid "Logger"
msgstr "记录器"

#: momovu.lib.logger:1 of
msgid "Enhanced logging configuration for Momovu."
msgstr "为Momovu增强的日志配置。"

#: momovu.lib.logger:3 of
msgid ""
"This module provides structured logging with context, performance metrics, "
"and decorators for common operations."
msgstr "此模块提供带上下文的结构化日志记录、性能指标以及常用操作的装饰器。"

#: momovu.lib.logger.StructuredFormatter:1 of
msgid "Bases: :py:class:`~logging.Formatter`"
msgstr "基础类：:py:class:`~logging.Formatter`"

#: momovu.lib.logger.StructuredFormatter:1 of
msgid "Formatter that outputs structured log messages with context."
msgstr "输出带上下文的结构化日志消息的格式化器。"

#: momovu.lib.logger.StructuredFormatter.format:1 of
msgid "Format the log record with structured context."
msgstr "使用结构化上下文格式化日志记录。"

#: momovu.lib.logger.configure_logging:1 of
msgid "Configure logging based on command line arguments."
msgstr "根据命令行参数配置日志记录。"

#: momovu.lib.logger.configure_logging:3 of
msgid "Verbosity level (0=WARNING, 1=INFO, 2+=DEBUG)"
msgstr "详细程度（0=警告，1=信息，2+=调试）"

#: momovu.lib.logger.configure_logging:4 of
msgid "Enable debug logging"
msgstr "启用调试日志记录"

#: momovu.lib.logger.get_logger:1 of
msgid "Get a logger instance with the given name."
msgstr "使用给定名称获取一个记录器实例。"

#: momovu.lib.logger.get_logger:3 of
msgid "Logger name (typically __name__)"
msgstr "记录器名称（通常为 __name__）"

#: momovu.lib.logger.get_logger:5 of
msgid "Configured logger instance"
msgstr "配置的日志记录器实例"

#: ../../../_source/api.rst:438
msgid "Shortcuts Dialog"
msgstr "快捷方式对话框"

#: momovu.lib.shortcuts_dialog:1 of
msgid "Keyboard shortcuts dialog for Momovu."
msgstr "Momovu 的键盘快捷键对话框。"

#: momovu.lib.shortcuts_dialog:3 of
msgid ""
"This module provides a dialog that displays all available keyboard shortcuts"
" to help users learn and use the application more efficiently."
msgstr "此模块提供一个对话框，显示所有可用的键盘快捷方式，以帮助用户更高效地学习和使用该应用程序。"

#: momovu.lib.shortcuts_dialog.ShortcutsDialog:1 of
msgid "Dialog displaying all keyboard shortcuts."
msgstr "显示所有键盘快捷键的对话框。"

#: momovu.lib.shortcuts_dialog.ShortcutsDialog.__init__:1 of
msgid "Initialize the shortcuts dialog."
msgstr "初始化快捷键对话框。"

#: ../../../_source/api.rst:446
msgid "Dustjacket Spine Widths"
msgstr "书封背宽"

#: momovu.lib.sizes.dustjacket_spine_widths:1 of
msgid "Dustjacket spine width lookup table for page count ranges."
msgstr "页数范围对应的书脊宽度对照表"

#: momovu.lib.sizes.dustjacket_spine_widths:3 of
msgid ""
"This module defines the spine width lookup table for dustjackets based on "
"page count. The table provides discrete spine width values for specific page"
" count ranges, unlike covers which use a continuous formula."
msgstr "此模块定义了基于页数的精装书脊宽度查询表。与使用连续公式的书封不同，该表为特定页数范围提供了离散的书脊宽度值。"

#: momovu.lib.sizes.dustjacket_spine_widths:7 of
msgid ""
"Data source: Restored from git commit 42505ca (was in margin_sizes.py) All "
"measurements are in millimeters (mm)."
msgstr "数据来源：从 git 提交 42505ca 恢复（原位于 margin_sizes.py）所有测量单位均为毫米（mm）。"

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:1 of
msgid "Get dustjacket spine width in mm for given page count."
msgstr "根据给定的页数获取书脊的宽度（毫米）。"

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:3 of
msgid "Number of pages in the document"
msgstr "文档中的页数"

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:7 of
msgid "For page counts outside the 24-800 range, returns 6mm (minimum width)"
msgstr "对于超出 24-800 范围的页数，返回 6 毫米（最小宽度）"

#: ../../../_source/api.rst:454
msgid "Usage Examples"
msgstr "用法示例"

#: ../../../_source/api.rst:457
msgid "Basic Usage"
msgstr "基本用法"

#: ../../../_source/api.rst:470
msgid "Command Line Usage"
msgstr "命令行用法"

#: ../../../_source/api.rst:487
msgid "Programmatic Usage"
msgstr "编程使用"

#: ../../../_source/api.rst:529
msgid "Working with Document Types"
msgstr "处理文档类型"

#: ../../../_source/api.rst:548
msgid "Navigation Examples"
msgstr "导航示例"

#: ../../../_source/api.rst:567
msgid "Margin Configuration"
msgstr "保证金配置"

#: ../../../_source/api.rst:586
msgid "Error Handling"
msgstr "错误处理"

#: ../../../_source/api.rst:603
msgid "Extending Momovu"
msgstr "扩展 Momovu"

#: ../../../_source/api.rst:606
msgid "Creating Custom Strategies"
msgstr "创建自定义策略"

#: ../../../_source/api.rst:629
msgid "Creating Custom Renderers"
msgstr "创建自定义渲染器"

#: ../../../_source/api.rst:664
msgid "Adding Custom Validators"
msgstr "添加自定义验证器"
