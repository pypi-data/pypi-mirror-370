# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Jeff Moe
# This file is distributed under the same license as the Momovu package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Momovu 1.2.4.dev2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-16 10:24-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh <LL@li.org>\n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"

#: ../../../_source/architecture.rst:3
msgid "Architecture"
msgstr "建筑"

#: ../../../_source/architecture.rst:5
msgid ""
"This document describes the software architecture of Momovu, including its "
"design patterns, component structure, and technical decisions."
msgstr "本文档描述了Momovu的软件架构，包括其设计模式、组件结构和技术决策。"

#: ../../../_source/architecture.rst:9
msgid "Overview"
msgstr "概述"

#: ../../../_source/architecture.rst:11
msgid ""
"Momovu follows the **Model-View-Presenter (MVP)** architectural pattern with"
" clear separation of concerns:"
msgstr "Momovu 遵循 **模型-视图-演示者（MVP）** 架构模式，具有明确的职责分离："

#: ../../../_source/architecture.rst:13
msgid "**Model Layer**: Data storage and business state management"
msgstr "**模型层**：数据存储和业务状态管理"

#: ../../../_source/architecture.rst:14
msgid "**View Layer**: Qt-based GUI components and user interface"
msgstr "**视图层**：基于Qt的GUI组件和用户界面"

#: ../../../_source/architecture.rst:15
msgid ""
"**Presenter Layer**: Business logic and coordination between models and "
"views"
msgstr "**演示层**：模型与视图之间的业务逻辑和协调"

#: ../../../_source/architecture.rst:16
msgid ""
"**Component Layer**: Specialized UI components for specific functionality"
msgstr "**组件层**：具有特定功能的专业化 UI 组件"

#: ../../../_source/architecture.rst:19
msgid "Technology Stack"
msgstr "技术栈"

#: ../../../_source/architecture.rst:22
msgid "Core Technologies"
msgstr "核心技术"

#: ../../../_source/architecture.rst:24
msgid "**Python 3.9+**: Modern Python with type hints"
msgstr "**Python 3.9+**：带类型提示的现代 Python"

#: ../../../_source/architecture.rst:25
msgid "**PySide6/Qt6**: Cross-platform GUI framework"
msgstr "**PySide6/Qt6**：跨平台图形用户界面框架"

#: ../../../_source/architecture.rst:26
msgid "**QPdfDocument**: Native PDF rendering"
msgstr "**QPdfDocument**：原生 PDF 渲染"

#: ../../../_source/architecture.rst:27
msgid "**QGraphicsView**: Scene-based rendering system"
msgstr "**QGraphicsView**：基于场景的渲染系统"

#: ../../../_source/architecture.rst:30
msgid "Design Principles"
msgstr "设计原则"

#: ../../../_source/architecture.rst:32
msgid ""
"**MVP Pattern**: Clear separation between data, logic, and presentation"
msgstr "**MVP 模式**：数据、逻辑和展示的清晰分离"

#: ../../../_source/architecture.rst:33
msgid "**Single Responsibility**: Each class has one well-defined purpose"
msgstr "**单一职责**：每个类都有一个明确的职责"

#: ../../../_source/architecture.rst:34
msgid "**Dependency Injection**: Loose coupling between components"
msgstr "**依赖注入**：组件之间的松耦合"

#: ../../../_source/architecture.rst:35
msgid ""
"**Observer Pattern**: Event-driven updates via property change notifications"
msgstr "**观察者模式**：通过属性更改通知进行事件驱动的更新"

#: ../../../_source/architecture.rst:36
msgid ""
"**Strategy Pattern**: Different rendering strategies for various view modes"
msgstr "**策略模式**：不同视图模式下的渲染策略"

#: ../../../_source/architecture.rst:37
msgid "**Component-Based Architecture**: Modular UI components"
msgstr "**基于组件的架构**：模块化用户界面组件"

#: ../../../_source/architecture.rst:40
msgid "MVP Architecture"
msgstr "MVP 架构"

#: ../../../_source/architecture.rst:42
msgid "The application follows a strict MVP pattern where:"
msgstr "该应用程序遵循严格的MVP模式，其中："

#: ../../../_source/architecture.rst:44
msgid "**Models** hold data and notify observers of changes"
msgstr "**模型**持有数据并通知观察者发生变化"

#: ../../../_source/architecture.rst:45
msgid "**Views** display data and handle user input"
msgstr "**视图**显示数据并处理用户输入"

#: ../../../_source/architecture.rst:46
msgid ""
"**Presenters** contain business logic and coordinate between models and "
"views"
msgstr "**演示器**包含业务逻辑，并在模型和视图之间进行协调。"

#: ../../../_source/architecture.rst:49
msgid "Model Layer"
msgstr "模型层"

#: ../../../_source/architecture.rst:51
msgid "**Base Model**"
msgstr "基础模型"

#: ../../../_source/architecture.rst:53
msgid "All models inherit from ``BaseModel`` which provides:"
msgstr "所有模型都继承自 ``BaseModel``，它提供了以下功能："

#: ../../../_source/architecture.rst:64
msgid "**Document Model**"
msgstr "文档模型"

#: ../../../_source/architecture.rst:66
msgid "Manages PDF document data:"
msgstr "管理PDF文档数据："

#: ../../../_source/architecture.rst:77
msgid "**Margin Settings Model**"
msgstr "**边距设置模型**"

#: ../../../_source/architecture.rst:79
msgid "Stores margin and overlay configuration:"
msgstr "存储边距和叠加配置："

#: ../../../_source/architecture.rst:90
msgid "**View State Model**"
msgstr "视图状态模型"

#: ../../../_source/architecture.rst:92
msgid "Maintains view-related state:"
msgstr "维护与视图相关的状态："

#: ../../../_source/architecture.rst:104
msgid "Presenter Layer"
msgstr "演示层"

#: ../../../_source/architecture.rst:106
msgid "**Base Presenter**"
msgstr "基础演示者"

#: ../../../_source/architecture.rst:108
msgid "Abstract base class for all presenters:"
msgstr "所有Presenter的抽象基类："

#: ../../../_source/architecture.rst:118
msgid "**Document Presenter**"
msgstr "文档演示者"

#: ../../../_source/architecture.rst:120
msgid "Handles PDF document operations:"
msgstr "处理 PDF 文档操作："

#: ../../../_source/architecture.rst:122
msgid "Document loading and validation"
msgstr "文档加载和验证"

#: ../../../_source/architecture.rst:123
msgid "Page rendering coordination"
msgstr "页面渲染协调"

#: ../../../_source/architecture.rst:124
msgid "Error handling and reporting"
msgstr "错误处理和报告"

#: ../../../_source/architecture.rst:125
msgid "Qt PDF document management"
msgstr "Qt PDF 文档管理"

#: ../../../_source/architecture.rst:127
msgid "**Margin Presenter**"
msgstr "保证金展示"

#: ../../../_source/architecture.rst:129
msgid "Manages margin calculations:"
msgstr "管理保证金计算："

#: ../../../_source/architecture.rst:131
msgid "Document type-specific margins"
msgstr "特定文件类型的边距"

#: ../../../_source/architecture.rst:132
msgid "Spine width calculations"
msgstr "脊宽计算"

#: ../../../_source/architecture.rst:133
msgid "Overlay visibility control"
msgstr "覆盖可见性控制"

#: ../../../_source/architecture.rst:134
msgid "Margin geometry calculations"
msgstr "边距几何计算"

#: ../../../_source/architecture.rst:136
msgid "**Navigation Presenter**"
msgstr "导航演示器"

#: ../../../_source/architecture.rst:138
msgid "Controls page navigation:"
msgstr "控制页面导航："

#: ../../../_source/architecture.rst:140
msgid "Page movement logic"
msgstr "页面移动逻辑"

#: ../../../_source/architecture.rst:141
msgid "View mode management"
msgstr "视图模式管理"

#: ../../../_source/architecture.rst:142
msgid "Navigation bounds checking"
msgstr "导航边界检查"

#: ../../../_source/architecture.rst:143
msgid "Page pair calculations"
msgstr "页面对计算"

#: ../../../_source/architecture.rst:146
msgid "View Layer"
msgstr "视图层"

#: ../../../_source/architecture.rst:148
msgid "**Main Window**"
msgstr "主窗口"

#: ../../../_source/architecture.rst:150
msgid "Central application window:"
msgstr "中央应用程序窗口："

#: ../../../_source/architecture.rst:160
msgid "**Page Item**"
msgstr "页面项"

#: ../../../_source/architecture.rst:162
msgid "Individual PDF page rendering with advanced zoom support:"
msgstr "支持高级缩放功能的独立 PDF 页面渲染："

#: ../../../_source/architecture.rst:175
msgid "Component Architecture"
msgstr "组件架构"

#: ../../../_source/architecture.rst:178
msgid "UI Components"
msgstr "用户界面组件"

#: ../../../_source/architecture.rst:180
msgid ""
"The view layer is composed of specialized components, each handling a "
"specific aspect:"
msgstr "视图层由专门的组件组成，每个组件负责处理特定的方面："

#: ../../../_source/architecture.rst:182
msgid "**Window Components:**"
msgstr "**窗口组件：**"

#: ../../../_source/architecture.rst:184
msgid "``WindowSetup``: Initialization and configuration"
msgstr "``WindowSetup``：初始化和配置"

#: ../../../_source/architecture.rst:185
msgid "``MenuBuilder``: Menu bar construction"
msgstr "``MenuBuilder``：菜单栏构建"

#: ../../../_source/architecture.rst:186
msgid "``ToolbarBuilder``: Toolbar creation and management"
msgstr "``ToolbarBuilder``：工具栏的创建与管理"

#: ../../../_source/architecture.rst:187
msgid "``SignalConnections``: Signal-slot connection management"
msgstr "``SignalConnections``：信号-槽连接管理"

#: ../../../_source/architecture.rst:189
msgid "**Navigation Components:**"
msgstr "导航组件："

#: ../../../_source/architecture.rst:191
msgid "``NavigationController``: Centralized navigation control"
msgstr "``NavigationController``：集中导航控制"

#: ../../../_source/architecture.rst:192
msgid "``ScrollManager``: View scrolling coordination"
msgstr "``ScrollManager``：视图滚动协调"

#: ../../../_source/architecture.rst:193
msgid "``PagePositions``: Page position calculations"
msgstr "``PagePositions``：页面位置计算"

#: ../../../_source/architecture.rst:194
msgid "``PageSpinBox``: Custom page number input"
msgstr "``PageSpinBox``：自定义页码输入"

#: ../../../_source/architecture.rst:196
msgid "**Rendering Components:**"
msgstr "**渲染组件：**"

#: ../../../_source/architecture.rst:198
msgid "``PageRenderer``: Page rendering coordination"
msgstr "``PageRenderer``：页面渲染协调"

#: ../../../_source/architecture.rst:199
msgid "``MarginRenderer``: Margin and overlay rendering"
msgstr "``MarginRenderer``：页边距和覆盖渲染"

#: ../../../_source/architecture.rst:200
msgid "``GraphicsView``: Custom QGraphicsView with enhanced zoom/pan"
msgstr "``GraphicsView``：具有增强缩放/平移功能的自定义 QGraphicsView"

#: ../../../_source/architecture.rst:201
msgid "``ZoomController``: Advanced zoom operations with mouse-centered zoom"
msgstr "``ZoomController``：以鼠标为中心进行高级缩放操作"

#: ../../../_source/architecture.rst:203
msgid "**State Management:**"
msgstr "状态管理："

#: ../../../_source/architecture.rst:205
msgid "``UIStateManager``: Presentation and fullscreen modes"
msgstr "``UIStateManager``：演示模式和全屏模式"

#: ../../../_source/architecture.rst:206
msgid "``ToggleManager``: UI toggle operations"
msgstr "``ToggleManager``：UI切换操作"

#: ../../../_source/architecture.rst:207
msgid "``DialogManager``: Dialog handling"
msgstr "``DialogManager``：对话处理"

#: ../../../_source/architecture.rst:208
msgid "``CleanupCoordinator``: Resource cleanup"
msgstr "``CleanupCoordinator``：资源清理"

#: ../../../_source/architecture.rst:211
msgid "Rendering Strategies"
msgstr "渲染策略"

#: ../../../_source/architecture.rst:213
msgid "Different strategies for various view modes:"
msgstr "不同视图模式的不同策略："

#: ../../../_source/architecture.rst:224
msgid "Margin Renderers"
msgstr "边距渲染器"

#: ../../../_source/architecture.rst:226
msgid "Document type-specific rendering:"
msgstr "文档类型特定的呈现："

#: ../../../_source/architecture.rst:236
msgid "Data Flow"
msgstr "数据流"

#: ../../../_source/architecture.rst:239
msgid "Model Update Flow"
msgstr "模型更新流程"

#: ../../../_source/architecture.rst:251
msgid "Document Loading Flow"
msgstr "文档加载流程"

#: ../../../_source/architecture.rst:265
msgid "View Mode Change Flow"
msgstr "视图模式切换流程"

#: ../../../_source/architecture.rst:278
msgid "State Management"
msgstr "状态管理"

#: ../../../_source/architecture.rst:281
msgid "Property Change Notification"
msgstr "属性变更通知"

#: ../../../_source/architecture.rst:283
msgid "Models use property change events:"
msgstr "模型使用属性更改事件："

#: ../../../_source/architecture.rst:296
msgid "Batch Updates"
msgstr "批量更新"

#: ../../../_source/architecture.rst:298
msgid "For multiple related changes:"
msgstr "对于多个相关更改："

#: ../../../_source/architecture.rst:308
msgid "View Updates"
msgstr "查看更新"

#: ../../../_source/architecture.rst:310
msgid "Views are updated through presenter calls:"
msgstr "视图通过演示器调用进行更新："

#: ../../../_source/architecture.rst:322
msgid "Performance Optimization"
msgstr "性能优化"

#: ../../../_source/architecture.rst:325
msgid "Rendering Pipeline"
msgstr "渲染管线"

#: ../../../_source/architecture.rst:327
msgid "Advanced multi-stage rendering approach:"
msgstr "先进的多阶段渲染方法："

#: ../../../_source/architecture.rst:329
msgid ""
"**Zoom-Aware Rendering**: - Below 10x zoom: Full page rendering for best "
"quality - Above 10x zoom: Viewport-based partial rendering - Progressive "
"rendering: Low-quality preview during zoom, high-quality after"
msgstr ""
"**缩放感知渲染**：  \n"
"- 缩放小于10倍：全页渲染以获得最佳质量  \n"
"- 缩放大于10倍：基于视口的局部渲染  \n"
"- 渐进式渲染：缩放时显示低质量预览，缩放后显示高质量图像"

#: ../../../_source/architecture.rst:334
msgid ""
"**Intelligent Caching**: - LRU cache for rendered regions - Configurable "
"memory limits (300MB default) - Cache key includes scale and viewport "
"coordinates - Predictive pre-rendering of adjacent areas"
msgstr ""
"**智能缓存**：  \n"
"- 使用 LRU 算法缓存已渲染区域  \n"
"- 可配置内存限制（默认 300MB）  \n"
"- 缓存键包含缩放级别和视口坐标  \n"
"- 预测性预渲染相邻区域"

#: ../../../_source/architecture.rst:340
msgid ""
"**Viewport Optimization**: - Only render visible area plus configurable "
"buffer - Buffer size reduces at high zoom to maintain quality - Scene "
"padding ensures smooth edge panning"
msgstr "**视口优化**： - 仅渲染可见区域及可配置的缓冲区 - 高倍缩小时减少缓冲区大小以保持质量 - 场景填充确保边缘平滑移动"

#: ../../../_source/architecture.rst:345
msgid ""
"**Quality Management**: - Snap to predefined zoom levels for better cache "
"hits - Maximum useful scale capping (100x) - Presentation mode always uses "
"full quality"
msgstr "**质量管理**： - 快速定位到预定义的缩放级别以获得更好的缓存命中率 - 最大有效比例限制（100x） - 演示模式始终使用全质量"

#: ../../../_source/architecture.rst:351
msgid "Memory Management"
msgstr "内存管理"

#: ../../../_source/architecture.rst:353
msgid "Enhanced resource optimization:"
msgstr "增强的资源优化："

#: ../../../_source/architecture.rst:355
msgid ""
"**Render Cache Management**: - Maximum 20 cached regions per page - "
"Automatic eviction when memory limit reached - Proper cleanup of QImage "
"resources"
msgstr "**渲染缓存管理**： - 每页最多缓存 20 个区域 - 内存达到限制时自动清除 - 正确清理 QImage 资源"

#: ../../../_source/architecture.rst:360
msgid ""
"**Timer Management**: - QTimer cleanup with deleteLater() - Scene validity "
"checks before rendering - Prevents memory leaks from orphaned timers"
msgstr ""
"**定时器管理**： - 使用 deleteLater() 清理 QTimer - 在渲染前检查场景有效性 - 防止因孤立定时器导致的内存泄漏"

#: ../../../_source/architecture.rst:365
msgid ""
"**Progressive Rendering**: - Deferred high-quality renders (150ms delay) - "
"Cancellable render queue - Memory-safe image scaling"
msgstr ""
"**渐进式渲染**：  \n"
"- 延迟高质量渲染（150 毫秒延迟）  \n"
"- 可取消的渲染队列  \n"
"- 内存安全的图像缩放"

#: ../../../_source/architecture.rst:370
msgid ""
"**Buffer Optimization**: - Dynamic buffer sizing based on zoom level - "
"Reduces memory usage at extreme zoom levels - Maintains visual quality "
"during panning"
msgstr "**缓冲优化**： - 根据缩放级别动态调整缓冲区大小 - 在极端缩放级别下减少内存使用 - 在平移过程中保持视觉质量"

#: ../../../_source/architecture.rst:376
msgid "Scene Graph Efficiency"
msgstr "场景图效率"

#: ../../../_source/architecture.rst:378
msgid "Qt's scene graph automatically provides:"
msgstr "Qt 的场景图会自动提供："

#: ../../../_source/architecture.rst:380
msgid "Efficient bounding box queries"
msgstr "高效的边界框查询"

#: ../../../_source/architecture.rst:381
msgid "Fast viewport intersection tests"
msgstr "快速视口相交测试"

#: ../../../_source/architecture.rst:382
msgid "Optimized item selection"
msgstr "优化的项目选择"

#: ../../../_source/architecture.rst:383
msgid "Automatic culling of invisible items"
msgstr "自动移除不可见项目"

#: ../../../_source/architecture.rst:386
msgid "Error Handling"
msgstr "错误处理"

#: ../../../_source/architecture.rst:389
msgid "Exception Hierarchy"
msgstr "异常层次结构"

#: ../../../_source/architecture.rst:413
msgid "Error Recovery"
msgstr "错误恢复"

#: ../../../_source/architecture.rst:415
msgid "Graceful error handling:"
msgstr "优雅的错误处理："

#: ../../../_source/architecture.rst:417
msgid "User-friendly error dialogs"
msgstr "用户友好的错误对话框"

#: ../../../_source/architecture.rst:418
msgid "Detailed logging for debugging"
msgstr "用于调试的详细日志记录"

#: ../../../_source/architecture.rst:419
msgid "Fallback to safe defaults"
msgstr "回退到安全默认值"

#: ../../../_source/architecture.rst:420
msgid "State preservation on errors"
msgstr "错误时的状态保留"

#: ../../../_source/architecture.rst:423
msgid "Threading Model"
msgstr "线程模型"

#: ../../../_source/architecture.rst:426
msgid "Main Thread Only"
msgstr "仅主线程"

#: ../../../_source/architecture.rst:428
msgid "Momovu uses a single-threaded model:"
msgstr "Momovu 使用单线程模型："

#: ../../../_source/architecture.rst:430
msgid "All operations on main/GUI thread"
msgstr "所有操作都在主线程/GUI线程上执行"

#: ../../../_source/architecture.rst:431
msgid "Qt event loop handles responsiveness"
msgstr "Qt 事件循环处理响应性"

#: ../../../_source/architecture.rst:432
msgid "No threading complexity"
msgstr "无需处理线程复杂性"

#: ../../../_source/architecture.rst:433
msgid "Predictable execution order"
msgstr "可预测的执行顺序"

#: ../../../_source/architecture.rst:435
msgid "Benefits:"
msgstr "优点："

#: ../../../_source/architecture.rst:437
msgid "Simplified debugging"
msgstr "简化调试"

#: ../../../_source/architecture.rst:438
msgid "No synchronization issues"
msgstr "没有同步问题"

#: ../../../_source/architecture.rst:439
msgid "Direct UI updates"
msgstr "直接更新用户界面"

#: ../../../_source/architecture.rst:440
msgid "Qt signal/slot safety"
msgstr "Qt 信号/槽 安全性"

#: ../../../_source/architecture.rst:443
msgid "Testing Architecture"
msgstr "测试架构"

#: ../../../_source/architecture.rst:446
msgid "Test Structure"
msgstr "测试结构"

#: ../../../_source/architecture.rst:448
msgid "Comprehensive test coverage:"
msgstr "全面的测试覆盖："

#: ../../../_source/architecture.rst:468
msgid "Test Approach"
msgstr "测试方法"

#: ../../../_source/architecture.rst:470
msgid "**Unit Tests**: Individual class functionality"
msgstr "**单元测试**：单个类的功能性测试"

#: ../../../_source/architecture.rst:471
msgid "**Integration Tests**: Component interaction"
msgstr "**集成测试**：组件交互"

#: ../../../_source/architecture.rst:472
msgid "**UI Tests**: User interface behavior"
msgstr "**UI测试**：用户界面行为"

#: ../../../_source/architecture.rst:473
msgid "**Fixtures**: Reusable test components"
msgstr "**固定装置**：可重复使用的测试组件"

#: ../../../_source/architecture.rst:476
msgid "Code Organization"
msgstr "代码组织"

#: ../../../_source/architecture.rst:479
msgid "Directory Structure"
msgstr "目录结构"

#: ../../../_source/architecture.rst:482
msgid ""
"For the most current project structure, run ``tree src/momovu/`` in the "
"project root."
msgstr "要查看最新的项目结构，请在项目根目录下运行 ``tree src/momovu/``。"

#: ../../../_source/architecture.rst:484
msgid "The project follows an MVP (Model-View-Presenter) architecture:"
msgstr "该项目采用 MVP（模型-视图-演示者）架构："

#: ../../../_source/architecture.rst:535
msgid "Module Responsibilities"
msgstr "模块职责"

#: ../../../_source/architecture.rst:537
msgid ""
"**models/**: Pure data storage with property change notifications, no UI "
"dependencies"
msgstr "**models/**：纯数据存储，带有属性更改通知，无 UI 依赖"

#: ../../../_source/architecture.rst:538
msgid ""
"**presenters/**: Business logic and coordination between models and views, "
"no Qt widgets"
msgstr "**presenters/**：业务逻辑以及模型和视图之间的协调，不使用 Qt 控件"

#: ../../../_source/architecture.rst:539
msgid ""
"**views/**: Qt UI components with minimal logic, delegates to presenters"
msgstr "**views/**：包含最少逻辑的 Qt UI 组件，将任务委托给演示器（presenters）"

#: ../../../_source/architecture.rst:540
msgid ""
"**views/components/**: Specialized UI components with single "
"responsibilities"
msgstr "**views/components/**：具有单一职责的专用UI组件"

#: ../../../_source/architecture.rst:541
msgid "**lib/**: Shared utilities, constants, and helper functions"
msgstr "**lib/**：共享工具、常量和辅助函数"

#: ../../../_source/architecture.rst:544
msgid "Design Decisions"
msgstr "设计决策"

#: ../../../_source/architecture.rst:547
msgid "MVP Over MVC"
msgstr "MVP 优于 MVC"

#: ../../../_source/architecture.rst:549
msgid "Chose MVP pattern because:"
msgstr "选择 MVP 模式是因为："

#: ../../../_source/architecture.rst:551
msgid "Better testability (presenters are UI-agnostic)"
msgstr "更好的可测试性（演示者与 UI 无关）"

#: ../../../_source/architecture.rst:552
msgid "Clear separation of concerns"
msgstr "职责的清晰分离"

#: ../../../_source/architecture.rst:553
msgid "Easier to mock views for testing"
msgstr "测试时更容易模拟视图"

#: ../../../_source/architecture.rst:554
msgid "More suitable for desktop applications"
msgstr "更适合桌面应用程序"

#: ../../../_source/architecture.rst:557
msgid "Component-Based UI"
msgstr "基于组件的用户界面"

#: ../../../_source/architecture.rst:559
msgid "Benefits of component architecture:"
msgstr "组件架构的优势："

#: ../../../_source/architecture.rst:561
msgid "Single responsibility per component"
msgstr "每个组件只负责一项功能"

#: ../../../_source/architecture.rst:562
msgid "Easy to test individual components"
msgstr "易于测试各个组件"

#: ../../../_source/architecture.rst:563
msgid "Reusable across different contexts"
msgstr "可在不同情境中重复使用"

#: ../../../_source/architecture.rst:564
msgid "Simplified maintenance"
msgstr "简化维护"

#: ../../../_source/architecture.rst:567
msgid "Strategy Pattern for Rendering"
msgstr "渲染的策略模式"

#: ../../../_source/architecture.rst:569
msgid "Advantages:"
msgstr "优点："

#: ../../../_source/architecture.rst:571
msgid "Easy to add new view modes"
msgstr "轻松添加新的视图模式"

#: ../../../_source/architecture.rst:572
msgid "Clean separation of rendering logic"
msgstr "渲染逻辑的清晰分离"

#: ../../../_source/architecture.rst:573
msgid "Runtime strategy selection"
msgstr "运行时策略选择"

#: ../../../_source/architecture.rst:574
msgid "Consistent interface"
msgstr "一致的接口"
