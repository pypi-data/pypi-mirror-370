# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Jeff Moe
# This file is distributed under the same license as the Momovu package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Momovu 1.2.4.dev2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-16 10:24-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../../_source/api.rst:3
msgid "API Reference"
msgstr ""

#: ../../../_source/api.rst:5
msgid ""
"This document provides a comprehensive API reference for the Momovu "
"library. All public classes, methods, and functions are documented here "
"using automatic documentation generation from the source code."
msgstr ""

#: ../../../_source/api.rst:10
msgid "Table of Contents"
msgstr ""

#: ../../../_source/api.rst:13
msgid "Core Module"
msgstr ""

#: ../../../_source/api.rst:16
msgid "Main Entry Point"
msgstr ""

#: momovu.main:1 of
msgid "Main entry point for the Momovu application."
msgstr ""

#: momovu.main.parse_arguments:1 of
msgid "Process CLI arguments with validation and help text."
msgstr ""

#: ../../../_source/api.rst
msgid "Returns"
msgstr ""

#: momovu.main.parse_arguments:3 of
msgid "Namespace with all command options"
msgstr ""

#: momovu.main.main:5 momovu.main.parse_arguments:5 momovu.main.setup_logging:5
#: of
msgid "Example"
msgstr ""

#: momovu.main.setup_logging:1 of
msgid "Configure log levels from debug/verbose CLI flags."
msgstr ""

#: ../../../_source/api.rst
msgid "Parameters"
msgstr ""

#: momovu.main.setup_logging:3 of
msgid "Namespace with debug and verbose attributes"
msgstr ""

#: momovu.main.main:1 of
msgid "Launch Momovu with error handling and proper exit codes."
msgstr ""

#: ../../../_source/api.rst
msgid "Raises"
msgstr ""

#: momovu.main.main:3 of
msgid "Always exits with appropriate code"
msgstr ""

#: ../../../_source/api.rst:24
msgid "Models"
msgstr ""

#: ../../../_source/api.rst:26
msgid ""
"The models implement the Model component of the MVP (Model-View-"
"Presenter) architecture pattern. They handle data storage and business "
"logic."
msgstr ""

#: ../../../_source/api.rst:30
msgid "Base Model"
msgstr ""

#: momovu.models.base:1 of
msgid "Base model class with property change notification support."
msgstr ""

#: momovu.models.base:3 of
msgid ""
"This module provides the foundation for all models in the MVP "
"architecture. It implements property change notifications without Qt "
"dependencies."
msgstr ""

#: momovu.models.base.BaseModel:1 momovu.models.base.PropertyChangedEvent:1
#: momovu.presenters.base.BasePresenter:1
#: momovu.presenters.configuration.ConfigurationPresenter:1
#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:1
#: momovu.views.components.dialog_manager.DialogManager:1
#: momovu.views.components.document_operations.DocumentOperationResult:1
#: momovu.views.components.margin_renderer.MarginRenderer:1
#: momovu.views.components.menu_builder.MenuBuilder:1
#: momovu.views.components.navigation_controller.NavigationController:1
#: momovu.views.components.page_positions.PagePositions:1
#: momovu.views.components.page_renderer.PageRenderer:1
#: momovu.views.components.renderers.base.BaseRenderer:1
#: momovu.views.components.scroll_manager.ScrollManager:1
#: momovu.views.components.signal_connections.SignalConnections:1
#: momovu.views.components.toggle_manager.ToggleManager:1
#: momovu.views.components.toolbar_builder.ToolbarBuilder:1
#: momovu.views.components.ui_state_manager.UIStateManager:1
#: momovu.views.components.window_setup.WindowSetup:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: momovu.models.base.PropertyChangedEvent:1 of
msgid "Event fired when a model property changes."
msgstr ""

#: momovu.models.base.PropertyChangedEvent.__init__:1 of
msgid "Initialize a property changed event."
msgstr ""

#: momovu.models.base.PropertyChangedEvent.__init__:3 of
msgid "Name of the property that changed"
msgstr ""

#: momovu.models.base.PropertyChangedEvent.__init__:4 of
msgid "Previous value of the property"
msgstr ""

#: momovu.models.base.PropertyChangedEvent.__init__:5 of
msgid "New value of the property"
msgstr ""

#: momovu.models.base.PropertyChangedEvent.__repr__:1 of
msgid "Return a developer-friendly string representation."
msgstr ""

#: momovu.models.base.BaseModel:1 of
msgid "Base class for all models with property change notification."
msgstr ""

#: momovu.models.base.BaseModel:3 of
msgid ""
"This class provides: - Property change notification mechanism - Property "
"validation framework - Observer pattern implementation (no Qt "
"dependencies)"
msgstr ""

#: momovu.models.base.BaseModel.__init__:1 of
msgid "Initialize the base model with empty observers and properties."
msgstr ""

#: momovu.models.base.BaseModel.add_observer:1 of
msgid "Add an observer for property changes."
msgstr ""

#: momovu.models.base.BaseModel.add_observer:3 of
msgid "Callback function to be called on property changes"
msgstr ""

#: momovu.models.base.BaseModel.remove_observer:1 of
msgid "Remove an observer from the notification list."
msgstr ""

#: momovu.models.base.BaseModel.remove_observer:3 of
msgid "Callback function to remove (no-op if not registered)"
msgstr ""

#: momovu.models.base.BaseModel.set_property:1 of
msgid "Set a property value with optional validation."
msgstr ""

#: momovu.models.base.BaseModel.get_property:3
#: momovu.models.base.BaseModel.set_property:3 of
msgid "Property name"
msgstr ""

#: momovu.models.base.BaseModel.set_property:4 of
msgid "New value"
msgstr ""

#: momovu.models.base.BaseModel.set_property:5 of
msgid "Whether to validate the value"
msgstr ""

#: momovu.models.base.BaseModel.set_property:7 of
msgid "True if the property was set, False if validation failed"
msgstr ""

#: momovu.models.base.BaseModel.get_property:1 of
msgid "Get a property value."
msgstr ""

#: momovu.models.base.BaseModel.get_property:4 of
msgid "Default value if property doesn't exist"
msgstr ""

#: momovu.models.base.BaseModel.get_property:6 of
msgid "The property value or default"
msgstr ""

#: momovu.models.base.BaseModel.add_validator:1 of
msgid "Add a validator for a property."
msgstr ""

#: momovu.models.base.BaseModel.add_validator:3 of
msgid "Name of the property to validate"
msgstr ""

#: momovu.models.base.BaseModel.add_validator:4 of
msgid "Function that returns True if value is valid"
msgstr ""

#: momovu.models.base.BaseModel.begin_batch_update:1 of
msgid "Start batching property changes to reduce notification overhead."
msgstr ""

#: momovu.models.base.BaseModel.end_batch_update:1 of
msgid "Flush all pending property change notifications at once."
msgstr ""

#: ../../../_source/api.rst:38
msgid "Document Model"
msgstr ""

#: momovu.models.document:1 of
msgid "PDF document model for MVP architecture."
msgstr ""

#: momovu.models.document:3 of
msgid ""
"This model handles PDF document state without any UI dependencies. It "
"stores document metadata and provides validation."
msgstr ""

#: momovu.models.configuration.ConfigurationModel:1
#: momovu.models.document.Document:1
#: momovu.models.margin_settings.MarginSettingsModel:1
#: momovu.models.view_state.ViewStateModel:1 of
msgid "Bases: :py:class:`~momovu.models.base.BaseModel`"
msgstr ""

#: momovu.models.document.Document:1 of
msgid "Model for PDF document data."
msgstr ""

#: momovu.models.document.Document:3 of
msgid "This model stores: - File path - Page count - Page sizes - Document status"
msgstr ""

#: momovu.models.document.Document:9 of
msgid ""
"It does NOT handle: - PDF rendering (that's a view concern) - PDF loading"
" (that's a presenter concern)"
msgstr ""

#: momovu.models.document.Document.__init__:1 of
msgid "Initialize empty document model with default validators."
msgstr ""

#: momovu.models.document.Document.file_path:1 of
msgid "Path to the loaded PDF file, None if no document loaded."
msgstr ""

#: momovu.models.document.Document.page_count:1 of
msgid "Total number of pages in the document (0 if not loaded)."
msgstr ""

#: momovu.models.document.Document.page_sizes:1 of
msgid "List of (width, height) tuples in points for each page."
msgstr ""

#: momovu.models.document.Document.is_loaded:1 of
msgid "True if a document is successfully loaded and ready."
msgstr ""

#: momovu.models.document.Document.error_message:1 of
msgid "Error description if document failed to load, None otherwise."
msgstr ""

#: momovu.models.document.Document.get_page_size:1 of
msgid "Get size of a specific page."
msgstr ""

#: momovu.models.document.Document.get_page_size:3
#: momovu.presenters.document.DocumentPresenter.get_page_size:3
#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:5
#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:3
#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:3
#: of
msgid "Zero-based page index"
msgstr ""

#: momovu.models.document.Document.get_page_size:5 of
msgid "Tuple of (width, height) or None if invalid index"
msgstr ""

#: momovu.models.document.Document.clear:1 of
msgid "Reset model to initial unloaded state."
msgstr ""

#: momovu.models.document.Document.update_from_document_info:1 of
msgid "Batch update all document properties after successful load."
msgstr ""

#: momovu.models.document.Document.update_from_document_info:3 of
msgid "Full path to the PDF file"
msgstr ""

#: momovu.models.document.Document.update_from_document_info:4 of
msgid "Total pages in document"
msgstr ""

#: momovu.models.document.Document.update_from_document_info:5 of
msgid "(width, height) tuples for each page"
msgstr ""

#: momovu.models.document.Document.set_error:1 of
msgid "Mark document as failed to load with error description."
msgstr ""

#: momovu.models.document.Document.set_error:3 of
msgid "Human-readable error explanation"
msgstr ""

#: momovu.models.document.Document.__repr__:1 of
msgid "Developer-friendly string representation of document state."
msgstr ""

#: ../../../_source/api.rst:46
msgid "Margin Settings Model"
msgstr ""

#: momovu.models.margin_settings:1 of
msgid "Margin settings model for MVP architecture."
msgstr ""

#: momovu.models.margin_settings:3 of
msgid "This model handles margin configuration without any UI dependencies."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel:1 of
msgid "Model for margin settings data."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel:3 of
msgid ""
"This model stores: - Safety margins (in mm and points) - Spine width - "
"Flap dimensions - Document type"
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel:9 of
msgid ""
"It does NOT handle: - Margin rendering (that's a view concern) - Margin "
"calculation (that's a presenter concern)"
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.__init__:1 of
msgid "Initialize margin settings with publishing industry defaults."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.document_type:1 of
msgid "'interior', 'cover', or 'dustjacket'."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.document_type
#: momovu.models.view_state.ViewStateModel.view_mode of
msgid "type"
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.document_type:3 of
msgid "Current document type"
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.num_pages:1 of
msgid "Get number of pages."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.safety_margin_mm:1 of
msgid "Get safety margin in millimeters."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.safety_margin_points:1 of
msgid "Get safety margin in points."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.spine_width:1 of
msgid "Get spine width."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.flap_width:1 of
msgid "Get flap width."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.flap_height:1 of
msgid "Get flap height."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.show_margins:1
#: momovu.models.view_state.ViewStateModel.show_margins:1 of
msgid "Get show margins flag."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.show_trim_lines:1
#: momovu.models.view_state.ViewStateModel.show_trim_lines:1 of
msgid "Get show trim lines flag."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.show_barcode:1
#: momovu.models.view_state.ViewStateModel.show_barcode:1 of
msgid "Get show barcode flag."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.show_fold_lines:1
#: momovu.models.view_state.ViewStateModel.show_fold_lines:1 of
msgid "Get show fold lines flag."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.show_bleed_lines:1 of
msgid "Get show bleed lines flag."
msgstr ""

#: momovu.models.margin_settings.MarginSettingsModel.__repr__:1 of
msgid "Developer-friendly string representation of margin settings."
msgstr ""

#: ../../../_source/api.rst:54
msgid "Configuration Model"
msgstr ""

#: momovu.models.configuration:1 of
msgid "Configuration model for MVP architecture."
msgstr ""

#: momovu.models.configuration.ConfigurationModel:1 of
msgid "Model for configuration data following MVP pattern."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.__init__:1 of
msgid "Initialize configuration model with validators and defaults."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_defaults:1 of
msgid "Get default configuration values."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_defaults:3 of
msgid "Dictionary of all default values"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_color:1 of
msgid "Get color configuration for an overlay type."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_color:3 of
msgid "Type of overlay (margin_overlay, barcode_area, etc.)"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_color:5 of
msgid "Dictionary with color and opacity"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_color:1 of
msgid "Set color configuration for an overlay type."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_color:3 of
msgid "Type of overlay"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_color:4 of
msgid "Color in #RRGGBB format"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_color:5 of
msgid "Opacity value (0.0-1.0)"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_line_width:1 of
msgid "Get line width for a line type."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_line_width:3 of
msgid "Type of line (fold_lines, trim_lines, etc.)"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_line_width:5 of
msgid "Line width in pixels"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_line_width:1 of
msgid "Set line width for a line type."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_line_width:3 of
msgid "Type of line"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_line_width:4 of
msgid "Width in pixels (must be positive)"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_preference:1 of
msgid "Get a preference value."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_preference:3
#: momovu.models.configuration.ConfigurationModel.set_preference:3 of
msgid "Preference key"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:4
#: momovu.models.configuration.ConfigurationModel.get_preference:4 of
msgid "Default value if key doesn't exist"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_preference:6 of
msgid "Preference value or default"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_preference:1 of
msgid "Set a preference value."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.set_value:4
#: momovu.models.configuration.ConfigurationModel.set_preference:4 of
msgid "Value to set"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_document_defaults:1 of
msgid "Get default settings for a document type."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:3
#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:3
#: momovu.models.configuration.ConfigurationModel.get_document_defaults:3
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:3
#: of
msgid "Document type (interior, cover, dustjacket)"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.get_document_defaults:5 of
msgid "Dictionary of default settings"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:1 of
msgid "Set default settings for a document type."
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:3
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:3
#: of
msgid "Document type"
msgstr ""

#: momovu.models.configuration.ConfigurationModel.set_document_defaults:4 of
msgid "Dictionary of settings"
msgstr ""

#: ../../../_source/api.rst:62
msgid "View State Model"
msgstr ""

#: momovu.models.view_state:1 of
msgid "View state model for MVP architecture."
msgstr ""

#: momovu.models.view_state:3 of
msgid "This model handles view state without any UI dependencies."
msgstr ""

#: momovu.models.view_state.ViewStateModel:1 of
msgid "Model for view state data."
msgstr ""

#: momovu.models.view_state.ViewStateModel:3 of
msgid ""
"This model stores: - Current page/page pair - View mode (single/side-by-"
"side) - Zoom level - Visibility flags"
msgstr ""

#: momovu.models.view_state.ViewStateModel:9 of
msgid ""
"It does NOT handle: - View rendering (that's a view concern) - Navigation"
" logic (that's a presenter concern)"
msgstr ""

#: momovu.models.view_state.ViewStateModel.__init__:1 of
msgid ""
"Initialize view state with default single-page mode and all overlays "
"visible."
msgstr ""

#: momovu.models.view_state.ViewStateModel.current_page:1 of
msgid "Zero-based index of the currently displayed page."
msgstr ""

#: momovu.models.view_state.ViewStateModel.view_mode:1 of
msgid "'single' or 'side_by_side'."
msgstr ""

#: momovu.models.view_state.ViewStateModel.view_mode:3 of
msgid "Current viewing mode"
msgstr ""

#: momovu.models.view_state.ViewStateModel.zoom_level:1 of
msgid "Current zoom factor where 1.0 = 100%, 2.0 = 200%, etc."
msgstr ""

#: momovu.models.view_state.ViewStateModel.show_spine_line:1 of
msgid "Get show spine line flag."
msgstr ""

#: momovu.models.view_state.ViewStateModel.is_fullscreen:1 of
msgid "Get fullscreen state."
msgstr ""

#: momovu.models.view_state.ViewStateModel.is_presentation:1 of
msgid "Get presentation mode state."
msgstr ""

#: momovu.models.view_state.ViewStateModel.is_single_page_mode:1 of
msgid "True if displaying one page at a time."
msgstr ""

#: momovu.models.view_state.ViewStateModel.is_side_by_side_mode:1 of
msgid "True if displaying page pairs side-by-side."
msgstr ""

#: momovu.models.view_state.ViewStateModel.toggle_view_mode:1 of
msgid "Switch between single page and side-by-side page pair display."
msgstr ""

#: momovu.models.view_state.ViewStateModel.__repr__:1 of
msgid "Developer-friendly string representation of view state."
msgstr ""

#: ../../../_source/api.rst:70
msgid "Presenters"
msgstr ""

#: ../../../_source/api.rst:72
msgid ""
"The presenters implement the Presenter component of the MVP architecture "
"pattern. They handle the business logic and coordinate between models and"
" views."
msgstr ""

#: ../../../_source/api.rst:76
msgid "Base Presenter"
msgstr ""

#: momovu.presenters.base:1 of
msgid "Base presenter class for MVP architecture."
msgstr ""

#: momovu.presenters.base:3 of
msgid ""
"This module provides the foundation for all presenters. Presenters handle"
" business logic and coordinate between models and views."
msgstr ""

#: momovu.presenters.base.IView:1 of
msgid "Bases: :py:class:`~typing.Protocol`"
msgstr ""

#: momovu.presenters.base.IView:1 of
msgid "Interface that all views must implement for presenter interaction."
msgstr ""

#: momovu.presenters.base.IView.update_display:1 of
msgid "Receive property updates from presenter."
msgstr ""

#: momovu.presenters.base.IView.update_display:3 of
msgid "Changed properties as key-value pairs"
msgstr ""

#: momovu.presenters.base.BasePresenter:1 of
msgid "Base class for all presenters in the MVP architecture."
msgstr ""

#: momovu.presenters.base.BasePresenter:3 of
msgid ""
"This class provides: - View reference management - Model coordination - "
"Common presenter functionality"
msgstr ""

#: momovu.presenters.base.BasePresenter.__init__:1 of
msgid "Initialize the base presenter."
msgstr ""

#: momovu.presenters.base.BasePresenter.__init__:3 of
msgid "Optional view to attach to this presenter"
msgstr ""

#: momovu.presenters.base.BasePresenter.view:1 of
msgid "Access the currently attached view instance."
msgstr ""

#: momovu.presenters.base.BasePresenter.has_view:1 of
msgid "Check if presenter has an active view connection."
msgstr ""

#: momovu.presenters.base.BasePresenter.update_view:1 of
msgid "Push property changes to attached view if present."
msgstr ""

#: momovu.presenters.base.BasePresenter.update_view:3 of
msgid "Property updates to send"
msgstr ""

#: momovu.presenters.base.BasePresenter.cleanup:1
#: momovu.presenters.document.DocumentPresenter.cleanup:1 of
msgid "Release resources and remove model observers."
msgstr ""

#: momovu.presenters.base.BasePresenter.cleanup:3 of
msgid "Subclasses override to disconnect from models and clear state."
msgstr ""

#: ../../../_source/api.rst:84
msgid "Configuration Presenter"
msgstr ""

#: momovu.presenters.configuration:1 of
msgid "Configuration presenter for MVP architecture."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter:1 of
msgid "Presenter for configuration management."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:1 of
msgid "Initialize the configuration presenter."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:3 of
msgid "Configuration model"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.__init__:4 of
msgid "Configuration manager"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.load_configuration:1
#: of
msgid "Load configuration from storage into model."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.save_configuration:1
#: of
msgid "Save model configuration to storage."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:1
#: of
msgid "Apply configuration to the application."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:3
#: of
msgid "Main window instance to apply configuration to"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.apply_configuration:4
#: of
msgid "If True, skip restoring window geometry/state"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.reset_to_defaults:1
#: of
msgid "Reset configuration to default values."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:1
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:1
#: of
msgid "Get overlay settings for a document type."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_document_overlays:5
#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:4
#: momovu.presenters.configuration.ConfigurationPresenter.get_document_overlays:5
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:4
#: of
msgid "Dictionary of overlay visibility settings"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_document_overlays:1
#: momovu.presenters.configuration.ConfigurationPresenter.save_document_overlays:1
#: of
msgid "Save overlay settings for a document type."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:1 of
msgid "Add a file to the recent files list."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:3
#: momovu.presenters.document.DocumentPresenter.load_document:3 of
msgid "Path to the PDF file"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:4 of
msgid "Type of document (interior, cover, dustjacket)"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:5 of
msgid "Number of pages (for covers/dustjackets)"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:6 of
msgid "Current page being viewed"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:7 of
msgid "Current view mode (single, side_by_side)"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:8 of
msgid "Current zoom level"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:9 of
msgid "Current overlay visibility settings"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.add_recent_file:10
#: momovu.views.components.page_strategies.base.BaseStrategy.render:4 of
msgid "Whether in presentation mode"
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.get_recent_files:1 of
msgid "Get the list of recent files."
msgstr ""

#: momovu.presenters.configuration.ConfigurationPresenter.get_recent_files:3 of
msgid "List of recent file dictionaries"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.clear_recent_files:1
#: momovu.presenters.configuration.ConfigurationPresenter.clear_recent_files:1
#: momovu.views.components.preferences_dialog.PreferencesDialog.clear_recent_files:1
#: of
msgid "Clear the recent files list."
msgstr ""

#: ../../../_source/api.rst:92
msgid "Document Presenter"
msgstr ""

#: momovu.presenters.document:1 of
msgid "Document presenter for handling PDF document logic."
msgstr ""

#: momovu.presenters.document:3 of
msgid ""
"This presenter manages PDF document operations without UI dependencies. "
"It coordinates between Document and the view layer."
msgstr ""

#: momovu.presenters.document.DocumentPresenter:1
#: momovu.presenters.margin.MarginPresenter:1
#: momovu.presenters.navigation.NavigationPresenter:1 of
msgid "Bases: :py:class:`~momovu.presenters.base.BasePresenter`"
msgstr ""

#: momovu.presenters.document.DocumentPresenter:1 of
msgid "Presenter for PDF document operations."
msgstr ""

#: momovu.presenters.document.DocumentPresenter:3 of
msgid ""
"This presenter handles: - PDF loading and error handling - Page "
"management - Document type detection - Document state coordination"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.__init__:1 of
msgid "Initialize the document presenter."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.__init__:3 of
msgid "Optional document model to use"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.set_qt_document:1 of
msgid "Set the Qt PDF document for loading operations."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.set_qt_document:3 of
msgid "The QPdfDocument instance to use"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.set_qt_document:7 of
msgid ""
"The presenter currently delegates PDF operations to QPdfDocument. This "
"design allows for future migration to alternative PDF backends without "
"affecting the view layer."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.load_document:1 of
msgid "Load a PDF document."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.load_document:5 of
msgid "True if loaded successfully"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.get_page_count:1 of
msgid "Get the number of pages in the document."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.get_page_count:3 of
msgid "Number of pages, or 0 if no document is loaded"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.get_page_size:1 of
msgid "Get the size of a specific page in points."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.get_page_size:5 of
msgid "Tuple of (width, height) in points, or None if page index is invalid"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.is_document_loaded:1 of
msgid "Check if a document is currently loaded."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.is_document_loaded:3 of
msgid "True if a document is loaded and ready for operations"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.close_document:1 of
msgid "Close the current document and reset to initial state."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.close_document:3 of
msgid ""
"This method: - Closes the Qt PDF document - Clears the model state - "
"Notifies observers of the change"
msgstr ""

#: momovu.presenters.document.DocumentPresenter.model:1 of
msgid "Access the underlying document model."
msgstr ""

#: momovu.presenters.document.DocumentPresenter.is_loaded:1 of
msgid "Backward compatibility property for is_document_loaded()."
msgstr ""

#: ../../../_source/api.rst:100
msgid "Margin Presenter"
msgstr ""

#: momovu.presenters.margin:1 of
msgid "Margin presenter for handling margin calculations and logic."
msgstr ""

#: momovu.presenters.margin:3 of
msgid ""
"This presenter manages margin operations without UI dependencies. It "
"coordinates between MarginSettingsModel and the view layer."
msgstr ""

#: momovu.presenters.margin.MarginPresenter:1 of
msgid "Presenter for margin calculations and management."
msgstr ""

#: momovu.presenters.margin.MarginPresenter:3 of
msgid ""
"This presenter handles: - Margin calculations - Trim line positioning - "
"Spine/flap calculations - Barcode area logic"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.__init__:1 of
msgid "Initialize the margin presenter."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.__init__:3 of
msgid "Optional margin settings model to use"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_document_type:1
#: momovu.views.main_window.MainWindow.set_document_type:1 of
msgid "Set the document type."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_document_type:3 of
msgid "Type of document ('interior', 'cover', 'dustjacket')"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.get_document_type:1 of
msgid "Get the current document type."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.get_document_type:3 of
msgid "The current document type ('interior', 'cover', or 'dustjacket')"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_num_pages:1 of
msgid "Update page count and recalculate spine width for cover/dustjacket."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_num_pages:3 of
msgid "Total pages in the document"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_margins:1 of
msgid "Enable or disable safety margin overlay display."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_margins:3 of
msgid "True to display margin overlays"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_trim_lines:1 of
msgid "Enable or disable trim line display at page edges."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_trim_lines:3 of
msgid "True to display trim lines"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_barcode:1 of
msgid "Enable or disable barcode area indicator on covers."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_barcode:3 of
msgid "True to display barcode area"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_fold_lines:1 of
msgid "Enable or disable spine/flap fold line display."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_fold_lines:3 of
msgid "True to display fold lines"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_bleed_lines:1 of
msgid "Enable or disable bleed line display at page edges."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.set_show_bleed_lines:3 of
msgid "True to display bleed lines"
msgstr ""

#: momovu.presenters.margin.MarginPresenter.cleanup:1
#: momovu.presenters.navigation.NavigationPresenter.cleanup:1 of
msgid "Remove model observer and release resources."
msgstr ""

#: momovu.presenters.margin.MarginPresenter.model:1 of
msgid "Access the underlying margin settings model."
msgstr ""

#: ../../../_source/api.rst:108
msgid "Navigation Presenter"
msgstr ""

#: momovu.presenters.navigation:1 of
msgid "Navigation presenter for handling page navigation logic."
msgstr ""

#: momovu.presenters.navigation:3 of
msgid ""
"This presenter manages navigation operations without UI dependencies. It "
"coordinates between ViewStateModel and the view layer."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter:1 of
msgid "Presenter for page navigation operations."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter:3 of
msgid ""
"This presenter handles: - Page navigation (next, previous, first, last) -"
" Side-by-side pair navigation - Page jumping - Navigation validation"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.__init__:1 of
msgid "Initialize the navigation presenter."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.__init__:3 of
msgid "Optional view state model to use"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.__init__:4 of
msgid "Total number of pages in the document"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.set_total_pages:1 of
msgid "Update page count and adjust current page if necessary."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.set_total_pages:3 of
msgid "New total page count"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:1 of
msgid "Navigate to a specific page."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:3 of
msgid "Zero-based page index to navigate to"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_page:5 of
msgid "True if navigation was successful"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.next_page:1 of
msgid "Advance to the next page or page pair in side-by-side mode."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.next_page:3 of
msgid "True if navigation occurred, False if already at end"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.previous_page:1 of
msgid "Move back to the previous page or page pair in side-by-side mode."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.previous_page:3 of
msgid "True if navigation occurred, False if already at start"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_first_page:1 of
msgid "Jump to the beginning of the document."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_first_page:3
#: momovu.presenters.navigation.NavigationPresenter.go_to_last_page:3 of
msgid "True if navigation occurred"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.go_to_last_page:1 of
msgid "Jump to the end of the document, handling side-by-side edge cases."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.set_view_mode:1 of
msgid "Set the view mode."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.set_view_mode:3 of
msgid "View mode ('single' or 'side_by_side')"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.toggle_view_mode:1 of
msgid "Switch between single page and side-by-side page display."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_current_page:1 of
msgid "Get the zero-based index of the currently displayed page."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_current_page:3 of
msgid "Current page index (0 to total_pages-1)"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_total_pages:1 of
msgid "Get the total page count in the document."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_total_pages:3 of
msgid "Number of pages, or 0 if no document loaded"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_current_page_pair:1 of
msgid "Get the current page pair for side-by-side mode."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_current_page_pair:3 of
msgid "Tuple of (left_page, right_page) where right_page may be None"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.is_at_first_page:1 of
msgid "Check if navigation is at the document start."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.is_at_first_page:3 of
msgid "True if on page 0"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.is_at_last_page:1 of
msgid "Check if navigation is at the document end."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.is_at_last_page:3 of
msgid "True if no more pages can be navigated forward"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_page_display_text:1 of
msgid "Get formatted text for page display."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.get_page_display_text:3 of
msgid "Formatted page display text (e.g., \"Page 1 of 10\")"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.can_go_next:1 of
msgid "Check if forward navigation is available."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.can_go_next:3 of
msgid "True unless at the last page"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.can_go_previous:1 of
msgid "Check if backward navigation is available."
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.can_go_previous:3 of
msgid "True unless at the first page"
msgstr ""

#: momovu.presenters.navigation.NavigationPresenter.model:1 of
msgid "Access the underlying view state model."
msgstr ""

#: ../../../_source/api.rst:116
msgid "Views"
msgstr ""

#: ../../../_source/api.rst:118
msgid ""
"The views implement the View component of the MVP architecture pattern. "
"They handle the user interface and display logic."
msgstr ""

#: ../../../_source/api.rst:122
msgid "Main Window"
msgstr ""

#: momovu.views.main_window:1 of
msgid "Main window for the Momovu PDF viewer application."
msgstr ""

#: momovu.views.main_window:3 of
msgid ""
"This refactored version delegates functionality to specialized "
"components, keeping the main window clean and focused on coordination "
"only."
msgstr ""

#: momovu.views.main_window.MainWindow:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QMainWindow`"
msgstr ""

#: momovu.views.main_window.MainWindow:1 of
msgid "Main window for the MVP PDF viewer application."
msgstr ""

#: momovu.views.main_window.MainWindow.__init__:1 of
msgid "Initialize the main window."
msgstr ""

#: momovu.views.main_window.MainWindow.load_pdf:1 of
msgid "Load a PDF file with error handling."
msgstr ""

#: momovu.views.main_window.MainWindow.render_current_page:1 of
msgid "Render pages using the page renderer component with error handling."
msgstr ""

#: momovu.views.main_window.MainWindow.render_current_page:3 of
msgid "If True, skip automatic fit-to-page (useful for overlay toggles)"
msgstr ""

#: momovu.views.main_window.MainWindow.update_page_label:1 of
msgid "Update the page label in the status bar and spinbox."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.on_page_number_changed:1
#: momovu.views.main_window.MainWindow.on_page_number_changed:1 of
msgid "Handle page number spinbox change."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.on_page_number_changed:3
#: momovu.views.main_window.MainWindow.on_page_number_changed:3 of
msgid "New page number (1-based)"
msgstr ""

#: momovu.views.main_window.MainWindow.on_num_pages_changed:1 of
msgid "Handle number of pages spinbox change."
msgstr ""

#: momovu.views.main_window.MainWindow.open_file_dialog:1 of
msgid "Open a file dialog to select a PDF with error handling."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_fullscreen:1 of
msgid "Toggle fullscreen mode."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_presentation:1 of
msgid "Toggle presentation mode."
msgstr ""

#: momovu.views.main_window.MainWindow.enter_presentation_mode:1 of
msgid "Enter presentation mode."
msgstr ""

#: momovu.views.main_window.MainWindow.exit_presentation_mode:1 of
msgid "Exit presentation mode."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_side_by_side:1 of
msgid "Toggle side-by-side view mode."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_margins:1 of
msgid "Toggle margin visibility."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_trim_lines:1 of
msgid "Toggle trim lines visibility."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_barcode:1 of
msgid "Toggle barcode visibility."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_fold_lines:1 of
msgid "Toggle fold lines visibility."
msgstr ""

#: momovu.views.main_window.MainWindow.toggle_bleed_lines:1 of
msgid "Toggle bleed lines visibility."
msgstr ""

#: momovu.views.main_window.MainWindow.zoom_in:1 of
msgid "Zoom in from viewport center."
msgstr ""

#: momovu.views.main_window.MainWindow.zoom_out:1 of
msgid "Zoom out from viewport center."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:1
#: momovu.views.main_window.MainWindow.fit_to_page:1 of
msgid "Fit the current page(s) to the view."
msgstr ""

#: momovu.views.main_window.MainWindow.show_shortcuts_dialog:1 of
msgid "Show the keyboard shortcuts dialog."
msgstr ""

#: momovu.views.main_window.MainWindow.show_about_dialog:1 of
msgid "Show the about dialog."
msgstr ""

#: momovu.views.main_window.MainWindow.show_go_to_page_dialog:1 of
msgid "Show the go to page dialog."
msgstr ""

#: momovu.views.main_window.MainWindow.show_spine_calculator_dialog:1 of
msgid "Show the spine width calculator dialog."
msgstr ""

#: momovu.views.main_window.MainWindow.keyPressEvent:1 of
msgid "Handle keyboard events by delegating to GraphicsView."
msgstr ""

#: momovu.views.main_window.MainWindow.keyPressEvent:3 of
msgid ""
"This exists for compatibility with tests and Qt's event system. All "
"actual handling is in GraphicsView."
msgstr ""

#: momovu.views.main_window.MainWindow.go_to_first_page:1 of
msgid "Navigate to first page."
msgstr ""

#: momovu.views.main_window.MainWindow.previous_page:1 of
msgid "Navigate to previous page."
msgstr ""

#: momovu.views.main_window.MainWindow.next_page:1 of
msgid "Navigate to next page."
msgstr ""

#: momovu.views.main_window.MainWindow.go_to_last_page:1 of
msgid "Navigate to last page."
msgstr ""

#: momovu.views.main_window.MainWindow.closeEvent:1 of
msgid "Handle window close event and cleanup resources."
msgstr ""

#: momovu.views.main_window.MainWindow.close_pdf:1 of
msgid "Close the current PDF document without exiting the application."
msgstr ""

#: momovu.views.main_window.MainWindow.show_preferences_dialog:1 of
msgid "Show the preferences dialog with proper lifecycle management."
msgstr ""

#: momovu.views.main_window.MainWindow.load_recent_file:1 of
msgid "Load a recent file from the menu."
msgstr ""

#: momovu.views.main_window.MainWindow.load_recent_file:3 of
msgid "Path to the PDF file to load"
msgstr ""

#: ../../../_source/api.rst:130
msgid "Page Item"
msgstr ""

#: momovu.views.page_item:1 of
msgid "PDF page item for MVP viewer - renders dynamically based on zoom level."
msgstr ""

#: momovu.views.page_item.PageItem:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QGraphicsItem`"
msgstr ""

#: momovu.views.page_item.PageItem:1 of
msgid "PDF page graphics item that renders dynamically based on zoom level."
msgstr ""

#: momovu.views.page_item.PageItem:3 of
msgid ""
"This is a simplified version of PageItem specifically for the MVP viewer."
" It renders the PDF page at the appropriate resolution for the current "
"zoom level."
msgstr ""

#: momovu.views.page_item.PageItem.__init__:1 of
msgid "Initialize the PDF page item."
msgstr ""

#: momovu.views.page_item.PageItem.__init__:3 of
msgid "The PDF document"
msgstr ""

#: momovu.views.page_item.PageItem.__init__:4 of
msgid "Zero-based page number"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:5
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:5
#: momovu.views.page_item.PageItem.__init__:5 of
msgid "Page width in points"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:6
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:6
#: momovu.views.page_item.PageItem.__init__:6 of
msgid "Page height in points"
msgstr ""

#: momovu.views.page_item.PageItem.boundingRect:1 of
msgid "Define item's scene space boundaries for Qt rendering."
msgstr ""

#: momovu.views.page_item.PageItem.paint:1 of
msgid "Render only the visible portion of the PDF page for optimal performance."
msgstr ""

#: momovu.views.page_item.PageItem.paint:3 of
msgid "Uses caching and buffer zones for smooth panning experience."
msgstr ""

#: momovu.views.page_item.PageItem.cleanup:1 of
msgid "Clean up resources when page item is being removed."
msgstr ""

#: momovu.views.page_item.PageItem.cleanup:3 of
msgid ""
"This is called when the scene is cleared or the item is removed. Ensures "
"timers are stopped to prevent crashes."
msgstr ""

#: ../../../_source/api.rst:138
msgid "View Components"
msgstr ""

#: ../../../_source/api.rst:140
msgid "These components handle specific aspects of the view layer."
msgstr ""

#: ../../../_source/api.rst:143
msgid "About Dialog"
msgstr ""

#: momovu.views.components.about_dialog:1 of
msgid "About dialog component for the Momovu application."
msgstr ""

#: momovu.views.components.about_dialog:3 of
msgid ""
"This module provides a dedicated About dialog that displays application "
"information, version details, and links to resources."
msgstr ""

#: momovu.lib.shortcuts_dialog.ShortcutsDialog:1
#: momovu.views.components.about_dialog.AboutDialog:1
#: momovu.views.components.preferences_dialog.PreferencesDialog:1
#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog:1
#: of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QDialog`"
msgstr ""

#: momovu.views.components.about_dialog.AboutDialog:1 of
msgid "About dialog showing application information and version details."
msgstr ""

#: momovu.views.components.about_dialog.AboutDialog.__init__:1 of
msgid "Initialize the About dialog."
msgstr ""

#: momovu.views.components.about_dialog.AboutDialog.__init__:3
#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:3
#: of
msgid "Parent widget for the dialog"
msgstr ""

#: ../../../_source/api.rst:151
msgid "Cleanup Coordinator"
msgstr ""

#: momovu.views.components.cleanup_coordinator:1 of
msgid "Cleanup coordinator for managing resource cleanup during shutdown."
msgstr ""

#: momovu.views.components.cleanup_coordinator:3 of
msgid ""
"This component handles the orderly cleanup of all resources when the main"
" window closes or encounters an error during initialization. It ensures "
"components are cleaned up in the correct order to prevent crashes from "
"dangling references."
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:1 of
msgid "Coordinates cleanup of all components during shutdown."
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator:3 of
msgid ""
"This class manages the cleanup process in phases to ensure proper "
"ordering and prevent crashes from dangling signal connections or "
"references."
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.__init__:1 of
msgid "Initialize the cleanup coordinator."
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.__init__:3 of
msgid "Reference to the main window containing components to clean up"
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.cleanup_resources:1
#: of
msgid "Execute phased shutdown sequence to safely release all resources."
msgstr ""

#: momovu.views.components.cleanup_coordinator.CleanupCoordinator.cleanup_resources:3
#: of
msgid ""
"Cleanup phases: 1. Disconnect signals (prevents crashes from dangling "
"connections) 2. Clean up view components (they reference other "
"components) 3. Clear graphics scene 4. Clean up PDF document 5. Clean up "
"presenters"
msgstr ""

#: ../../../_source/api.rst:159
msgid "Dialog Manager"
msgstr ""

#: momovu.views.components.dialog_manager:1 of
msgid "Dialog manager component for handling all dialog operations."
msgstr ""

#: momovu.views.components.dialog_manager:3 of
msgid ""
"This component follows the Single Responsibility Principle by "
"centralizing all dialog-related functionality, making the main window "
"cleaner and more focused."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager:1 of
msgid "Manages all dialog operations for the application."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager:3 of
msgid ""
"This class encapsulates dialog creation, display, and result handling, "
"providing a clean interface for the main window to use dialogs without "
"dealing with implementation details."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.__init__:1 of
msgid "Initialize the dialog manager."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.__init__:3 of
msgid "The parent widget (typically MainWindow) for dialogs"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.set_file_load_callback:1
#: of
msgid "Register handler for file selection from open dialog."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.set_file_load_callback:3
#: of
msgid "Function that receives the selected PDF file path"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.set_page_navigation_callback:1
#: of
msgid "Register handler for go-to-page dialog results."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.set_page_navigation_callback:3
#: of
msgid "Function that receives the target page number (1-based)"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_open_file_dialog:1
#: of
msgid "Display PDF file selection dialog and trigger callback on selection."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_shortcuts_dialog:1
#: of
msgid "Display the keyboard shortcuts reference dialog."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_about_dialog:1 of
msgid "Display application information and credits dialog."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:1
#: of
msgid "Display page number input dialog and trigger navigation callback."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:3
#: of
msgid "Currently displayed page (1-based)"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:4
#: of
msgid "Maximum page number allowed"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog:5
#: of
msgid "False prevents dialog display"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:1
#: of
msgid "Extract page info from presenters and show go-to-page dialog."
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:3
#: of
msgid "Source for document loaded state"
msgstr ""

#: momovu.views.components.dialog_manager.DialogManager.show_go_to_page_dialog_with_presenters:4
#: of
msgid "Source for current/total page counts"
msgstr ""

#: ../../../_source/api.rst:167
msgid "Document Operations"
msgstr ""

#: momovu.views.components.document_operations:1 of
msgid "Document operation utilities for the Main Window."
msgstr ""

#: momovu.views.components.document_operations:3 of
msgid ""
"This module contains pure functions and utilities for document "
"operations, extracted from the Main Window to reduce complexity and "
"improve testability."
msgstr ""

#: momovu.views.components.document_operations.extract_filename_from_path:1 of
msgid "Get filename component from full path."
msgstr ""

#: momovu.views.components.document_operations.extract_filename_from_path:3 of
msgid "Full or relative path"
msgstr ""

#: momovu.views.components.document_operations.extract_filename_from_path:5 of
msgid "Filename with extension (e.g., 'document.pdf')"
msgstr ""

#: momovu.views.components.document_operations.format_window_title:1 of
msgid "Build window title showing app name and current document."
msgstr ""

#: momovu.views.components.document_operations.format_window_title:3 of
msgid "Application name (e.g., 'Momovu')"
msgstr ""

#: momovu.views.components.document_operations.format_window_title:4 of
msgid "Current document name to append"
msgstr ""

#: momovu.views.components.document_operations.format_window_title:6 of
msgid "'AppName' or 'AppName - filename.pdf'"
msgstr ""

#: momovu.views.components.document_operations.should_show_error_dialog:1 of
msgid "Filter out system exits from user-facing error dialogs."
msgstr ""

#: momovu.views.components.document_operations.should_show_error_dialog:3 of
msgid "Exception to evaluate"
msgstr ""

#: momovu.views.components.document_operations.should_show_error_dialog:5 of
msgid "False for KeyboardInterrupt/SystemExit, True otherwise"
msgstr ""

#: momovu.views.components.document_operations.create_error_message:1 of
msgid "Format exception into readable error message for users."
msgstr ""

#: momovu.views.components.document_operations.create_error_message:3 of
msgid "Exception to format"
msgstr ""

#: momovu.views.components.document_operations.create_error_message:4 of
msgid "Optional location/operation description"
msgstr ""

#: momovu.views.components.document_operations.create_error_message:6 of
msgid "Human-readable error description"
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult:1 of
msgid "Result of a document operation with success/failure information."
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:1
#: of
msgid "Initialize the result."
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:3
#: of
msgid "Whether the operation succeeded"
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:4
#: of
msgid "Optional message about the operation"
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult.__init__:5
#: of
msgid "Optional data returned by the operation"
msgstr ""

#: momovu.views.components.document_operations.DocumentOperationResult.__bool__:1
#: of
msgid "Enable 'if result:' syntax to check success."
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:1 of
msgid "Wrap operation with try/catch and structured result."
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:3 of
msgid "Description for logging"
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:4 of
msgid "Callable to execute"
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:5 of
msgid "Positional arguments for operation"
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:6 of
msgid "Keyword arguments for operation"
msgstr ""

#: momovu.views.components.document_operations.safe_document_operation:8 of
msgid "Result object with success flag and error details"
msgstr ""

#: ../../../_source/api.rst:175
msgid "Graphics View"
msgstr ""

#: momovu.views.components.graphics_view:1 of
msgid ""
"Custom graphics view component for PDF viewing with mouse and keyboard "
"support."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QGraphicsView`"
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView:1 of
msgid "Custom graphics view with mouse wheel and DIRECT keyboard support."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.__init__:1 of
msgid "Initialize the graphics view."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.__init__:3 of
msgid "Reference to the main window for event handling"
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:1 of
msgid "Central keyboard event handler for all viewer shortcuts."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:3 of
msgid ""
"Handles navigation, zoom, and UI toggle shortcuts. Arrow keys adapt based"
" on zoom level (pan when zoomed, navigate otherwise)."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.keyPressEvent:6 of
msgid ""
"NOTE: When adding or modifying keyboard shortcuts here, remember to "
"update the shortcuts dialog in "
"lib/shortcuts_dialog.py::_populate_shortcuts()"
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:1 of
msgid "Handle mouse wheel for zoom, pan, or page navigation."
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:3 of
msgid ""
"Behavior depends on modifiers and zoom level: - Ctrl + Scroll: Zoom at "
"mouse position - Shift + Scroll: Horizontal pan (at any zoom level) - "
"When zoomed in (>1.05x): Vertical pan - When not zoomed: Page navigation"
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.wheelEvent:9 of
msgid "Qt wheel event containing delta and modifiers"
msgstr ""

#: momovu.views.components.graphics_view.GraphicsView.cleanup:1 of
msgid "Release scene connection and clear references (idempotent)."
msgstr ""

#: ../../../_source/api.rst:183
msgid "Margin Renderer"
msgstr ""

#: momovu.views.components.margin_renderer:1 of
msgid "Margin rendering component for the PDF viewer."
msgstr ""

#: momovu.views.components.margin_renderer:3 of
msgid ""
"This refactored version delegates to specialized renderers for each "
"document type, following the Single Responsibility Principle and keeping "
"the file under 400 lines."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer:1 of
msgid ""
"Component responsible for coordinating margin, trim line, and overlay "
"rendering."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer:3 of
msgid ""
"This class delegates actual rendering to specialized renderers based on "
"document type, following the Single Responsibility Principle."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:1 of
msgid "Initialize the margin renderer."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:3
#: momovu.views.components.page_renderer.PageRenderer.__init__:3
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:3
#: momovu.views.components.renderers.base.BaseRenderer.__init__:3
#: momovu.views.components.renderers.cover.CoverRenderer.__init__:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:3
#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:3 of
msgid "The Qt graphics scene to render to"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:4
#: momovu.views.components.page_renderer.PageRenderer.__init__:6
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:6 of
msgid "Presenter for margin operations"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.__init__:5
#: momovu.views.components.page_renderer.PageRenderer.__init__:8
#: momovu.views.components.renderers.base.BaseRenderer.__init__:4
#: momovu.views.components.renderers.cover.CoverRenderer.__init__:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:4
#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:4 of
msgid "Optional configuration manager for reading user preferences"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:1
#: of
msgid "Render all enabled overlays on top of page content."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:3
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:3 of
msgid "Page left edge in scene coordinates"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:4
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:4 of
msgid "Page top edge in scene coordinates"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.draw_page_overlays:7
#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:7
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:7
#: of
msgid "Optional edge to skip when drawing trim lines (\"left\" or \"right\")"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.set_show_fold_lines:1
#: of
msgid "Enable/disable spine and flap fold indicators."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.set_show_fold_lines:3
#: of
msgid "True to display fold lines on covers/dustjackets"
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.clear_renderer_caches:1
#: of
msgid "Clear cached configuration values in all renderers."
msgstr ""

#: momovu.views.components.margin_renderer.MarginRenderer.clear_renderer_caches:3
#: momovu.views.components.page_renderer.PageRenderer.clear_renderer_caches:3
#: momovu.views.components.renderers.base.BaseRenderer.clear_caches:3 of
msgid ""
"This should be called when configuration changes to ensure new values are"
" loaded."
msgstr ""

#: ../../../_source/api.rst:191
msgid "Menu Builder"
msgstr ""

#: momovu.views.components.menu_builder:1 of
msgid "Menu builder component for the main window."
msgstr ""

#: momovu.views.components.menu_builder:3 of
msgid "This component handles all menu creation and setup."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder:1 of
msgid "Component responsible for building and managing the menu bar."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.__init__:1 of
msgid "Initialize the menu builder."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.__init__:3 of
msgid "The main window to add menus to"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.build_menus:1 of
msgid "Create and populate all application menus in the menu bar."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:1 of
msgid "Set initial checked states for View menu overlay toggles."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:3 of
msgid "Whether margins should be visible initially"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:4 of
msgid "Whether trim lines should be visible initially"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:5 of
msgid "Whether barcode area should be visible initially"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:6 of
msgid "Whether fold lines should be visible initially"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_initial_states:7 of
msgid "Whether bleed lines should be visible initially"
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_view_menu_for_document_type:1
#: of
msgid "Show/hide View menu items based on what's relevant for the document type."
msgstr ""

#: momovu.views.components.menu_builder.MenuBuilder.update_view_menu_for_document_type:3
#: momovu.views.components.toggle_manager.ToggleManager.set_document_type:3 of
msgid "One of 'interior', 'cover', or 'dustjacket'"
msgstr ""

#: ../../../_source/api.rst:199
msgid "Navigation Controller"
msgstr ""

#: momovu.views.components.navigation_controller:1 of
msgid ""
"Centralized navigation controller - single source of truth for ALL "
"navigation."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController:1 of
msgid "Controls all navigation in the application."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController:3 of
msgid ""
"This is the SINGLE place where navigation happens. No more scattered "
"methods, no more event chains."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.__init__:1
#: of
msgid "Initialize the navigation controller."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.__init__:3
#: momovu.views.components.state_saver.StateSaver.__init__:3
#: momovu.views.components.toggle_manager.ToggleManager.__init__:3
#: momovu.views.components.window_setup.WindowSetup.__init__:3 of
msgid "Reference to the main window"
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.scroll_controller:1
#: of
msgid "Lazy initialization of scroll controller."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_first:1
#: of
msgid "Navigate to the first page."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_previous:1
#: of
msgid "Navigate to the previous page or page pair in side-by-side mode."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_next:1
#: of
msgid "Navigate to the next page or page pair in side-by-side mode."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_last:1
#: of
msgid "Navigate to the last page."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_to_page:1
#: of
msgid "Navigate to a specific page by number."
msgstr ""

#: momovu.views.components.navigation_controller.NavigationController.navigate_to_page:3
#: of
msgid "1-based page number to navigate to"
msgstr ""

#: ../../../_source/api.rst:207
msgid "Page Positions"
msgstr ""

#: momovu.views.components.page_positions:1 of
msgid "Page position calculator for determining page locations in the view."
msgstr ""

#: momovu.views.components.page_positions.PagePositions:1 of
msgid "Calculates page positions for scrolling and navigation."
msgstr ""

#: momovu.views.components.page_positions.PagePositions.__init__:1 of
msgid "Initialize the calculator."
msgstr ""

#: momovu.views.components.page_positions.PagePositions.__init__:3
#: momovu.views.components.page_renderer.PageRenderer.__init__:5
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:5
#: momovu.views.components.scroll_manager.ScrollManager.__init__:4 of
msgid "Presenter for document operations"
msgstr ""

#: momovu.views.components.page_positions.PagePositions.__init__:4
#: momovu.views.components.page_renderer.PageRenderer.__init__:7
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:7
#: momovu.views.components.scroll_manager.ScrollManager.__init__:5 of
msgid "Presenter for navigation operations"
msgstr ""

#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:1
#: of
msgid "Find center point of page in vertically stacked layout."
msgstr ""

#: momovu.views.components.page_positions.PagePositions.calculate_single_page_position:5
#: of
msgid "(x, y) scene coordinates of page center"
msgstr ""

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:1
#: of
msgid "Find center point of page pair containing the given page."
msgstr ""

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:3
#: of
msgid "Book layout: page 1 alone, then pairs (2-3), (4-5), etc."
msgstr ""

#: momovu.views.components.page_positions.PagePositions.calculate_page_pair_position:7
#: of
msgid "(x, y) scene coordinates of pair center"
msgstr ""

#: ../../../_source/api.rst:215
msgid "Page Renderer"
msgstr ""

#: momovu.views.components.page_renderer:1 of
msgid "Page rendering component for the PDF viewer."
msgstr ""

#: momovu.views.components.page_renderer:3 of
msgid ""
"This refactored version uses the Strategy pattern to delegate rendering "
"to specialized strategies based on the view mode and document type."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer:1 of
msgid "Component responsible for coordinating page rendering."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer:3 of
msgid ""
"This class uses the Strategy pattern to delegate actual rendering to "
"specialized strategies based on the current view mode."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.__init__:1 of
msgid "Initialize the page renderer."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.__init__:4
#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:4 of
msgid "The Qt PDF document"
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:1 of
msgid "Select and execute the appropriate rendering strategy."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:3 of
msgid ""
"Strategy selection based on: - Presentation mode → single/pair only - "
"Interior + side-by-side → all pairs stacked - Interior + single → all "
"pages stacked - Cover/dustjacket → single page only"
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.render_current_page:9 of
msgid "Optional zoom adjustment after rendering"
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.set_presentation_mode:1
#: of
msgid "Enable/disable presentation mode rendering."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.set_presentation_mode:3
#: of
msgid "True for single page/pair only, False for stacked pages"
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.set_show_fold_lines:1 of
msgid "Control spine/flap fold line visibility."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.set_show_fold_lines:3 of
msgid "True to display fold indicators on covers/dustjackets"
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.clear_renderer_caches:1
#: of
msgid "Clear cached configuration values in renderers."
msgstr ""

#: momovu.views.components.page_renderer.PageRenderer.cleanup:1 of
msgid "Release all strategy instances and clear references (idempotent)."
msgstr ""

#: ../../../_source/api.rst:223
msgid "Page SpinBox"
msgstr ""

#: momovu.views.components.page_spinbox:1 of
msgid "Custom QSpinBox that properly handles navigation keys."
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox:1 of
msgid "Bases: :py:class:`~PySide6.QtWidgets.QSpinBox`"
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox:1 of
msgid ""
"Custom spinbox for page navigation that doesn't interfere with document "
"navigation keys."
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.__init__:1 of
msgid "Initialize the page spinbox."
msgstr ""

#: momovu.lib.shortcuts_dialog.ShortcutsDialog.__init__:3
#: momovu.views.components.page_spinbox.PageSpinBox.__init__:3
#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:4 of
msgid "Parent widget"
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.set_main_window:1 of
msgid "Connect to main window for delegating navigation keys."
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.set_main_window:3 of
msgid "MainWindow instance with graphics_view"
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:1 of
msgid "Intercept navigation keys and delegate to graphics view."
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:3 of
msgid ""
"Allows arrow keys, page up/down, etc. to navigate document instead of "
"changing spinbox value."
msgstr ""

#: momovu.views.components.page_spinbox.PageSpinBox.keyPressEvent:6 of
msgid "Qt keyboard event"
msgstr ""

#: ../../../_source/api.rst:231
msgid "Preferences Dialog"
msgstr ""

#: momovu.views.components.preferences_dialog:1 of
msgid "Preferences dialog for Momovu application."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog:1 of
msgid "Preferences dialog following PySide6 best practices."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:1 of
msgid "Initialize the preferences dialog."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.__init__:3 of
msgid "Configuration manager instance"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.setup_ui:1 of
msgid "Set up the dialog UI."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_general_tab:1
#: of
msgid "Create the general settings tab."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_general_tab:3
#: of
msgid "Widget containing general settings"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_colors_tab:1
#: of
msgid "Create the colors settings tab."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_colors_tab:3
#: of
msgid "Widget containing color settings"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_recent_files_tab:1
#: of
msgid "Create the recent files management tab."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_recent_files_tab:3
#: of
msgid "Widget containing recent files list"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:1
#: of
msgid "Create a color picker button with preview."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:3
#: of
msgid "Initial color"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.create_color_button:5
#: of
msgid "Color picker button"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:1
#: of
msgid "Update button appearance to show color."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:3
#: of
msgid "Button to update"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.update_color_button:4
#: of
msgid "Color to display"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.choose_color:1
#: of
msgid "Open color dialog for the specified overlay type."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.choose_color:3
#: of
msgid "Type of overlay to set color for"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.apply_colorblind_preset:1
#: of
msgid "Apply a colorblind preset to all color settings."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.apply_colorblind_preset:3
#: of
msgid "Name of the preset to apply (protanopia, deuteranopia, or tritanopia)"
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.on_recent_file_selection_changed:1
#: of
msgid "Handle recent file selection change."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.remove_selected_file:1
#: of
msgid "Remove the selected file from recent files."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.reset_to_defaults:1
#: of
msgid "Reset all settings to defaults with confirmation."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.load_settings:1
#: of
msgid "Load current settings into the dialog."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.load_recent_files:1
#: of
msgid "Load recent files into the list widget."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.save_settings:1
#: of
msgid "Save settings from the dialog using batch update to prevent signal spam."
msgstr ""

#: momovu.views.components.preferences_dialog.PreferencesDialog.accept:1 of
msgid "Accept the dialog and save settings with proper cleanup."
msgstr ""

#: ../../../_source/api.rst:239
msgid "Scroll Manager"
msgstr ""

#: momovu.views.components.scroll_manager:1 of
msgid "Scroll controller for managing view scrolling to pages."
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager:1 of
msgid "Manages scrolling the graphics view to show specific pages."
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager.__init__:1 of
msgid "Initialize the scroll controller."
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager.__init__:3 of
msgid "The QGraphicsView to control"
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page:1
#: of
msgid "Center view on current page in stacked single-page layout."
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page_pair:1
#: of
msgid "Center view on current page pair in stacked side-by-side layout."
msgstr ""

#: momovu.views.components.scroll_manager.ScrollManager.scroll_to_current_page_pair:3
#: of
msgid "Follows book convention: page 1 alone, then pairs (2-3), (4-5), etc."
msgstr ""

#: ../../../_source/api.rst:247
msgid "Signal Connections"
msgstr ""

#: momovu.views.components.signal_connections:1 of
msgid "Signal connector component for managing all signal-slot connections."
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections:1 of
msgid "Manages all signal-slot connections for the main window."
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections:3 of
msgid ""
"This class tracks all connections for safe cleanup to prevent crashes "
"from dangling signal connections."
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections.__init__:1 of
msgid "Initialize the signal connector."
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections.__init__:3 of
msgid "The main window with signals to connect"
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections.connect_all_signals:1
#: of
msgid "Establish all Qt signal-slot connections for the UI."
msgstr ""

#: momovu.views.components.signal_connections.SignalConnections.cleanup:1 of
msgid ""
"Disconnect all tracked signals to prevent dangling references "
"(idempotent)."
msgstr ""

#: ../../../_source/api.rst:255
msgid "Spine Width Calculator Dialog"
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog:1 of
msgid "Spine width calculator dialog for book production."
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog:3 of
msgid ""
"This dialog allows users to calculate spine width based on page count and"
" document type (cover or dustjacket)."
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:1
#: of
msgid "Format spine width removing unnecessary trailing zeros."
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:5
#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:3
#: of
msgid "Spine width in millimeters"
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.format_spine_width:5
#: of
msgid "Formatted string without trailing zeros"
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:1
#: of
msgid "Calculate spine width for covers using Lulu's formula."
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:3
#: of
msgid "Number of pages in the book"
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.calculate_cover_spine_width:5
#: of
msgid "Spine width in millimeters, rounded to 3 decimal places"
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog:1
#: of
msgid "Dialog for calculating spine width based on page count and document type."
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:1
#: of
msgid "Initialize the spine width calculator dialog."
msgstr ""

#: momovu.views.components.spine_width_calculator_dialog.SpineWidthCalculatorDialog.__init__:4
#: of
msgid "Initial page count to display"
msgstr ""

#: ../../../_source/api.rst:263
msgid "State Saver"
msgstr ""

#: momovu.views.components.state_saver:1 of
msgid "State saver component for automatically saving document state changes."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager:1
#: momovu.views.components.state_saver.StateSaver:1
#: momovu.views.components.zoom_controller.ZoomController:1 of
msgid "Bases: :py:class:`~PySide6.QtCore.QObject`"
msgstr ""

#: momovu.views.components.state_saver.StateSaver:1 of
msgid "Automatically saves document state when it changes."
msgstr ""

#: momovu.views.components.state_saver.StateSaver:3 of
msgid ""
"This component monitors various state changes and updates the recent file"
" entry to ensure all state is persisted."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.__init__:1 of
msgid "Initialize the state saver."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.__del__:1 of
msgid "Cleanup when the state saver is destroyed."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.connect_signals:1 of
msgid "Connect to all signals that indicate state changes."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.save_state:1 of
msgid "Save the current document state to recent files."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.save_state:3 of
msgid "This debounces rapid changes to avoid excessive saves."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.disable_saves:1 of
msgid "Temporarily disable state saving."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.enable_saves:1 of
msgid "Re-enable state saving."
msgstr ""

#: momovu.views.components.state_saver.StateSaver.save_state_immediate:1 of
msgid "Save the current document state immediately without debouncing."
msgstr ""

#: ../../../_source/api.rst:271
msgid "Toggle Manager"
msgstr ""

#: momovu.views.components.toggle_manager:1 of
msgid "Toggle manager component for handling all UI toggle operations."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager:1 of
msgid "Manages all toggle operations for the main window."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.__init__:1 of
msgid "Initialize the toggle manager."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_fullscreen:1 of
msgid "Switch between fullscreen and windowed display modes."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_presentation:1
#: of
msgid "Switch between presentation mode (fullscreen, no UI) and normal mode."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.enter_presentation_mode:1
#: of
msgid "Enable presentation mode with fullscreen display and hidden UI elements."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.exit_presentation_mode:1
#: of
msgid "Return to normal viewing mode with visible UI elements."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_side_by_side:1
#: of
msgid ""
"Switch between single page and side-by-side page display for interior "
"documents."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_margins:1 of
msgid "Show or hide the safety margin overlays on pages."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_trim_lines:1 of
msgid "Show or hide the trim/cut lines at page edges."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_barcode:1 of
msgid "Show or hide the barcode area indicator on cover/dustjacket documents."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_fold_lines:1 of
msgid "Show or hide the spine/flap fold lines on cover/dustjacket documents."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.toggle_bleed_lines:1 of
msgid "Show or hide the bleed lines at page edges on cover/dustjacket documents."
msgstr ""

#: momovu.views.components.toggle_manager.ToggleManager.set_document_type:1 of
msgid "Change the document type and update UI accordingly."
msgstr ""

#: ../../../_source/api.rst:279
msgid "Toolbar Builder"
msgstr ""

#: momovu.views.components.toolbar_builder:1 of
msgid "Toolbar builder component for the main window."
msgstr ""

#: momovu.views.components.toolbar_builder:3 of
msgid "This component handles toolbar creation and setup."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder:1 of
msgid "Component responsible for building and managing the toolbar."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.__init__:1 of
msgid "Initialize the toolbar builder."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.__init__:3 of
msgid "The main window to add toolbar to"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:1 of
msgid "Create main toolbar with navigation, page controls, and zoom actions."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:3 of
msgid "Menu actions to reuse in toolbar (e.g., 'open')"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.build_toolbar:4 of
msgid "Presenter for determining document-specific controls"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:1 of
msgid "Retrieve a toolbar widget by its identifier."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:3 of
msgid "Widget identifier (e.g., 'page_spinbox', 'num_pages_spinbox')"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.get_widget:5 of
msgid "The widget if found, None otherwise"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:1
#: of
msgid "Show/hide toolbar controls based on document type."
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:3
#: of
msgid ""
"Visibility rules: - Interior: Shows page navigation and current page "
"spinbox - Cover/Dustjacket: Shows page count spinbox for spine "
"calculation - Navigation buttons only appear for multi-page interior "
"documents"
msgstr ""

#: momovu.views.components.toolbar_builder.ToolbarBuilder.update_toolbar_visibility:8
#: of
msgid "Deprecated parameter, kept for compatibility"
msgstr ""

#: ../../../_source/api.rst:287
msgid "UI State Manager"
msgstr ""

#: momovu.views.components.ui_state_manager:1 of
msgid "UI state manager component for handling presentation and fullscreen modes."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager:1 of
msgid "Manages UI state transitions like presentation and fullscreen modes."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.__init__:1 of
msgid "Initialize the UI state manager."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.__init__:3 of
msgid "The main window to manage"
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.toggle_fullscreen:1
#: of
msgid "Switch between fullscreen and maximized window states."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.toggle_presentation:1
#: of
msgid "Switch between presentation mode and normal viewing mode."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.enter_presentation_mode:1
#: of
msgid "Hide all UI chrome and enter fullscreen for distraction-free viewing."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.exit_presentation_mode:1
#: of
msgid "Restore UI elements and return to windowed viewing mode."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:1
#: of
msgid "Set initial window display state based on startup parameters."
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:3
#: of
msgid "True to start in fullscreen mode"
msgstr ""

#: momovu.views.components.ui_state_manager.UIStateManager.apply_window_state:4
#: of
msgid "True to start in presentation mode"
msgstr ""

#: ../../../_source/api.rst:295
msgid "Window Setup"
msgstr ""

#: momovu.views.components.window_setup:1 of
msgid "Window initializer component for handling complex initialization."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup:1 of
msgid "Handles complex initialization for the main window."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.__init__:1 of
msgid "Initialize the window initializer."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.init_models_and_presenters:1
#: of
msgid "Create MVP components and wire them together."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:1 of
msgid "Cache constructor parameters for deferred initialization."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:3 of
msgid "Initial PDF to load"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:4 of
msgid "Page count for spine width calculation"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:5 of
msgid "One of 'interior', 'cover', 'dustjacket'"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:6 of
msgid "Enable page pair view"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:7 of
msgid "Display safety margins"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:8 of
msgid "Display trim indicators"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:9 of
msgid "Display barcode area"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:10 of
msgid "Display spine/flap folds"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:11 of
msgid "Display bleed lines"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:12 of
msgid "Launch in presentation mode"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.store_init_params:13 of
msgid "Launch fullscreen"
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.apply_initial_settings:1 of
msgid "Configure UI state from stored initialization parameters."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.initialize_document:1 of
msgid "Load initial PDF and apply window display mode."
msgstr ""

#: momovu.views.components.window_setup.WindowSetup.create_action_aliases:1 of
msgid "Map builder-created actions to main window attributes for easy access."
msgstr ""

#: ../../../_source/api.rst:303
msgid "Zoom Controller"
msgstr ""

#: momovu.views.components.zoom_controller:1 of
msgid "Zoom controller component for managing view zoom operations."
msgstr ""

#: momovu.views.components.zoom_controller:3 of
msgid ""
"This component encapsulates all zoom-related functionality, providing a "
"clean interface for zoom operations while maintaining separation of "
"concerns."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController:1 of
msgid "Controls all zoom operations for the PDF viewer."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController:3 of
msgid ""
"This class manages zoom in/out operations and fit-to-page functionality, "
"handling the complex logic for different document types and view modes. "
"It follows the Single Responsibility Principle by focusing solely on "
"zoom-related operations."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.__init__:1 of
msgid "Initialize the zoom controller."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.__init__:3 of
msgid "The graphics view to control zoom for"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.__init__:4 of
msgid "The graphics scene containing the content"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.__init__:3
#: momovu.views.components.zoom_controller.ZoomController.__init__:5 of
msgid "Optional parent QObject for proper cleanup"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:1
#: of
msgid "Set callbacks for accessing presenters."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:3
#: of
msgid ""
"This allows the controller to access presenter state without creating "
"tight coupling."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:6
#: of
msgid "Callback to get margin presenter"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:7
#: of
msgid "Callback to get navigation presenter"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_presenter_callbacks:8
#: of
msgid "Callback to get document presenter"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_update_callback:1
#: of
msgid "Set callback for updating UI after zoom operations."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_update_callback:3
#: of
msgid "Callback to update page label"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.zoom_in:1 of
msgid "Increase zoom level by the standard zoom factor from viewport center."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.zoom_out:1 of
msgid "Decrease zoom level by the standard zoom factor from viewport center."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.get_current_zoom:1 of
msgid "Get the current zoom level."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.get_current_zoom:3 of
msgid "Current zoom level (1.0 = 100%)"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:1 of
msgid "Set the internal zoom level without applying scale."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:3 of
msgid ""
"Used by GraphicsView after it performs mouse-centered zoom. This method "
"only updates the tracking value."
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:6 of
msgid "The new zoom level (1.0 = 100%)"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.set_zoom_level:7 of
msgid "Whether to emit the zoom_changed signal"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:3 of
msgid ""
"This method handles different fitting strategies based on: - Document "
"type (interior/cover/dustjacket) - View mode (single/side-by-side)"
msgstr ""

#: momovu.views.components.zoom_controller.ZoomController.fit_to_page:7 of
msgid ""
"For interior documents with all pages rendered, this fits only the "
"current page in view, not all pages."
msgstr ""

#: ../../../_source/api.rst:311
msgid "Page Rendering Strategies"
msgstr ""

#: ../../../_source/api.rst:313
msgid "These strategies implement different page rendering approaches."
msgstr ""

#: ../../../_source/api.rst:316
msgid "Base Strategy"
msgstr ""

#: momovu.views.components.page_strategies.base:1 of
msgid "Base strategy for page rendering."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy:1 of
msgid "Bases: :py:class:`~abc.ABC`"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy:1 of
msgid "Abstract base class for page rendering strategies."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:1 of
msgid "Initialize the render strategy."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.__init__:8 of
msgid "Renderer for margins and overlays"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.render:1 of
msgid "Render pages according to the strategy."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.render:3 of
msgid "Current page index (0-based)"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.render:5 of
msgid "Whether to show fold lines"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.render:6 of
msgid "Optional callback to fit page to view"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:1
#: of
msgid "Instantiate and position a page widget for rendering."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:4
#: of
msgid "Left edge position in scene coordinates"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:5
#: of
msgid "Top edge position in scene coordinates"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.create_page_item:7
#: of
msgid "Positioned PageItem ready for scene insertion, None if page invalid"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.draw_overlays:1 of
msgid "Render safety margins and trim indicators on top of page."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:1
#: of
msgid "Schedule zoom adjustment for presentation mode."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:3
#: of
msgid "True triggers fit callback"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.fit_to_view_if_needed:4
#: of
msgid "Function to scale view to page bounds"
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.update_scene_rect:1
#: of
msgid ""
"Expand scene boundaries to include all rendered pages with padding for "
"zoom."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.update_scene_rect:3
#: of
msgid ""
"The padding allows proper mouse-centered zoom at document edges by giving"
" Qt room to position the viewport beyond the actual content bounds. Only "
"adds padding when zoomed in to avoid scrollbar issues."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.cleanup_page_items:1
#: of
msgid "Clean up all PageItem instances before clearing the scene."
msgstr ""

#: momovu.views.components.page_strategies.base.BaseStrategy.cleanup_page_items:3
#: of
msgid "This ensures timers are stopped and resources are freed properly."
msgstr ""

#: ../../../_source/api.rst:324
msgid "All Pages Strategy"
msgstr ""

#: momovu.views.components.page_strategies.all_pages:1 of
msgid "All pages rendering strategy."
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy:1
#: momovu.views.components.page_strategies.page_pair.PagePairStrategy:1
#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy:1
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy:1 of
msgid ""
"Bases: "
":py:class:`~momovu.views.components.page_strategies.base.BaseStrategy`"
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy:1 of
msgid "Strategy for rendering all pages vertically stacked."
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:1
#: of
msgid "Stack all document pages vertically with preserved scroll position."
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:3
#: of
msgid "Ignored - all pages shown regardless"
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:4
#: of
msgid "Ignored - not applicable for all pages"
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:5
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:5
#: of
msgid "Whether to display fold indicators"
msgstr ""

#: momovu.views.components.page_strategies.all_pages.AllPagesStrategy.render:6
#: of
msgid "Ignored - no fitting for multi-page view"
msgstr ""

#: ../../../_source/api.rst:332
msgid "Page Pair Strategy"
msgstr ""

#: momovu.views.components.page_strategies.page_pair:1 of
msgid "Page pair rendering strategy."
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy:1 of
msgid "Strategy for rendering a pair of pages side by side."
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:1
#: of
msgid "Display current page with its pair (page 1 alone, then 2-3, 4-5, etc)."
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:3
#: of
msgid "Page to display with its pair"
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:4
#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:4
#: of
msgid "Triggers fit_callback if True"
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:5
#: of
msgid "Display spine line between pages"
msgstr ""

#: momovu.views.components.page_strategies.page_pair.PagePairStrategy.render:6
#: of
msgid "Function to scale pair to viewport"
msgstr ""

#: ../../../_source/api.rst:340
msgid "Side by Side Strategy"
msgstr ""

#: momovu.views.components.page_strategies.side_by_side:1 of
msgid "Side-by-side rendering strategy for all pages."
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy:1 of
msgid "Strategy for rendering all pages in side-by-side pairs vertically stacked."
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:1
#: of
msgid "Stack all page pairs vertically (page 1 alone, then 2-3, 4-5, etc)."
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:3
#: of
msgid "Book layout: page 1 on right, then even pages left/odd pages right."
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:5
#: of
msgid "Ignored - all pairs shown regardless"
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:6
#: of
msgid "Ignored - not applicable for all pairs"
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:7
#: of
msgid "Display spine lines between pages"
msgstr ""

#: momovu.views.components.page_strategies.side_by_side.SideBySideStrategy.render:8
#: of
msgid "Ignored - no fitting for multi-pair view"
msgstr ""

#: ../../../_source/api.rst:348
msgid "Single Page Strategy"
msgstr ""

#: momovu.views.components.page_strategies.single_page:1 of
msgid "Single page rendering strategy."
msgstr ""

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy:1 of
msgid "Strategy for rendering a single page."
msgstr ""

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:1
#: of
msgid "Display only the current page, optionally fitted to view."
msgstr ""

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:3
#: of
msgid "Page index to display"
msgstr ""

#: momovu.views.components.page_strategies.single_page.SinglePageStrategy.render:6
#: of
msgid "Function to scale page to viewport"
msgstr ""

#: ../../../_source/api.rst:356
msgid "Margin Renderers"
msgstr ""

#: ../../../_source/api.rst:358
msgid ""
"These renderers handle margin and overlay drawing for different document "
"types."
msgstr ""

#: ../../../_source/api.rst:361
msgid "Base Renderer"
msgstr ""

#: momovu.views.components.renderers.base:1 of
msgid "Base renderer class for margin and overlay drawing."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer:1 of
msgid "Base class for all margin renderers."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.__init__:1 of
msgid "Initialize the base renderer."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:1
#: of
msgid "Get color from configuration or use default."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:3
#: of
msgid ""
"Configuration key for the color (e.g., \"margin_overlay\", "
"\"barcode_area\")"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:4
#: of
msgid "Default color to use if config not available"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_color_from_config:6
#: of
msgid "QColor from configuration or default"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:1
#: of
msgid "Get opacity from configuration or use default."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:3
#: of
msgid ""
"Configuration key for the opacity (e.g., \"margin_overlay\", "
"\"barcode_area\")"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:4
#: of
msgid "Default opacity to use if config not available"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_opacity_from_config:6
#: of
msgid "Opacity value from configuration or default"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:1
#: of
msgid "Get line width from configuration or use default."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:3
#: of
msgid ""
"Configuration key for the line width (e.g., \"fold_lines\", "
"\"trim_lines\")"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:4
#: of
msgid "Default width to use if config not available"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_line_width_from_config:6
#: of
msgid "Line width from configuration or default"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.clear_caches:1 of
msgid "Clear all cached configuration values."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:1 of
msgid "Draw semi-transparent colored rectangle for margin visualization."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:3 of
msgid "Rectangle left edge"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:4 of
msgid "Rectangle top edge"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:5 of
msgid "Rectangle width"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:6 of
msgid "Rectangle height"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.add_margin_rect:7 of
msgid "Fill color/pattern"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_margin_brush:1 of
msgid "Create brush for safety margin overlay rendering."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_margin_brush:3 of
msgid "Semi-transparent blue/purple brush"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_fold_pen:1 of
msgid "Create pen for spine/flap fold indicators."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_fold_pen:3 of
msgid "2px purple dashed line pen"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_trim_pen:1 of
msgid "Create pen for page edge trim marks."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_trim_pen:3 of
msgid "1px solid black line pen"
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_bleed_pen:1 of
msgid "Create pen for bleed line marks."
msgstr ""

#: momovu.views.components.renderers.base.BaseRenderer.get_bleed_pen:3 of
msgid "1px solid light blue line pen"
msgstr ""

#: ../../../_source/api.rst:369
msgid "Cover Renderer"
msgstr ""

#: momovu.views.components.renderers.cover:1 of
msgid "Renderer for cover document margins and overlays."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer:1
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer:1
#: momovu.views.components.renderers.interior.InteriorRenderer:1 of
msgid "Bases: :py:class:`~momovu.views.components.renderers.base.BaseRenderer`"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer:1 of
msgid "Handles rendering for cover documents."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.__init__:1 of
msgid "Initialize the cover renderer."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:1 of
msgid "Render safety margins on front/back covers, excluding spine area."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:3 of
msgid "Cover layout: [back cover][spine][front cover]"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:3
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:3
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:3
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:3
#: of
msgid "Page left edge"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:4
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:4
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:4
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:4
#: of
msgid "Page top edge"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:7
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:5
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:5 of
msgid "Total cover width"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:8
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:6
#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:6 of
msgid "Cover height"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:9
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:9
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:7
#: of
msgid "Safety margin size"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:7
#: momovu.views.components.renderers.cover.CoverRenderer.draw_margins:10
#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:7
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:10
#: of
msgid "Book spine thickness"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_trim_lines:1 of
msgid "Add trim marks at cover edges accounting for bleed."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_spine_fold_lines:1
#: of
msgid "Mark spine boundaries with dashed purple lines."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:1 of
msgid "Highlight barcode placement area on back cover bottom-right."
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_barcode:8 of
msgid "Distance from edges"
msgstr ""

#: momovu.views.components.renderers.cover.CoverRenderer.draw_bleed_lines:1
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:1
#: of
msgid "Add bleed marks at actual page edges (outside trim lines)."
msgstr ""

#: ../../../_source/api.rst:377
msgid "Dustjacket Renderer"
msgstr ""

#: momovu.views.components.renderers.dustjacket:1 of
msgid "Renderer for dustjacket document margins and overlays."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer:1 of
msgid "Handles rendering for dustjacket documents."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.__init__:1
#: of
msgid "Initialize the dustjacket renderer."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:1
#: of
msgid "Render safety margins on all dustjacket sections including flaps."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:3
#: of
msgid "Layout: [left flap][back cover][spine][front cover][right flap]"
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:7
#: of
msgid "Total dustjacket width"
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:8
#: of
msgid "Dustjacket height"
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_margins:11
#: of
msgid "Width of each flap"
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_trim_lines:1
#: of
msgid "Add trim marks at dustjacket edges accounting for bleed."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_fold_lines:1
#: of
msgid "Mark flap fold positions with dashed purple lines."
msgstr ""

#: momovu.views.components.renderers.dustjacket.DustjacketRenderer.draw_barcode:1
#: of
msgid "Highlight barcode placement area on back cover section."
msgstr ""

#: ../../../_source/api.rst:385
msgid "Interior Renderer"
msgstr ""

#: momovu.views.components.renderers.interior:1 of
msgid "Renderer for interior document margins and overlays."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer:1 of
msgid "Handles rendering for interior documents."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.__init__:1 of
msgid "Initialize the interior renderer."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:1
#: of
msgid "Render safety margin overlays on all four edges."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:5
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:5
#: of
msgid "Page width"
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_margins:6
#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:6
#: of
msgid "Page height"
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_trim_lines:1
#: of
msgid "Add trim marks exactly at page boundaries."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:1
#: of
msgid "Interior documents don't have bleed lines."
msgstr ""

#: momovu.views.components.renderers.interior.InteriorRenderer.draw_bleed_lines:7
#: of
msgid "Ignored for interior documents"
msgstr ""

#: ../../../_source/api.rst:393
msgid "Library Modules"
msgstr ""

#: ../../../_source/api.rst:395
msgid "These modules provide utility functions and shared functionality."
msgstr ""

#: ../../../_source/api.rst:398
msgid "Configuration Manager"
msgstr ""

#: momovu.lib.configuration_manager:1 of
msgid ""
"Configuration management for Momovu application using PySide6 best "
"practices."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager:1 of
msgid "Central configuration management using PySide6 best practices."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.__init__:1 of
msgid "Initialize the configuration manager."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:1 of
msgid "Get value with automatic type conversion (PySide6 feature)."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:3
#: momovu.lib.configuration_manager.ConfigurationManager.set_value:3 of
msgid "Configuration key"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:5 of
msgid "Type to convert the value to"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_value:7 of
msgid "The configuration value or default"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.set_value:1 of
msgid "Set value and emit change signal."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.add_recent_file:1 of
msgid "Add file to recent list with automatic cleanup."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.add_recent_file:3 of
msgid "Dictionary containing file metadata"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_recent_files:1 of
msgid "Get recent files using QSettings array API."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_recent_files:3 of
msgid "List of file info dictionaries"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.reset_to_defaults:1 of
msgid "Reset all settings to defaults."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_config_file_path:1
#: of
msgid "Get the actual configuration file path for debugging."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_config_file_path:3
#: of
msgid "Path to the configuration file"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.is_writable:1 of
msgid "Check if configuration is writable."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.is_writable:3 of
msgid "True if configuration can be written"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_status:1 of
msgid "Get configuration status for error checking."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_status:3 of
msgid "QSettings status"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:1 of
msgid "Save window state information."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:3 of
msgid "Window geometry as bytes"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:4 of
msgid "Window state as bytes"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:5 of
msgid "Whether window is maximized"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.save_window_state:6 of
msgid "Whether window is fullscreen"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_window_state:1 of
msgid "Get saved window state."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.get_window_state:3 of
msgid "Dictionary with window state information"
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.begin_batch_update:1
#: of
msgid "Begin a batch update operation."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.begin_batch_update:3
#: of
msgid ""
"During batch update, config_changed signals are suppressed until "
"end_batch_update() is called. This prevents multiple signals during bulk "
"configuration changes."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.end_batch_update:1 of
msgid "End a batch update operation and emit a single change signal."
msgstr ""

#: momovu.lib.configuration_manager.ConfigurationManager.end_batch_update:3 of
msgid ""
"This will emit a single config_changed signal with \"*\" to indicate "
"multiple changes occurred, rather than individual signals for each "
"change."
msgstr ""

#: ../../../_source/api.rst:406
msgid "Constants"
msgstr ""

#: momovu.lib.constants:1 of
msgid "Constants used throughout the Momovu application."
msgstr ""

#: momovu.lib.constants:3 of
msgid ""
"This module defines all the constants used in the Momovu application "
"including: - Window dimensions and UI elements - Presentation settings - "
"Measurement conversions (points, mm, inches) - Cache and performance "
"settings - Zoom factors - Default margins and safety areas - Barcode "
"dimensions for covers - Spine and flap calculations - Graphics item "
"colors and styles - Z-order layering values"
msgstr ""

#: ../../../_source/api.rst:414
msgid "Exceptions"
msgstr ""

#: momovu.lib.exceptions:1 of
msgid "Custom exceptions for Momovu."
msgstr ""

#: momovu.lib.exceptions:3 of
msgid ""
"This module defines custom exception classes used throughout the Momovu "
"application to handle specific error conditions with better context and "
"debugging information."
msgstr ""

#: momovu.lib.exceptions.MomovuError:1 of
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: momovu.lib.exceptions.MomovuError:1 of
msgid "Base exception for all Momovu-specific errors."
msgstr ""

#: momovu.lib.exceptions.MomovuError:3 of
msgid ""
"All custom exceptions in the application should inherit from this class "
"to allow for easy catching of application-specific errors."
msgstr ""

#: momovu.lib.exceptions.MomovuError.__init__:1 of
msgid "Initialize the exception with a message and optional details."
msgstr ""

#: momovu.lib.exceptions.MomovuError.__init__:3 of
msgid "The error message"
msgstr ""

#: momovu.lib.exceptions.MomovuError.__init__:4 of
msgid "Optional dictionary with additional error context"
msgstr ""

#: momovu.lib.exceptions.DocumentLoadError:1
#: momovu.lib.exceptions.PageRenderError:1 of
msgid "Bases: :py:class:`~momovu.lib.exceptions.MomovuError`"
msgstr ""

#: momovu.lib.exceptions.DocumentLoadError:1 of
msgid "Raised when a document fails to load."
msgstr ""

#: momovu.lib.exceptions.DocumentLoadError.__init__:1 of
msgid "Initialize with file path and reason for failure."
msgstr ""

#: momovu.lib.exceptions.DocumentLoadError.__init__:3 of
msgid "Path to the document that failed to load"
msgstr ""

#: momovu.lib.exceptions.DocumentLoadError.__init__:4 of
msgid "Reason for the load failure"
msgstr ""

#: momovu.lib.exceptions.PageRenderError:1 of
msgid "Raised when a page fails to render."
msgstr ""

#: momovu.lib.exceptions.PageRenderError.__init__:1 of
msgid "Initialize with page number and reason for failure."
msgstr ""

#: momovu.lib.exceptions.PageRenderError.__init__:3 of
msgid "The page that failed to render"
msgstr ""

#: momovu.lib.exceptions.PageRenderError.__init__:4 of
msgid "Reason for the render failure"
msgstr ""

#: ../../../_source/api.rst:422
msgid "Icon Theme"
msgstr ""

#: momovu.lib.icon_theme:1 of
msgid "Icon theme configuration for Qt applications."
msgstr ""

#: momovu.lib.icon_theme:3 of
msgid ""
"This module handles Qt icon theme configuration using Qt's built-in theme"
" support, including fallback themes and search paths."
msgstr ""

#: momovu.lib.icon_theme.configure_icon_theme:1 of
msgid "Configure Qt icon theme with proper fallbacks."
msgstr ""

#: momovu.lib.icon_theme.configure_icon_theme:3 of
msgid ""
"Uses Qt's built-in theme support: 1. Ensures standard search paths are "
"available 2. Sets up fallback theme if main theme is missing icons 3. "
"Adds fallback search paths for standalone icons"
msgstr ""

#: ../../../_source/api.rst:430
msgid "Logger"
msgstr ""

#: momovu.lib.logger:1 of
msgid "Enhanced logging configuration for Momovu."
msgstr ""

#: momovu.lib.logger:3 of
msgid ""
"This module provides structured logging with context, performance "
"metrics, and decorators for common operations."
msgstr ""

#: momovu.lib.logger.StructuredFormatter:1 of
msgid "Bases: :py:class:`~logging.Formatter`"
msgstr ""

#: momovu.lib.logger.StructuredFormatter:1 of
msgid "Formatter that outputs structured log messages with context."
msgstr ""

#: momovu.lib.logger.StructuredFormatter.format:1 of
msgid "Format the log record with structured context."
msgstr ""

#: momovu.lib.logger.configure_logging:1 of
msgid "Configure logging based on command line arguments."
msgstr ""

#: momovu.lib.logger.configure_logging:3 of
msgid "Verbosity level (0=WARNING, 1=INFO, 2+=DEBUG)"
msgstr ""

#: momovu.lib.logger.configure_logging:4 of
msgid "Enable debug logging"
msgstr ""

#: momovu.lib.logger.get_logger:1 of
msgid "Get a logger instance with the given name."
msgstr ""

#: momovu.lib.logger.get_logger:3 of
msgid "Logger name (typically __name__)"
msgstr ""

#: momovu.lib.logger.get_logger:5 of
msgid "Configured logger instance"
msgstr ""

#: ../../../_source/api.rst:438
msgid "Shortcuts Dialog"
msgstr ""

#: momovu.lib.shortcuts_dialog:1 of
msgid "Keyboard shortcuts dialog for Momovu."
msgstr ""

#: momovu.lib.shortcuts_dialog:3 of
msgid ""
"This module provides a dialog that displays all available keyboard "
"shortcuts to help users learn and use the application more efficiently."
msgstr ""

#: momovu.lib.shortcuts_dialog.ShortcutsDialog:1 of
msgid "Dialog displaying all keyboard shortcuts."
msgstr ""

#: momovu.lib.shortcuts_dialog.ShortcutsDialog.__init__:1 of
msgid "Initialize the shortcuts dialog."
msgstr ""

#: ../../../_source/api.rst:446
msgid "Dustjacket Spine Widths"
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths:1 of
msgid "Dustjacket spine width lookup table for page count ranges."
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths:3 of
msgid ""
"This module defines the spine width lookup table for dustjackets based on"
" page count. The table provides discrete spine width values for specific "
"page count ranges, unlike covers which use a continuous formula."
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths:7 of
msgid ""
"Data source: Restored from git commit 42505ca (was in margin_sizes.py) "
"All measurements are in millimeters (mm)."
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:1 of
msgid "Get dustjacket spine width in mm for given page count."
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:3 of
msgid "Number of pages in the document"
msgstr ""

#: momovu.lib.sizes.dustjacket_spine_widths.get_dustjacket_spine_width:7 of
msgid "For page counts outside the 24-800 range, returns 6mm (minimum width)"
msgstr ""

#: ../../../_source/api.rst:454
msgid "Usage Examples"
msgstr ""

#: ../../../_source/api.rst:457
msgid "Basic Usage"
msgstr ""

#: ../../../_source/api.rst:470
msgid "Command Line Usage"
msgstr ""

#: ../../../_source/api.rst:487
msgid "Programmatic Usage"
msgstr ""

#: ../../../_source/api.rst:529
msgid "Working with Document Types"
msgstr ""

#: ../../../_source/api.rst:548
msgid "Navigation Examples"
msgstr ""

#: ../../../_source/api.rst:567
msgid "Margin Configuration"
msgstr ""

#: ../../../_source/api.rst:586
msgid "Error Handling"
msgstr ""

#: ../../../_source/api.rst:603
msgid "Extending Momovu"
msgstr ""

#: ../../../_source/api.rst:606
msgid "Creating Custom Strategies"
msgstr ""

#: ../../../_source/api.rst:629
msgid "Creating Custom Renderers"
msgstr ""

#: ../../../_source/api.rst:664
msgid "Adding Custom Validators"
msgstr ""

