[project]
name = "aws-cdk-modules"
description = "Python repository for AWS CDK modules"
authors = [
  { name = "Charlie Collier", email = "collier.p.charlie@gmail.com" }
]
maintainers = [
  { name = "Charlie Collier", email = "collier.p.charlie@gmail.com" }
]
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Framework :: Hatch"
]
version = "1.0.0.dev2"  # https://packaging.python.org/en/latest/discussions/versioning/
requires-python = ">=3.12"
dependencies = [
    "aws-cdk-lib>=2.211.0",
    "constructs>=10.4.2",
]

[project.optional-dependencies]
# These will install if installing the subproject, e.g. "pip install .[name]" or --extra test
test = [
    # for testing
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff",
    # pre-commit hooks
    "pre-commit"
]
docs = [
    # for creating documentation using Markdown
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-material"
]

[project.scripts]
main = "src.package_name.main:main"

[project.urls]
Documentation = "https://collier-p-charlie.github.io/aws-cdk-modules"
Repository = "https://github.com/collier-p-charlie/aws-cdk-modules"
Issues = "https://github.com/collier-p-charlie/aws-cdk-modules/issues"
Changelog = "https://github.com/collier-p-charlie/aws-cdk-modules/blob/main/CHANGELOG.md"

# build system configuration
[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
  "**.py",
  "/tests"
]
exclude = []

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "src"
testpaths = [
    "tests"
]
addopts = [
  "--verbosity=3",
  "--cache-clear",
  "-p", "no:warnings",
  "--cov"
]

[tool.mypy]
mypy_path = "src"
files = "src/"
explicit_package_bases = true

[tool.coverage.run]
source = [
    "src/"
]
omit = [
    "tests/**",
    "**/__init__.py"
]

[tool.coverage.report]
show_missing = true
skip_covered = true

# Exclude these lines from coverage report
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "def __str__",
    "def __repr__"
]

# Fail if total coverage is below the threshold
fail_under = 90

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]  # See all rules here: https://docs.astral.sh/ruff/rules/
ignore = [
    "D100",
    "D104",
    "E501"  # Ignore line length errors
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",  # using `assert` for test; recommended with PyTest
]
