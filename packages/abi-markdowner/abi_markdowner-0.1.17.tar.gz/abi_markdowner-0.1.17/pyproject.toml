[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "abi-markdowner"
version = "0.1.17"
description = "A tool to convert MultiversX Smart Contract ABI files into Markdown documentation."
readme = "README.md"
license-files = ["LICENSE"]
authors = [
    {name = "Kostas Tzoumpas", email = "tzoumpas.ks@gmail.com"}
]
maintainers = [
    {name = "Kostas Tzoumpas", email = "tzoumpas.ks@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Utilities",
]
keywords = ["multiversx", "abi", "documentation", "markdown", "smart-contracts"]
requires-python = ">=3.8"
dependencies = [
    "toml>=0.10.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=3.0.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/0xk0stas/abi-markdowner"
Repository = "https://github.com/0xk0stas/abi-markdowner"
Issues = "https://github.com/0xk0stas/abi-markdowner/issues"
Changelog = "https://github.com/0xk0stas/abi-markdowner/blob/main/CHANGELOG.md"

[project.scripts]
abi-markdowner = "abi_markdowner.main:main"

[tool.setuptools.packages.find]
include = ["abi_markdowner*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["abi_markdowner"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
