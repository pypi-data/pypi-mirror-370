[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aws-cloud-utilities"
version = "2.1.1"
description = "A unified command-line toolkit for AWS operations with enhanced functionality"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Jon", email = "jon@zer0day.net" }]
maintainers = [{ name = "Jon", email = "jon@zer0day.net" }]
keywords = ["aws", "cloud", "cli", "utilities", "devops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.12"
dependencies = [
    "boto3>=1.34.0",
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
    "requests>=2.31.0",
    "pandas>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/jon-the-dev/aws-cloud-tools"
Repository = "https://github.com/jon-the-dev/aws-cloud-tools"
Issues = "https://github.com/jon-the-dev/aws-cloud-tools/issues"
Documentation = "https://github.com/jon-the-dev/aws-cloud-tools/tree/main/docs"

[project.scripts]
aws-cloud-utilities = "aws_cloud_utilities.cli:main"
awscu = "aws_cloud_utilities.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aws_cloud_utilities*"]

[tool.setuptools.package-data]
aws_cloud_utilities = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["aws_cloud_utilities"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
