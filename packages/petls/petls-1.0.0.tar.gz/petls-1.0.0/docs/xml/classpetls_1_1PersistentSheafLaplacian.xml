<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classpetls_1_1PersistentSheafLaplacian" kind="class" language="C++" prot="public">
    <compoundname>petls::PersistentSheafLaplacian</compoundname>
    <includes refid="PersistentSheafLaplacian_8hpp" local="no">PersistentSheafLaplacian.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpetls_1_1PersistentSheafLaplacian_1a262007f573f0e36cb37c4b1656707fde" prot="private" static="no">
        <type>float</type>
        <definition>using petls::PersistentSheafLaplacian::storage =  float</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="31" column="5" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a4c010a4e28b7a20faf2cd5d04ead6fa1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int petls::PersistentSheafLaplacian::top_dim</definition>
        <argsstring></argsstring>
        <name>top_dim</name>
        <briefdescription>
<para>Top dimension of the complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="37" column="13" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a8f74b9353b074775534dda04bcdee626" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classpetls_1_1FilteredBoundaryMatrix" kindref="compound">FilteredBoundaryMatrix</ref>&lt; storage &gt; &gt;</type>
        <definition>std::vector&lt;FilteredBoundaryMatrix&lt;storage&gt; &gt; petls::PersistentSheafLaplacian::filtered_boundaries</definition>
        <argsstring></argsstring>
        <name>filtered_boundaries</name>
        <briefdescription>
<para>Boundary matrix assuming real (or integer) coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="38" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1ae51b445ea6eff709df1436358e3e1f6f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool petls::PersistentSheafLaplacian::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <briefdescription>
<para>Print progress if <ref refid="classpetls_1_1PersistentSheafLaplacian_1a98615eec3cc54b423206fb5cfafc18c6" kindref="member">spectra()</ref> is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="39" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a3a2fa45aace835e5573ba83c89334c9c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool petls::PersistentSheafLaplacian::use_flipped</definition>
        <argsstring></argsstring>
        <name>use_flipped</name>
        <briefdescription>
<para>Compute the top-dimensional Laplacian&apos;s eigenvalues in spectra function via the eigenvalues of the smaller of B_N B_N^T or B_N^T B_N and possible zero-padding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="40" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a9a8802da3c168b2d236c9f3841aef2c7" prot="public" static="no" mutable="no">
        <type><ref refid="structpetls_1_1Profile" kindref="compound">Profile</ref></type>
        <definition>Profile petls::PersistentSheafLaplacian::profile</definition>
        <argsstring></argsstring>
        <name>profile</name>
        <briefdescription>
<para>Profiler to track time usage of various steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="41" column="17" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a593df210a45c5c3bd907818082ad170a" prot="public" static="no" mutable="no">
        <type>std::function&lt; <ref refid="typedefs_8hpp_1a27a64e317582fd2a2dbdc95fa84b7ebd" kindref="member">spectra_vec</ref>(<ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;)&gt;</type>
        <definition>std::function&lt;spectra_vec(DenseMatrix_PL&amp;)&gt; petls::PersistentSheafLaplacian::eigs_algorithm_func</definition>
        <argsstring></argsstring>
        <name>eigs_algorithm_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="42" column="23" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1a34df5759a37ff2a3153b3963d3229574" prot="public" static="no" mutable="no">
        <type>std::function&lt; std::pair&lt; <ref refid="typedefs_8hpp_1a27a64e317582fd2a2dbdc95fa84b7ebd" kindref="member">spectra_vec</ref>, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &gt;<ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;)&gt;</type>
        <definition>std::function&lt;std::pair&lt;spectra_vec,DenseMatrix_PL&gt;DenseMatrix_PL&amp;)&gt; petls::PersistentSheafLaplacian::eigenpairs_algorithm_func</definition>
        <argsstring></argsstring>
        <name>eigenpairs_algorithm_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="43" column="25" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpetls_1_1PersistentSheafLaplacian_1afe949d7e94ce8836a538d6c950969796" prot="public" static="no" mutable="no">
        <type>std::function&lt; void(<ref refid="classpetls_1_1FilteredBoundaryMatrix" kindref="compound">FilteredBoundaryMatrix</ref>&lt; float &gt; *, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;)&gt;</type>
        <definition>std::function&lt;void(FilteredBoundaryMatrix&lt;float&gt;*, filtration_type, filtration_type, DenseMatrix_PL&amp;)&gt; petls::PersistentSheafLaplacian::up_algorithm_func</definition>
        <argsstring></argsstring>
        <name>up_algorithm_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="45" column="23" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1aa91f6713ba3911df1f726c87ec7374c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>petls::PersistentSheafLaplacian::PersistentSheafLaplacian</definition>
        <argsstring>(sheaf_simplex_tree &amp;sst)</argsstring>
        <name>PersistentSheafLaplacian</name>
        <param>
          <type><ref refid="classpetls_1_1sheaf__simplex__tree" kindref="compound">sheaf_simplex_tree</ref> &amp;</type>
          <declname>sst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="51" column="9" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="51" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a3869796e39140fdcb75096cba9c1999f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>petls::PersistentSheafLaplacian::PersistentSheafLaplacian</definition>
        <argsstring>(std::vector&lt; Eigen::SparseMatrix&lt; storage &gt;&gt; boundaries, std::vector&lt; std::vector&lt; filtration_type &gt;&gt; filtrations)</argsstring>
        <name>PersistentSheafLaplacian</name>
        <param>
          <type>std::vector&lt; Eigen::SparseMatrix&lt; storage &gt;&gt;</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;&gt;</type>
          <declname>filtrations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boundaries</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of Eigen::SparseMatrix of type float. Boundaries must be sorted in order of dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filtrations</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of vector of filtrations. filtrations[dim] is a list of all filtrations of simplices in dimension dim. filtrations must be sorted in order of dimension, each filtrations[i] must be sorted in order of filtration</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Primary constructor. Important Assumptions: 1) Boundary matrix has real coefficients stored as integers (but not mod 2!) 2) Boundary matrix dimensions agree with filtrations sizes 3) Length(filtrations) = Length(boundaries) + 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="81" column="9" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1ae9bd3794cb99a3d04fcedd7f4a7e68af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>petls::PersistentSheafLaplacian::~PersistentSheafLaplacian</definition>
        <argsstring>()</argsstring>
        <name>~PersistentSheafLaplacian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="97" column="9" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a92568ef07cfd668688d19ff0d5593309" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_eigs_algorithm_func</definition>
        <argsstring>(std::function&lt; spectra_vec(DenseMatrix_PL &amp;)&gt; _eigs_algorithm_func)</argsstring>
        <name>set_eigs_algorithm_func</name>
        <param>
          <type>std::function&lt; <ref refid="typedefs_8hpp_1a27a64e317582fd2a2dbdc95fa84b7ebd" kindref="member">spectra_vec</ref>(<ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;)&gt;</type>
          <declname>_eigs_algorithm_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="103" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1aec579f5c9e74979f0eefdfff7171ad50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_eigs_algorithm_func</definition>
        <argsstring>(std::string name)</argsstring>
        <name>set_eigs_algorithm_func</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="107" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a33cb800a0dfafb915d7f86fd8113b4ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_up_func</definition>
        <argsstring>(std::function&lt; void(FilteredBoundaryMatrix&lt; float &gt; *, filtration_type, filtration_type, DenseMatrix_PL &amp;)&gt; _up_algorithm_func)</argsstring>
        <name>set_up_func</name>
        <param>
          <type>std::function&lt; void(<ref refid="classpetls_1_1FilteredBoundaryMatrix" kindref="compound">FilteredBoundaryMatrix</ref>&lt; float &gt; *, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;)&gt;</type>
          <declname>_up_algorithm_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="117" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1addced39b388372233038322e587d323c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_boundaries_filtrations</definition>
        <argsstring>(std::vector&lt; Eigen::SparseMatrix&lt; storage &gt;&gt; boundaries, std::vector&lt; std::vector&lt; filtration_type &gt;&gt; filtrations)</argsstring>
        <name>set_boundaries_filtrations</name>
        <param>
          <type>std::vector&lt; Eigen::SparseMatrix&lt; storage &gt;&gt;</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;&gt;</type>
          <declname>filtrations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the boundaries and filtrations of a complex, particularly if the default constructor was called. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boundaries</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of Eigen::SparseMatrix of type int. Boundaries must be sorted in order of dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filtrations</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of vector of filtrations. filtrations[dim] is a list of all filtrations of simplices in dimension dim. filtrations must be sorted in order of dimension, each filtrations[i] must be sorted in order of filtration. Important Assumptions: 1) Boundary matrix has real coefficients stored as integers (but not mod 2!), 2) Boundary matrix dimensions agree with filtrations sizes, 3) Length(filtrations) = Length(boundaries) + 1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="130" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="130" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1afddbfca690826173849d098abc0faa39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_verbose</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>set_verbose</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set verbose <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>New setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="172" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a0efa5ad790980fdcdfe2f2aca8c7a3a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::set_flipped</definition>
        <argsstring>(bool use_flipped)</argsstring>
        <name>set_flipped</name>
        <param>
          <type>bool</type>
          <declname>use_flipped</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set flipped <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>use_flipped</parametername>
</parameternamelist>
<parameterdescription>
<para>New setting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="178" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a326442edf3708d99f59b54866930cf7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::get_L</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b, DenseMatrix_PL &amp;L)</argsstring>
        <name>get_L</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Persistent Laplacian Matrix (by reference). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration value (must be &gt;= a) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">L</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix where the persistent Laplacian will be stored (by reference). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="192" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="192" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a7e3d3c2bbe15c902ed8bf3eb023657f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref></type>
        <definition>DenseMatrix_PL petls::PersistentSheafLaplacian::get_L</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b)</argsstring>
        <name>get_L</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Persistent Laplacian Matrix (by value).</para>
<para>Warning: this does a potentially expensive copy. The primary reason this function exists is to provide reasonable python binding access to the matrix L itself. If you do not need the persistent Laplacian matrix directly in python (e.g. you want its eigenvalues) it will be more efficient to compute by reference via <ref refid="classpetls_1_1PersistentSheafLaplacian_1a326442edf3708d99f59b54866930cf7c" kindref="member">get_L(int dim, filtration_type a, filtration_type b, DenseMatrix_PL &amp;L)</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration value (must be &gt;= a) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>L the persistent Laplacian matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="279" column="24" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a9654fec3af26aa958293987030a40b9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::get_L_top_dim_flipped</definition>
        <argsstring>(filtration_type a, SparseMatrix_PL &amp;L)</argsstring>
        <name>get_L_top_dim_flipped</name>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1aa0b819682f9cdac0ae1234aed46106e6" kindref="member">SparseMatrix_PL</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a matrix with the same nonzero eigenvalues as the top-dimensional Persistent Laplacian Matrix (by reference). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">L</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix (by reference) that has the same eigenvalues as the top-dimensional Persistent Laplacian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="290" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="290" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a0090a4aa54b23f5983cac437be81ad86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="typedefs_8hpp_1aa0b819682f9cdac0ae1234aed46106e6" kindref="member">SparseMatrix_PL</ref></type>
        <definition>SparseMatrix_PL petls::PersistentSheafLaplacian::get_L_top_dim_flipped</definition>
        <argsstring>(filtration_type a)</argsstring>
        <name>get_L_top_dim_flipped</name>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a matrix with the same nonzero eigenvalues as the top-dimensional Persistent Laplacian Matrix (by value).</para>
<para>Warning: this does a potentially expensive copy. The primary reason this function exists is to provide reasonable python binding access to the matrix itself. If you do not need this matrix directly in python (e.g. you want its eigenvalues) it will be more efficient to compute by reference via <ref refid="classpetls_1_1PersistentSheafLaplacian_1a9654fec3af26aa958293987030a40b9d" kindref="member">get_L_top_dim_flipped(filtration_type a, SparseMatrix_PL &amp;L)</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A matrix with the same nonzero eigenvalues as the top-dimensional persistent Laplacian (but not the persistent Laplacian itself). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="306" column="25" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="306" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a5378f9579678ed3c58eccbd4af8a6dd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::get_up</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b, DenseMatrix_PL &amp;L_up)</argsstring>
        <name>get_up</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &amp;</type>
          <declname>L_up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the up persistent Laplacian (by reference). The algorithm used is determined by the template parameter. See <ref refid="up__algorithms_8hpp" kindref="compound">up_algorithms.hpp</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">L_up</parametername>
</parameternamelist>
<parameterdescription>
<para>up persistent Laplacian (by reference) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="322" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1af9fcdfd727bb598cdb39c4dbc6a47392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref></type>
        <definition>DenseMatrix_PL petls::PersistentSheafLaplacian::get_up</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b)</argsstring>
        <name>get_up</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the up persistent Laplacian (by value). The algorithm used is determined by the template parameter. See <ref refid="up__algorithms_8hpp" kindref="compound">up_algorithms.hpp</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>up persistent Laplacian </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="337" column="24" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="337" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a59cdeab2418508ea7b537318ae71f203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::get_down</definition>
        <argsstring>(int dim, filtration_type a, Eigen::SparseMatrix&lt; storage &gt; &amp;L_down)</argsstring>
        <name>get_down</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>Eigen::SparseMatrix&lt; storage &gt; &amp;</type>
          <declname>L_down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the down persistent Laplacian (by reference). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">L_down</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix (by reference) of the down presistent Laplacian <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="349" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="349" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a28ea525d437916101a6ed7984e9f7786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Eigen::SparseMatrix&lt; storage &gt;</type>
        <definition>Eigen::SparseMatrix&lt;storage&gt; petls::PersistentSheafLaplacian::get_down</definition>
        <argsstring>(int dim, filtration_type a)</argsstring>
        <name>get_down</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the down persistent Laplacian (by value).</para>
<para>Warning: this does a potentially expensive copy. The primary reason this function exists is to provide reasonable python binding access to the matrix itself. If you do not need this matrix directly in python (e.g. you want its eigenvalues) it will be more efficient to compute by reference via <ref refid="classpetls_1_1PersistentSheafLaplacian_1a59cdeab2418508ea7b537318ae71f203" kindref="member">get_down(int dim, filtration_type a, Eigen::SparseMatrix&lt;storage&gt; &amp;L_down)</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value \return The matrix (by value) of the down presistent Laplacian <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="369" column="29" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="369" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1ad9bd916b4d263a47409a074c0c7aa8d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;</type>
        <definition>std::vector&lt;spectra_type&gt; petls::PersistentSheafLaplacian::spectra</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b)</argsstring>
        <name>spectra</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Persistent Laplacian&apos;s eigenvalues at a given dimension and filtration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration level </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sorted vector of real, nonnegative eigenvalues </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="392" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="392" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a98615eec3cc54b423206fb5cfafc18c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, filtration_type, filtration_type, std::vector&lt;spectra_type&gt; &gt; &gt; petls::PersistentSheafLaplacian::spectra</definition>
        <argsstring>()</argsstring>
        <name>spectra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all eigenvalues for all combinations of dimension and successive filtration values: a=filtrations[i] and b=filtrations[i+1]. Note: the caller does not know what spectra to expect from this. <linebreak/>
 <simplesect kind="return"><para>vector of tuples (dim, a, b, eigenvalues) where &quot;eigenvalues&quot; is a sorted vector of real, nonnegative eigenvalues. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="492" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="492" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1ab2bb19fae77700b2cadbc8ef9d0c336a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, filtration_type, filtration_type, std::vector&lt;spectra_type&gt; &gt; &gt; petls::PersistentSheafLaplacian::spectra</definition>
        <argsstring>(std::vector&lt; std::tuple&lt; int, filtration_type, filtration_type &gt;&gt; spectra_request_list)</argsstring>
        <name>spectra</name>
        <param>
          <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;&gt;</type>
          <declname>spectra_request_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function essentially just calls spectra(dim, a, b) in a loop. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectra_quest_list</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of tuples (dim, a, b) to compute the eigenvalues of L_{dim}^{a,b}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector of tuples (dim, a, b, eigenvalues), where eigenvalues it istelf a vector of real, nonnegative eigenvalues. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="532" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="532" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a8ab1309466bae9424dd7d044d45e8782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &gt;</type>
        <definition>std::pair&lt;std::vector&lt;spectra_type&gt;,DenseMatrix_PL&gt; petls::PersistentSheafLaplacian::eigenpairs</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b)</argsstring>
        <name>eigenpairs</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Persistent Laplacian&apos;s eigenvalues and eigenvectors at a given dimension and filtration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration level </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sorted pair of: vector of real, nonnegative eigenvalues and Eigen matrix where column i is the eigenvector for eigenvalue i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="572" column="19" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="572" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a4733756efade0f90f7a691147f53093e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, filtration_type, filtration_type, std::vector&lt;spectra_type&gt;,DenseMatrix_PL&gt; &gt; petls::PersistentSheafLaplacian::eigenpairs</definition>
        <argsstring>()</argsstring>
        <name>eigenpairs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all eigenvalues for all combinations of dimension and successive filtration values: a=filtrations[i] and b=filtrations[i+1]. Note: the caller does not know what spectra to expect from this. <linebreak/>
 <simplesect kind="return"><para>vector of tuples (dim, a, b, eigenvalues, eigenvectors) where &quot;eigenvalues&quot; is a sorted vector of real, nonnegative eigenvalues and &quot;eigenvectors&quot; is an Eigen::MatrixXf where column i is the eigenvector for eigenvalue i </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="626" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="626" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a5b0b78e78e6576b5e9b955a44ed0bd0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;, <ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, filtration_type, filtration_type, std::vector&lt;spectra_type&gt;, DenseMatrix_PL&gt; &gt; petls::PersistentSheafLaplacian::eigenpairs</definition>
        <argsstring>(std::vector&lt; std::tuple&lt; int, filtration_type, filtration_type &gt;&gt; spectra_request_list)</argsstring>
        <name>eigenpairs</name>
        <param>
          <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;&gt;</type>
          <declname>spectra_request_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function essentially just calls eigenpairs(dim, a, b) in a loop. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectra_quest_list</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of tuples (dim, a, b) to compute the eigenvalues of L_{dim}^{a,b}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector of tuples (dim, a, b, eigenvalues, eigenvalues), where eigenvalues it istelf a vector of real, nonnegative eigenvalues and &quot;eigenvectors&quot; is an Eigen::MatrixXf where column i is the eigenvector for eigenvalue i. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="663" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="663" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a677857a799c781e9aa6e889a1acb65ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; int, <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;</type>
        <definition>std::pair&lt;int, spectra_type&gt; petls::PersistentSheafLaplacian::eigenvalues_summarize</definition>
        <argsstring>(std::vector&lt; spectra_type &gt; eigenvalues)</argsstring>
        <name>eigenvalues_summarize</name>
        <param>
          <type>std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;</type>
          <declname>eigenvalues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility function to get the Betti number and least nonzero eigenvalue form a vector of eigenvalues. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eigenvalues</parametername>
</parameternamelist>
<parameterdescription>
<para>eigenvalues </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pair of (Betti number, least nonzero eigenvalue) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="700" column="19" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="700" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1af020e626144e0b5c1070a7924ec3ea3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::store_L</definition>
        <argsstring>(int dim, filtration_type a, filtration_type b, std::string filename)</argsstring>
        <name>store_L</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute and store a persistent Laplacian matrix in a file in matrix market format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>start filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>end filtration value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to store matrix (typically .mtx extension) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="734" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="734" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1aaa6127847a0ecc7c22b25073d5ae0c18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::print_boundaries</definition>
        <argsstring>()</argsstring>
        <name>print_boundaries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print all boundaries and corresponding filtrations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="751" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="751" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a1f771bcabaff3ca9c65f18dc20264700" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::store_spectra</definition>
        <argsstring>(std::vector&lt; std::tuple&lt; int, filtration_type, filtration_type, std::vector&lt; spectra_type &gt;&gt;&gt; spectra, std::string out_prefix)</argsstring>
        <name>store_spectra</name>
        <param>
          <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;&gt;&gt;</type>
          <declname>spectra</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>out_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write spectra to files.</para>
<para>for each dimension dim of the complex, files write &quot;{out_prefix}_spectra_{dim}.txt&quot;. Each line of the file is a space-separated list of eigenvalues. Lines may be empty. Note the filtration values are not reported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectra</parametername>
</parameternamelist>
<parameterdescription>
<para>tuples (dim, a, b, eigenvalues) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalues will be written to &quot;{out_prefix}_spectra_{dim}.txt&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="769" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="769" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a785b7f661b8047c2debcbd127589a206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void petls::PersistentSheafLaplacian::store_spectra_summary</definition>
        <argsstring>(std::vector&lt; std::tuple&lt; int, filtration_type, filtration_type, std::vector&lt; spectra_type &gt;&gt;&gt; spectra, std::string out_prefix)</argsstring>
        <name>store_spectra_summary</name>
        <param>
          <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, std::vector&lt; <ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref> &gt;&gt;&gt;</type>
          <declname>spectra</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>out_prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write spectra summary to files &quot;{out_prefix}_spectra_summary.txt&quot;</para>
<para>Each line is a space-separated list of filtrations, bettti numbers, and least nonzero eigenvalues: (filtration a) (filtration b) (betti 0) ... (betti top_dim) (lambda 0) ... (lambda top_dim) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spectra</parametername>
</parameternamelist>
<parameterdescription>
<para>tuples (dim, a, b, eigenvalues) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigenvalues will be written to &quot;{out_prefix}_spectra_summary.txt&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="800" column="14" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="800" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a1a43736e6fd04dc53d0943cd6ea0f234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::tuple&lt; int, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>, <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;int, filtration_type, filtration_type&gt; &gt; petls::PersistentSheafLaplacian::filtration_list_to_spectra_request</definition>
        <argsstring>(std::vector&lt; filtration_type &gt; filtrations, std::vector&lt; int &gt; dims)</argsstring>
        <name>filtration_list_to_spectra_request</name>
        <param>
          <type>std::vector&lt; <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;</type>
          <declname>filtrations</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get tuples (dim, a, b) for all combinations of dimension and successive filtration values: a=filtrations[i], b=filtrations[i+1]. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filtrations</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of filtration values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dims</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of dimensions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuples (dim, a, b) for all combinations of dimension and successive filtration values: a=filtrations[i], b=filtrations[i+1]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="877" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="877" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1af9d7ff87d59c4097d571a37c112f81dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref> &gt;</type>
        <definition>std::vector&lt;filtration_type&gt; petls::PersistentSheafLaplacian::get_all_filtrations</definition>
        <argsstring>()</argsstring>
        <name>get_all_filtrations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all unique filtration values in the complex. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="909" column="21" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="909" bodyend="927"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classpetls_1_1PersistentSheafLaplacian_1a217c0bb3e0e0254cde469edbcfd17835" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpetls_1_1FilteredBoundaryMatrix" kindref="compound">petls::FilteredBoundaryMatrix</ref>&lt; storage &gt;</type>
        <definition>petls::FilteredBoundaryMatrix&lt;storage&gt; petls::PersistentSheafLaplacian::dummy_d0</definition>
        <argsstring>()</argsstring>
        <name>dummy_d0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="931" column="39" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="931" bodyend="938"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Primary class for computing persistent Laplacians <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>eigs_Algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm wrapper class to use for computing eigenvalues of the Laplacian in the spectra family of functions. Default is a wrapper for Eigen::SelfAdjointEigenSolver. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up_Algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm wrapper class to use for computing the up-Laplacian. Default is the Schur complement algorithm presented in Memoli, Wan, and Wang 2020. //TODO: \see up_algorithms and eigs_algorithms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>petls::PersistentSheafLaplacian</label>
        <link refid="classpetls_1_1PersistentSheafLaplacian"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+profile</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>petls::Profile</label>
        <link refid="structpetls_1_1Profile"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+L</edgelabel>
          <edgelabel>+L_down</edgelabel>
          <edgelabel>+L_up</edgelabel>
          <edgelabel>+all</edgelabel>
          <edgelabel>+eigs</edgelabel>
          <edgelabel>+sum_up_down</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>petls::timer</label>
        <link refid="structpetls_1_1timer"/>
      </node>
    </collaborationgraph>
    <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" line="30" column="1" bodyfile="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp" bodystart="30" bodyend="939"/>
    <listofallmembers>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a217c0bb3e0e0254cde469edbcfd17835" prot="protected" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>dummy_d0</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a8ab1309466bae9424dd7d044d45e8782" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigenpairs</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a4733756efade0f90f7a691147f53093e" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigenpairs</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a5b0b78e78e6576b5e9b955a44ed0bd0b" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigenpairs</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a34df5759a37ff2a3153b3963d3229574" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigenpairs_algorithm_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a677857a799c781e9aa6e889a1acb65ef" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigenvalues_summarize</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a593df210a45c5c3bd907818082ad170a" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>eigs_algorithm_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a8f74b9353b074775534dda04bcdee626" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>filtered_boundaries</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a1a43736e6fd04dc53d0943cd6ea0f234" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>filtration_list_to_spectra_request</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1af9d7ff87d59c4097d571a37c112f81dc" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_all_filtrations</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a59cdeab2418508ea7b537318ae71f203" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_down</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a28ea525d437916101a6ed7984e9f7786" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_down</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a326442edf3708d99f59b54866930cf7c" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_L</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a7e3d3c2bbe15c902ed8bf3eb023657f2" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_L</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a9654fec3af26aa958293987030a40b9d" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_L_top_dim_flipped</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a0090a4aa54b23f5983cac437be81ad86" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_L_top_dim_flipped</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a5378f9579678ed3c58eccbd4af8a6dd7" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_up</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1af9fcdfd727bb598cdb39c4dbc6a47392" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>get_up</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1aa91f6713ba3911df1f726c87ec7374c5" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>PersistentSheafLaplacian</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a3869796e39140fdcb75096cba9c1999f" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>PersistentSheafLaplacian</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1aaa6127847a0ecc7c22b25073d5ae0c18" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>print_boundaries</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a9a8802da3c168b2d236c9f3841aef2c7" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>profile</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1addced39b388372233038322e587d323c" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_boundaries_filtrations</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a92568ef07cfd668688d19ff0d5593309" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_eigs_algorithm_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1aec579f5c9e74979f0eefdfff7171ad50" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_eigs_algorithm_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a0efa5ad790980fdcdfe2f2aca8c7a3a2" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_flipped</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a33cb800a0dfafb915d7f86fd8113b4ac" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_up_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1afddbfca690826173849d098abc0faa39" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>set_verbose</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1ad9bd916b4d263a47409a074c0c7aa8d0" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>spectra</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a98615eec3cc54b423206fb5cfafc18c6" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>spectra</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1ab2bb19fae77700b2cadbc8ef9d0c336a" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>spectra</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a262007f573f0e36cb37c4b1656707fde" prot="private" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>storage</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1af020e626144e0b5c1070a7924ec3ea3a" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>store_L</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a1f771bcabaff3ca9c65f18dc20264700" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>store_spectra</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a785b7f661b8047c2debcbd127589a206" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>store_spectra_summary</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a4c010a4e28b7a20faf2cd5d04ead6fa1" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>top_dim</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1afe949d7e94ce8836a538d6c950969796" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>up_algorithm_func</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1a3a2fa45aace835e5573ba83c89334c9c" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>use_flipped</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1ae51b445ea6eff709df1436358e3e1f6f" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>verbose</name></member>
      <member refid="classpetls_1_1PersistentSheafLaplacian_1ae9bd3794cb99a3d04fcedd7f4a7e68af" prot="public" virt="non-virtual"><scope>petls::PersistentSheafLaplacian</scope><name>~PersistentSheafLaplacian</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
