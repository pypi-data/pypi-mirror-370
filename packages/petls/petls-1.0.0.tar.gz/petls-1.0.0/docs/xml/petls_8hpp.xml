<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="petls_8hpp" kind="file" language="C++">
    <compoundname>petls.hpp</compoundname>
    <includes refid="typedefs_8hpp" local="yes">typedefs.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">chrono</includes>
    <includedby refid="eigs__algorithms_8cpp" local="yes">/home/jones657/PersistentLaplacians/cpp/src/eigenvalues/eigs_algorithms.cpp</includedby>
    <includedby refid="spectra__algorithms_8cpp" local="yes">/home/jones657/PersistentLaplacians/cpp/src/eigenvalues/spectra_algorithms.cpp</includedby>
    <includedby refid="petls_8cpp" local="yes">/home/jones657/PersistentLaplacians/cpp/src/petls.cpp</includedby>
    <includedby refid="Complex_8hpp" local="yes">/home/jones657/PersistentLaplacians/cpp/include/petls_headers/core/Complex.hpp</includedby>
    <includedby refid="PersistentSheafLaplacian_8hpp" local="yes">/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp</includedby>
    <includedby refid="Rips_8hpp" local="yes">/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/Rips.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>typedefs.hpp</label>
        <link refid="typedefs_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/petls.hpp</label>
        <link refid="petls_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="3">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/jones657/PersistentLaplacians/cpp/src/eigenvalues/spectra_algorithms.cpp</label>
        <link refid="spectra__algorithms_8cpp"/>
      </node>
      <node id="9">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/dFlag.hpp</label>
        <link refid="dFlag_8hpp"/>
      </node>
      <node id="10">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/Rips.hpp</label>
        <link refid="Rips_8hpp"/>
      </node>
      <node id="8">
        <label>/home/jones657/PersistentLaplacians/cpp/src/variants/Alpha.cpp</label>
        <link refid="Alpha_8cpp"/>
      </node>
      <node id="5">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/core/Complex.hpp</label>
        <link refid="Complex_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/jones657/PersistentLaplacians/cpp/src/eigenvalues/eigs_algorithms.cpp</label>
        <link refid="eigs__algorithms_8cpp"/>
      </node>
      <node id="6">
        <label>/home/jones657/PersistentLaplacians/cpp/src/core/Complex.cpp</label>
        <link refid="Complex_8cpp"/>
      </node>
      <node id="11">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/PersistentSheafLaplacian.hpp</label>
        <link refid="PersistentSheafLaplacian_8hpp"/>
      </node>
      <node id="1">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/petls.hpp</label>
        <link refid="petls_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/jones657/PersistentLaplacians/cpp/include/petls_headers/variants/Alpha.hpp</label>
        <link refid="Alpha_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/jones657/PersistentLaplacians/cpp/src/petls.cpp</label>
        <link refid="petls_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpetls_1_1timer" prot="public">petls::timer</innerclass>
    <innerclass refid="structpetls_1_1Profile" prot="public">petls::Profile</innerclass>
    <innernamespace refid="namespacepetls">petls</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PLs_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLs_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="typedefs_8hpp" kindref="compound">typedefs.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepetls" kindref="compound">petls</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://stackoverflow.com/questions/54503795/rounding-numbers-below-a-certain-threshold-to-zero-in-eigen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a778933d6c8a8e2ff066cbeb1952dd4cb" kindref="member">round_zeros</ref>(<ref refid="typedefs_8hpp_1a27a64e317582fd2a2dbdc95fa84b7ebd" kindref="member">spectra_vec</ref>&amp;<sp/>inout,<sp/><ref refid="typedefs_8hpp_1ac240cc0d46f103fa1a410237a0b8853f" kindref="member">spectra_type</ref><sp/>threshold);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a82c29a3139a7c630afadc4bc856bb1b1" kindref="member">print_full_matrix_precise</ref>(<ref refid="typedefs_8hpp_1af75f469c1ca3f8752d6f67a115e57af4" kindref="member">SparseMatrixInt</ref><sp/>m);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a82c29a3139a7c630afadc4bc856bb1b1" kindref="member">print_full_matrix_precise</ref>(Eigen::MatrixXf<sp/>m);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a82c29a3139a7c630afadc4bc856bb1b1" kindref="member">print_full_matrix_precise</ref>(Eigen::MatrixXi<sp/>m);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>print_full_matrix_precise(SparseMatrixInt<sp/>m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a82c29a3139a7c630afadc4bc856bb1b1" kindref="member">print_full_matrix_precise</ref>(<ref refid="typedefs_8hpp_1aa0b819682f9cdac0ae1234aed46106e6" kindref="member">SparseMatrix_PL</ref><sp/>m);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a82c29a3139a7c630afadc4bc856bb1b1" kindref="member">print_full_matrix_precise</ref>(<ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref><sp/>m);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1ab98e64ef83c354051df7fcc1f04810c6" kindref="member">print_vector_precise</ref>(Eigen::VectorXd<sp/>v);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1ab98e64ef83c354051df7fcc1f04810c6" kindref="member">print_vector_precise</ref>(Eigen::VectorXf<sp/>v);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1ad6ad7c05ffc192d0d9a3a2a90f2b2ec8" kindref="member">print_spectra</ref>(std::vector&lt;std::tuple&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>,<sp/><ref refid="typedefs_8hpp_1afc86493f3736a9d186d249149b2e5e22" kindref="member">filtration_type</ref>,<sp/>std::vector&lt;spectra_type&gt;&gt;&gt;<sp/>spectra);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1a8ef10ae87f953877b3e165ce1c692113" kindref="member">matrix_is_diagonal</ref>(<ref refid="typedefs_8hpp_1a260197b742c38462952d018c69ff535a" kindref="member">DenseMatrix_PL</ref><sp/>&amp;M);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepetls_1aa9555d2cbae6050832f4e0e40bc5e8e3" kindref="member">reindex_boundaries</ref>(std::vector&lt;std::vector&lt;std::tuple&lt;int,int,int&gt;&gt;&gt;<sp/>&amp;boundaries_triples,std::vector&lt;SparseMatrixInt&gt;<sp/>&amp;reindexed_boundaries);</highlight></codeline>
<codeline lineno="25" refid="structpetls_1_1timer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpetls_1_1timer" kindref="compound">timer</ref>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>;</highlight></codeline>
<codeline lineno="28" refid="structpetls_1_1timer_1a5cbfcce1a8dcca1517ac557ba8273e00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::_V2::steady_clock::time_point<sp/><ref refid="structpetls_1_1timer_1a5cbfcce1a8dcca1517ac557ba8273e00" kindref="member">start_t</ref>;</highlight></codeline>
<codeline lineno="29" refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer_1a5cbfcce1a8dcca1517ac557ba8273e00" kindref="member">start_t</ref><sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32" refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_t<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref><sp/>=<sp/>(std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(end_t<sp/>-<sp/><ref refid="structpetls_1_1timer_1a5cbfcce1a8dcca1517ac557ba8273e00" kindref="member">start_t</ref>)).count();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structpetls_1_1Profile" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpetls_1_1Profile" kindref="compound">Profile</ref>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="structpetls_1_1Profile_1a51478027c8eafac01cb57244923c5640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a51478027c8eafac01cb57244923c5640" kindref="member">dims</ref>;</highlight></codeline>
<codeline lineno="41" refid="structpetls_1_1Profile_1ae35cd96312431c772b2313c15dbd0067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;filtration_type&gt;<sp/><ref refid="structpetls_1_1Profile_1ae35cd96312431c772b2313c15dbd0067" kindref="member">filtration_a</ref>;</highlight></codeline>
<codeline lineno="42" refid="structpetls_1_1Profile_1a6aea868016b998379db6252024563994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;filtration_type&gt;<sp/><ref refid="structpetls_1_1Profile_1a6aea868016b998379db6252024563994" kindref="member">filtration_b</ref>;</highlight></codeline>
<codeline lineno="43" refid="structpetls_1_1Profile_1aaeb354652cdd295a397fbc8120978513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1aaeb354652cdd295a397fbc8120978513" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="44" refid="structpetls_1_1Profile_1afbd9ed6c686b176395c9105f9533c5c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1afbd9ed6c686b176395c9105f9533c5c6" kindref="member">eigs</ref>;</highlight></codeline>
<codeline lineno="45" refid="structpetls_1_1Profile_1a494eccd82c7b0c82b7d314606868b138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1a494eccd82c7b0c82b7d314606868b138" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="46" refid="structpetls_1_1Profile_1a70d4f888805c7f5bd1a0bb45e9930dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1a70d4f888805c7f5bd1a0bb45e9930dda" kindref="member">L_up</ref>;</highlight></codeline>
<codeline lineno="47" refid="structpetls_1_1Profile_1aec54a34176b56e38259d1aa8aa5467ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1aec54a34176b56e38259d1aa8aa5467ee" kindref="member">L_down</ref>;</highlight></codeline>
<codeline lineno="48" refid="structpetls_1_1Profile_1af9c6914b926b3f66cbeac7fab980ac01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpetls_1_1timer" kindref="compound">timer</ref><sp/><ref refid="structpetls_1_1Profile_1af9c6914b926b3f66cbeac7fab980ac01" kindref="member">sum_up_down</ref>;</highlight></codeline>
<codeline lineno="49" refid="structpetls_1_1Profile_1a70a4551fd74ee63f6688efc4ec48747e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a70a4551fd74ee63f6688efc4ec48747e" kindref="member">durations_all</ref>;</highlight></codeline>
<codeline lineno="50" refid="structpetls_1_1Profile_1ac673f1ac6c59cf0e14e0d88636867628" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1ac673f1ac6c59cf0e14e0d88636867628" kindref="member">durations_eigs</ref>;</highlight></codeline>
<codeline lineno="51" refid="structpetls_1_1Profile_1a1d398d19c16411838f38aef7ed05d7d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a1d398d19c16411838f38aef7ed05d7d0" kindref="member">durations_L</ref>;</highlight></codeline>
<codeline lineno="52" refid="structpetls_1_1Profile_1aeb7f6df7a299b7d7e01043a8e61767f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1aeb7f6df7a299b7d7e01043a8e61767f9" kindref="member">durations_L_up</ref>;</highlight></codeline>
<codeline lineno="53" refid="structpetls_1_1Profile_1a77267df8dd9470862d4e8b379d06c7ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a77267df8dd9470862d4e8b379d06c7ba" kindref="member">durations_L_down</ref>;</highlight></codeline>
<codeline lineno="54" refid="structpetls_1_1Profile_1af546a345a964f882b4973a310dcf8c45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1af546a345a964f882b4973a310dcf8c45" kindref="member">durations_sum_up_down</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structpetls_1_1Profile_1a15f4f51be7d4a71d8596a9cf9284838c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a15f4f51be7d4a71d8596a9cf9284838c" kindref="member">L_rows</ref>;</highlight></codeline>
<codeline lineno="57" refid="structpetls_1_1Profile_1a21b6a8a80c624dcdb099d09ccbd72f68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structpetls_1_1Profile_1a21b6a8a80c624dcdb099d09ccbd72f68" kindref="member">bettis</ref>;</highlight></codeline>
<codeline lineno="58" refid="structpetls_1_1Profile_1a481c4dfa70037cf608a9a84a42b710f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;spectra_type&gt;<sp/><ref refid="structpetls_1_1Profile_1a481c4dfa70037cf608a9a84a42b710f8" kindref="member">lambdas</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;double&gt;<sp/>sparsity_L;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;int&gt;<sp/>simplices_added;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1ad43adb4becbf6d2b8c19d66971fc1b5b" kindref="member">to_csv</ref>(std::string<sp/>filename);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="structpetls_1_1Profile_1af0c2238258d998f4a52d0ba82b66e621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1af0c2238258d998f4a52d0ba82b66e621" kindref="member">start_all</ref>(){this-&gt;all.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="65" refid="structpetls_1_1Profile_1a368bfbeb85014d4fd04187a554d54391" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a368bfbeb85014d4fd04187a554d54391" kindref="member">start_eigs</ref>(){<ref refid="structpetls_1_1Profile_1afbd9ed6c686b176395c9105f9533c5c6" kindref="member">eigs</ref>.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="66" refid="structpetls_1_1Profile_1ac2c73fee91e87ca5b80516afb559cd78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1ac2c73fee91e87ca5b80516afb559cd78" kindref="member">start_L</ref>(){<ref refid="structpetls_1_1Profile_1a494eccd82c7b0c82b7d314606868b138" kindref="member">L</ref>.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="67" refid="structpetls_1_1Profile_1ab9b9b45f566bf61d201984b8713930e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1ab9b9b45f566bf61d201984b8713930e0" kindref="member">start_L_up</ref>(){<ref refid="structpetls_1_1Profile_1a70d4f888805c7f5bd1a0bb45e9930dda" kindref="member">L_up</ref>.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="68" refid="structpetls_1_1Profile_1a3c0d2427d92d9608d48f0ea7e4d5d5bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a3c0d2427d92d9608d48f0ea7e4d5d5bf" kindref="member">start_L_down</ref>(){<ref refid="structpetls_1_1Profile_1aec54a34176b56e38259d1aa8aa5467ee" kindref="member">L_down</ref>.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="69" refid="structpetls_1_1Profile_1a106fb711dfa76b8b844883b05482d979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a106fb711dfa76b8b844883b05482d979" kindref="member">start_sum_up_down</ref>(){<ref refid="structpetls_1_1Profile_1af9c6914b926b3f66cbeac7fab980ac01" kindref="member">sum_up_down</ref>.<ref refid="structpetls_1_1timer_1a89f1356a78c56ff0e4319ced1dfbce3b" kindref="member">start</ref>();}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structpetls_1_1Profile_1a3095b873da4dca99fdbaace1f41ee490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a3095b873da4dca99fdbaace1f41ee490" kindref="member">stop_all</ref>(){<ref refid="structpetls_1_1Profile_1aaeb354652cdd295a397fbc8120978513" kindref="member">all</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1a70a4551fd74ee63f6688efc4ec48747e" kindref="member">durations_all</ref>.push_back(<ref refid="structpetls_1_1Profile_1aaeb354652cdd295a397fbc8120978513" kindref="member">all</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="72" refid="structpetls_1_1Profile_1a91697602cbee218865ec0380f9d39797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a91697602cbee218865ec0380f9d39797" kindref="member">stop_eigs</ref>(){<ref refid="structpetls_1_1Profile_1afbd9ed6c686b176395c9105f9533c5c6" kindref="member">eigs</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1ac673f1ac6c59cf0e14e0d88636867628" kindref="member">durations_eigs</ref>.push_back(<ref refid="structpetls_1_1Profile_1afbd9ed6c686b176395c9105f9533c5c6" kindref="member">eigs</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="73" refid="structpetls_1_1Profile_1a6442a4501ad542de13b7cd7bd55db275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a6442a4501ad542de13b7cd7bd55db275" kindref="member">stop_L</ref>(){<ref refid="structpetls_1_1Profile_1a494eccd82c7b0c82b7d314606868b138" kindref="member">L</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1a1d398d19c16411838f38aef7ed05d7d0" kindref="member">durations_L</ref>.push_back(<ref refid="structpetls_1_1Profile_1a494eccd82c7b0c82b7d314606868b138" kindref="member">L</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="74" refid="structpetls_1_1Profile_1a339b97cd50245a9588a897714ecf3b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a339b97cd50245a9588a897714ecf3b3a" kindref="member">stop_L_up</ref>(){<ref refid="structpetls_1_1Profile_1a70d4f888805c7f5bd1a0bb45e9930dda" kindref="member">L_up</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1aeb7f6df7a299b7d7e01043a8e61767f9" kindref="member">durations_L_up</ref>.push_back(<ref refid="structpetls_1_1Profile_1a70d4f888805c7f5bd1a0bb45e9930dda" kindref="member">L_up</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="75" refid="structpetls_1_1Profile_1aebed4a6189fac97e3955b1e894958318" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1aebed4a6189fac97e3955b1e894958318" kindref="member">stop_L_down</ref>(){<ref refid="structpetls_1_1Profile_1aec54a34176b56e38259d1aa8aa5467ee" kindref="member">L_down</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1a77267df8dd9470862d4e8b379d06c7ba" kindref="member">durations_L_down</ref>.push_back(<ref refid="structpetls_1_1Profile_1aec54a34176b56e38259d1aa8aa5467ee" kindref="member">L_down</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="76" refid="structpetls_1_1Profile_1a0531f88eebd05f61d800eebdd48a1331" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpetls_1_1Profile_1a0531f88eebd05f61d800eebdd48a1331" kindref="member">stop_sum_up_down</ref>(){<ref refid="structpetls_1_1Profile_1af9c6914b926b3f66cbeac7fab980ac01" kindref="member">sum_up_down</ref>.<ref refid="structpetls_1_1timer_1a1b20df3ba0a524a3ec77a57f3fe8f805" kindref="member">stop</ref>();<sp/><ref refid="structpetls_1_1Profile_1af546a345a964f882b4973a310dcf8c45" kindref="member">durations_sum_up_down</ref>.push_back(<ref refid="structpetls_1_1Profile_1af9c6914b926b3f66cbeac7fab980ac01" kindref="member">sum_up_down</ref>.<ref refid="structpetls_1_1timer_1ab72e781a40601e219d5788043eb2709c" kindref="member">duration</ref>);}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/jones657/PersistentLaplacians/cpp/include/petls_headers/petls.hpp"/>
  </compounddef>
</doxygen>
