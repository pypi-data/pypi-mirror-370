[project]
authors = [
    { name = "Strana Dev", email = "pypi@stranadev.ru" },
]
dependencies = [
    "pydantic>=2.8.2",
    "httpx>=0.27.0",
    "orjson>=3.10.7",
]
description = "REST API Client for Camunda 7"
name = "camunda-client"
readme = "README.md"
requires-python = ">=3.11"
version = "0.10.0"

[project.license]
text = "Apache-2.0"

[project.urls]
Repository = "https://github.com/stranadev/camunda-client"

[build-system]
build-backend = "pdm.backend"
requires = [
    "pdm-backend",
]

[tool.pdm.dev-dependencies]
dev = [
    "commitizen>=3.13.0",
    "ruff>=0.1.9",
    "black>=23.12.0",
    "mypy>=1.8.0",
    "isort>=5.13.2",
    "coverage>=7.3.4",
    "pytest>=7.4.4",
    "greenlet>=3.0.3",
]

[tool.pdm.scripts.lint]
composite = [
    "ruff check {args: .} --fix --show-fixes",
    "black {args: .}",
    "ruff check {args: .} --fix --show-fixes",
    "mypy {args: .}",
]

[tool.pdm.scripts.test]
composite = [
    "coverage run",
    "coverage report",
]

[tool.coverage.run]
branch = true
command_line = "-m pytest -vv"
concurrency = [
    "greenlet",
    "thread",
]
omit = [
    "camunda_client/clients/*",
    "camunda_client/exceptions.py",
    "camunda_client/types_.py",
]
source = [
    "camunda_client",
]

[tool.commitizen]
changelog_start_rev = "0.7.1"
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "$version"
update_changelog_on_bump = true
version = "0.10.0"
version_files = [
    "camunda_client/__init__.py",
    "pyproject.toml:version",
]

[tool.mypy]
exclude = "(examples)|(t.py)"
plugins = [
    "pydantic.mypy",
]
follow_imports = "normal"
ignore_missing_imports = false
strict = true
allow_redefinition = false
disallow_any_explicit = false
ignore_errors = false
local_partial_types = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true

[tool.isort]
profile = "black"

[tool.lint.ruff]
fixable = [
    "F",
    "E",
    "W",
    "I",
    "COM",
    "UP",
    "RUF",
]
src = [
    "src",
    "tests",
]

[tool.lint.ruff.lint]
ignore = [
    "E501",
    "A003",
    "ANN101",
    "ANN102",
    "D",
    "PD",
    "INP",
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
    "RUF001",
    "RUF002",
    "RUF003",
]
select = [
    "ALL",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
    "PT006",
    "S311",
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]
staticmethod-decorators = [
    "staticmethod",
]
