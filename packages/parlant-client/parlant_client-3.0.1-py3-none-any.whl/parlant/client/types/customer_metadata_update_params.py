# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CustomerMetadataUpdateParams(UniversalBaseModel):
    """
    Parameters for updating a customer's extra metadata.
    """

    set_: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.Optional[str]]],
        FieldMetadata(alias="set"),
    ] = pydantic.Field(default=None)
    """
    Key-value pairs (`str: str`) to describe the customer
    """

    unset: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Extra metadata keys to remove
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
