# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .guideline_content import GuidelineContent
import typing
from .tool_id import ToolId
from .guideline_payload_operation_dto import GuidelinePayloadOperationDto
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GuidelinePayload(UniversalBaseModel):
    """
    Payload data for a Guideline operation
    """

    content: GuidelineContent
    tool_ids: typing.List[ToolId]
    operation: GuidelinePayloadOperationDto
    updated_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the guideline
    """

    action_proposition: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the action proposition is enabled
    """

    properties_proposition: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Properties proposition
    """

    journey_node_proposition: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Journey step proposition
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
