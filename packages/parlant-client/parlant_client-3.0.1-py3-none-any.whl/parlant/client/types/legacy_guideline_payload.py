# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .guideline_content import GuidelineContent
from .guideline_payload_operation_dto import GuidelinePayloadOperationDto
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LegacyGuidelinePayload(UniversalBaseModel):
    """
    Payload data for a Guideline operation
    """

    content: GuidelineContent
    operation: GuidelinePayloadOperationDto
    updated_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the guideline
    """

    coherence_check: bool = pydantic.Field()
    """
    Whether to check for contradictions with other Guidelines
    """

    connection_proposition: bool = pydantic.Field()
    """
    Whether to propose logical connections with other Guidelines
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
