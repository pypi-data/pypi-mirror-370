# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LegacyTerm(UniversalBaseModel):
    """
    Represents a glossary term associated with an agent.

    Use this model for representing complete term information in API responses.
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the term
    """

    name: str = pydantic.Field()
    """
    The name of the term, e.g., 'Gas' in blockchain.
    """

    description: str = pydantic.Field()
    """
    A detailed description of the term
    """

    synonyms: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    A list of synonyms for the term, including alternate contexts if applicable.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
