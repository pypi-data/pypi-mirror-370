# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GuidelineInvoiceData(UniversalBaseModel):
    """
    Evaluation results for a Guideline, including action propositions
    """

    action_proposition: typing.Optional[str] = pydantic.Field(default=None)
    """
    Proposed action proposition
    """

    properties_proposition: typing.Optional[
        typing.Dict[str, typing.Optional[typing.Any]]
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
