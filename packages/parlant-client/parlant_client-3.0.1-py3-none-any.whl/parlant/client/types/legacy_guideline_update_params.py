# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .legacy_guideline_connection_update_params import (
    LegacyGuidelineConnectionUpdateParams,
)
from .guideline_tool_association_update_params import (
    GuidelineToolAssociationUpdateParams,
)
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LegacyGuidelineUpdateParams(UniversalBaseModel):
    """
    Parameters for updating Guideline objects.
    """

    connections: typing.Optional[LegacyGuidelineConnectionUpdateParams] = None
    tool_associations: typing.Optional[GuidelineToolAssociationUpdateParams] = None
    enabled: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
