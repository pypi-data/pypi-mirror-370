# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .coherence_check import CoherenceCheck
from .connection_proposition import ConnectionProposition
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LegacyGuidelineInvoiceData(UniversalBaseModel):
    """
    Evaluation results for a Guideline, including contradiction checks and connection proposals
    """

    coherence_checks: typing.List[CoherenceCheck]
    connection_propositions: typing.Optional[typing.List[ConnectionProposition]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
