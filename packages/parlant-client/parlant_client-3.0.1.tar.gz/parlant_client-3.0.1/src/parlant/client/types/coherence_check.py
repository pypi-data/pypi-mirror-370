# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .coherence_check_kind_dto import CoherenceCheckKindDto
from .guideline_content import GuidelineContent
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class CoherenceCheck(UniversalBaseModel):
    """
    Potential contradiction found between guidelines
    """

    kind: CoherenceCheckKindDto
    first: GuidelineContent
    second: GuidelineContent
    issue: str = pydantic.Field()
    """
    Description of the contradiction or conflict between Guidelines
    """

    severity: int = pydantic.Field()
    """
    Numerical rating of the contradiction's severity (1-10, where 10 is most severe)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
