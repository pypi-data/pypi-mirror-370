name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on: 
  push:
    branches: [ main, master, develop ]  # Only run on main branches
  pull_request:
    branches: [ main, master, develop ]  # Also run on PRs for testing
  release:
    types: [published]  # Run on releases for PyPI publishing

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # TestPyPI - runs on every push/PR for testing builds
  publish-to-testpypi:
    name: Test build on TestPyPI 🧪
    needs: build
    runs-on: ubuntu-latest
    # Only run on pushes and PRs, not on releases
    if: github.event_name != 'release'

    environment:
      name: testpypi
      url: https://test.pypi.org/p/FHIL_python_utils

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Test upload to TestPyPI (test only)
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true
        # Use a test-only flag if available
        skip-existing: true

  # PyPI - only runs on actual releases
  publish-to-pypi:
    name: Publish to PyPI 🚀
    if: github.event_name == 'release'  # Only publish to PyPI on releases
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/FHIL_python_utils
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
