[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wise-mise-mcp"
version = "0.1.1"
description = "An intelligent MCP server for wise mise task management and organization"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
authors = [{ name = "Jarad DeLorenzo", email = "jaradd@gmail.com" }]
keywords = [
  "mcp",
  "mise",
  "task-management",
  "automation",
  "build-tools",
  "development",
  "workflow",
  "mise-en-place",
  "intelligent",
  "ai-assistant",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
  "Typing :: Typed",
]
dependencies = [
  "fastmcp>=2.11.3",
  "networkx>=3.5",
  "pydantic>=2.11.7",
  "tomli>=2.2.1; python_version<'3.11'",
  "tomli-w>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/delorenj/wise-mise-mcp"
Repository = "https://github.com/delorenj/wise-mise-mcp.git"
Issues = "https://github.com/delorenj/wise-mise-mcp/issues"
Discussions = "https://github.com/delorenj/wise-mise-mcp/discussions"
Changelog = "https://github.com/delorenj/wise-mise-mcp/blob/main/docs/CHANGELOG.md"
Documentation = "https://github.com/delorenj/wise-mise-mcp#readme"

[project.scripts]
wise-mise-mcp = "wise_mise_mcp.__main__:main"

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.0.0",
  "black>=23.0.0",
  "ruff>=0.1.0",
  "mypy>=1.5.0",
  "types-toml",
]
build = ["build>=1.0.0", "twine>=4.0.0"]
docs = ["sphinx>=7.0.0", "sphinx-rtd-theme>=1.3.0", "myst-parser>=2.0.0"]

[tool.hatch.build.targets.wheel]
packages = ["wise_mise_mcp"]

[tool.hatch.build.targets.sdist]
include = [
  "/wise_mise_mcp",
  "/tests",
  "/README.md",
  "/LICENSE",
  "/docs/CHANGELOG.md",
  "/pyproject.toml",
]
exclude = [
  "/.git",
  "/.github",
  "/docs",
  "/examples",
  "/__pycache__",
  "/*.egg-info",
  "/build",
  "/dist",
  "/.pytest_cache",
  "/.mypy_cache",
  "/.ruff_cache",
  "/node_modules",
  "/.claude-flow",
  "/coordination",
  "/hive",
  "/memory",
  "/config",
  "/*.md",
  "!README.md",
  "!CHANGELOG.md",
  "/test_*.py",
  "/run_*.py",
  "/main.py",
  "/*.json",
  "/*.lock",
  "/*.ini",
  "/*.toml.bk",
  "/package*.json",
  "/claude-flow*",
]

[tool.black]
line-length = 88
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.ruff_cache
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
  )/
)
'''

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["wise_mise_mcp"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/.*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = ["build>=1.3.0", "twine>=6.1.0"]
