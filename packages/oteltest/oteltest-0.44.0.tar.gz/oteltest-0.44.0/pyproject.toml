[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "oteltest"
dynamic = ["version"]
description = "OpenTelemetry Tester"
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dependencies = [
    "opentelemetry-proto",
    "opentelemetry-api",
    "grpcio",
    "protobuf",
    "flask",
]

[project.urls]
Documentation = "https://github.com/pmcollins/oteltest/"
Issues = "https://github.com/pmcollins/oteltest/issues"
Source = "https://github.com/pmcollins/oteltest/blob/main/oteltest"

[project.scripts]
oteltest = "oteltest.main:main"
otelsink = "oteltest.sink.main:main"
otelviz = "oteltest.viz.main:main"

[tool.hatch.version]
path = "src/oteltest/version.py"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
    "black",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.hatch.envs.default.scripts]
format = "black ."
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[tool.hatch.envs.all]
matrix = [{ python = ["3.8", "3.9", "3.10", "3.11", "3.12"] }]

[tool.hatch.envs.types]
dependencies = [
    "mypy>=1.0.0",
    "pytest",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/oteltest tests}"

[tool.coverage.run]
source_pkgs = ["oteltest", "tests"]
branch = true
parallel = true
omit = [
    "src/oteltest/__about__.py",
]

[tool.coverage.paths]
oteltest = ["src/oteltest", "*/oteltest/src/oteltest"]
tests = ["tests", "*/oteltest/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff.lint]
ignore = ["T201"]

[tool.ruff.lint.per-file-ignores]
"example_scripts/*.py" = ["ALL"]
"tests/**/*.py" = ["ALL"]
