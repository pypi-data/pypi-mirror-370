[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sprout-cli"
dynamic = ["version"]
description = "CLI tool to automate git worktree and Docker Compose development workflows"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "SecDevLab Inc."},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Build Tools",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-setuptools>=68.0",
]

[project.scripts]
sprout = "sprout.__main__:main"

[tool.hatch.version]
path = "src/sprout/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/sprout"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "UP040",  # TypeAlias annotations - not compatible with typer
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S103"]
"src/sprout/cli.py" = ["B008"]  # Typer uses function calls in defaults

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--verbose",
]

[tool.coverage.run]
source_pkgs = ["sprout"]
branch = true
parallel = true
omit = [
    "src/sprout/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict = true
ignore_missing_imports = true

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[dependency-groups]
dev = [
    "pytest-mock>=3.14.1",
    "ruff>=0.12.1",
]
