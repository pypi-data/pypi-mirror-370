# coding: utf-8

"""
    aind-tars-service

     ## aind-tars-service  Service to pull data from TARS.  

    The version of the OpenAPI document: 0.1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_tars_service_client.models.virus_data import VirusData

class TestVirusData(unittest.TestCase):
    """VirusData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirusData:
        """Test VirusData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirusData`
        """
        model = VirusData()
        if include_optional:
            return VirusData(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                updated_by = '',
                id = '',
                rr_id = '',
                aliases = [
                    aind_tars_service_client.models.alias.Alias(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        updated_by = '', 
                        id = '', 
                        citation = null, 
                        is_preferred = True, 
                        name = '', )
                    ],
                capsid = {
                    'key' : null
                    },
                citations = [
                    null
                    ],
                molecules = [
                    null
                    ],
                other_molecules = [
                    null
                    ],
                patents = [
                    null
                    ]
            )
        else:
            return VirusData(
        )
        """

    def testVirusData(self):
        """Test VirusData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
