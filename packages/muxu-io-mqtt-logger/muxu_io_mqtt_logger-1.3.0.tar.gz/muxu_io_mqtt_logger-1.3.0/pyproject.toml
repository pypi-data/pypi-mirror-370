[build-system]
requires = ["setuptools>=78.1.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "muxu-io-mqtt-logger"
version = "1.3.0"
description = "A logger that logs messages to an MQTT topic with systemd journal integration"
authors = [
    {name = "Alex Gonzalez", email = "alex@muxu.io"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: Communications",
]
dependencies = [
    "paho-mqtt>=1.6.1",
    "systemd-python>=234,<235",
    "muxu-io-mqtt-connector",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "bandit[toml]>=1.7.0",
    "pip-audit>=2.6.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --tb=short"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (may require network)",
    "slow: marks tests as slow (may take longer to run)",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variable = ["src/mqtt_logger/__init__.py:__version__"]
build_command = "python -m build"
upload_to_vcs_release = true
commit = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
type = "github"
