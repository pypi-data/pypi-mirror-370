# coding: utf-8

"""
    Scheduling (Alpha)

    No description provided (generated API client)  # noqa: E501

    OpenAPI spec version: v2024.14.0
    
    Generated API client
"""

import pprint
import re  # noqa: F401

import six

class RunPlanTaskWithPlanSchemaRunPlan(object):
    """NOTE: This class is auto generated by the API code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'plan_id': 'int',
        'id': 'int',
        'name': 'str',
        'description': 'str',
        'deleted_at': 'datetime',
        'workspace_id': 'int',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'created_by': 'int',
        'creator': 'RunFlowTaskWithFlowSchemaRunFlowCreator',
        'updated_by': 'int'
    }

    attribute_map = {
        'plan_id': 'planId',
        'id': 'id',
        'name': 'name',
        'description': 'description',
        'deleted_at': 'deleted_at',
        'workspace_id': 'workspaceId',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt',
        'created_by': 'createdBy',
        'creator': 'creator',
        'updated_by': 'updatedBy'
    }

    def __init__(self, plan_id=None, id=None, name=None, description=None, deleted_at=None, workspace_id=None, created_at=None, updated_at=None, created_by=None, creator=None, updated_by=None):  # noqa: E501
        """RunPlanTaskWithPlanSchemaRunPlan - a model defined in API spec"""  # noqa: E501
        self._plan_id = None
        self._id = None
        self._name = None
        self._description = None
        self._deleted_at = None
        self._workspace_id = None
        self._created_at = None
        self._updated_at = None
        self._created_by = None
        self._creator = None
        self._updated_by = None
        self.discriminator = None
        self.plan_id = plan_id
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if deleted_at is not None:
            self.deleted_at = deleted_at
        if workspace_id is not None:
            self.workspace_id = workspace_id
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if created_by is not None:
            self.created_by = created_by
        if creator is not None:
            self.creator = creator
        if updated_by is not None:
            self.updated_by = updated_by

    @property
    def plan_id(self):
        """Gets the plan_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        unique identifier for this object.  # noqa: E501

        :return: The plan_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: int
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this RunPlanTaskWithPlanSchemaRunPlan.

        unique identifier for this object.  # noqa: E501

        :param plan_id: The plan_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: int
        """
        if plan_id is None:
            raise ValueError("Invalid value for `plan_id`, must not be `None`")  # noqa: E501

        self._plan_id = plan_id

    @property
    def id(self):
        """Gets the id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        unique identifier for this object.  # noqa: E501

        :return: The id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RunPlanTaskWithPlanSchemaRunPlan.

        unique identifier for this object.  # noqa: E501

        :param id: The id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501


        :return: The name of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RunPlanTaskWithPlanSchemaRunPlan.


        :param name: The name of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501


        :return: The description of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RunPlanTaskWithPlanSchemaRunPlan.


        :param description: The description of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def deleted_at(self):
        """Gets the deleted_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        The time this object was deleted.  # noqa: E501

        :return: The deleted_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this RunPlanTaskWithPlanSchemaRunPlan.

        The time this object was deleted.  # noqa: E501

        :param deleted_at: The deleted_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: datetime
        """

        self._deleted_at = deleted_at

    @property
    def workspace_id(self):
        """Gets the workspace_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        unique identifier for this object.  # noqa: E501

        :return: The workspace_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: int
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this RunPlanTaskWithPlanSchemaRunPlan.

        unique identifier for this object.  # noqa: E501

        :param workspace_id: The workspace_id of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: int
        """

        self._workspace_id = workspace_id

    @property
    def created_at(self):
        """Gets the created_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        The time this object was first created.  # noqa: E501

        :return: The created_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this RunPlanTaskWithPlanSchemaRunPlan.

        The time this object was first created.  # noqa: E501

        :param created_at: The created_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        The time this object was last updated.  # noqa: E501

        :return: The updated_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this RunPlanTaskWithPlanSchemaRunPlan.

        The time this object was last updated.  # noqa: E501

        :param updated_at: The updated_at of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def created_by(self):
        """Gets the created_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        Identifier of the user who created this object.  # noqa: E501

        :return: The created_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: int
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this RunPlanTaskWithPlanSchemaRunPlan.

        Identifier of the user who created this object.  # noqa: E501

        :param created_by: The created_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: int
        """

        self._created_by = created_by

    @property
    def creator(self):
        """Gets the creator of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501


        :return: The creator of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: RunFlowTaskWithFlowSchemaRunFlowCreator
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this RunPlanTaskWithPlanSchemaRunPlan.


        :param creator: The creator of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: RunFlowTaskWithFlowSchemaRunFlowCreator
        """

        self._creator = creator

    @property
    def updated_by(self):
        """Gets the updated_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501

        Identifier of the user who last updated this object.  # noqa: E501

        :return: The updated_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :rtype: int
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this RunPlanTaskWithPlanSchemaRunPlan.

        Identifier of the user who last updated this object.  # noqa: E501

        :param updated_by: The updated_by of this RunPlanTaskWithPlanSchemaRunPlan.  # noqa: E501
        :type: int
        """

        self._updated_by = updated_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RunPlanTaskWithPlanSchemaRunPlan, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RunPlanTaskWithPlanSchemaRunPlan):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
