# coding: utf-8

"""
    Scheduling (Alpha)

    No description provided (generated API client)  # noqa: E501

    OpenAPI spec version: v2024.14.0
    
    Generated API client
"""

import pprint
import re  # noqa: F401

import six

class FileWatcherTrigger(object):
    """NOTE: This class is auto generated by the API code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'file_watcher': 'FileWatcherTriggerFileWatcher'
    }

    attribute_map = {
        'id': 'id',
        'file_watcher': 'fileWatcher'
    }

    def __init__(self, id=None, file_watcher=None):  # noqa: E501
        """FileWatcherTrigger - a model defined in API spec"""  # noqa: E501
        self._id = None
        self._file_watcher = None
        self.discriminator = None
        if id is not None:
            self.id = id
        self.file_watcher = file_watcher

    @property
    def id(self):
        """Gets the id of this FileWatcherTrigger.  # noqa: E501

        unique identifier for this object.  # noqa: E501

        :return: The id of this FileWatcherTrigger.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FileWatcherTrigger.

        unique identifier for this object.  # noqa: E501

        :param id: The id of this FileWatcherTrigger.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def file_watcher(self):
        """Gets the file_watcher of this FileWatcherTrigger.  # noqa: E501


        :return: The file_watcher of this FileWatcherTrigger.  # noqa: E501
        :rtype: FileWatcherTriggerFileWatcher
        """
        return self._file_watcher

    @file_watcher.setter
    def file_watcher(self, file_watcher):
        """Sets the file_watcher of this FileWatcherTrigger.


        :param file_watcher: The file_watcher of this FileWatcherTrigger.  # noqa: E501
        :type: FileWatcherTriggerFileWatcher
        """
        if file_watcher is None:
            raise ValueError("Invalid value for `file_watcher`, must not be `None`")  # noqa: E501

        self._file_watcher = file_watcher

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FileWatcherTrigger, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileWatcherTrigger):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
