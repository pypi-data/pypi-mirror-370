[project]
name = "OpenOne"
version = "0.1.3"
description = "Model Context Protocol (MCP) server for Alteryx Analytics Cloud"
authors = [
    { name = "Jupiter Bakakeu", email = "jupiter.bakakeu@gmail.com" }
]
dependencies = [
    "requests>=2.28.1",
    "click>=8.1.7",
    "certifi>=14.05.14",
    "six>=1.10",
    "python_dateutil>=2.5.3",
    "urllib3>=1.15.1",
    "fastmcp"
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["mcp", "alteryx", "analytics-cloud", "model-context-protocol"]

[project.optional-dependencies]
dev = [
    "build>=1.2.2.post1",
    "twine>=6.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
openone = "src.openone.main:main"

[tool.hatch.build]
include = [
    "src/**/*.py",
    "test/**/*.py",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
select = ["E", "W", "F", "B", "I"]
line-length = 120

[tool.ruff.lint]
select = ["E", "F"]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
]

[dependency-groups]
dev = [
    "ruff>=0.11.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]