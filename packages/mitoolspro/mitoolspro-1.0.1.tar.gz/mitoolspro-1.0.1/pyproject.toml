[project]
name = "mitoolspro"
dynamic = ["version"]
description = "miToolsPro is a collection of tools for data analysis and visualization."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "cairosvg>=2.8.2",
    "country-converter>=1.3",
    "coverage>=7.7.0",
    "fastparquet>=2024.11.0",
    "folium>=0.19.5",
    "geopandas>=1.0.1",
    "icalendar>=6.1.1",
    "ipywidgets>=8.1.5",
    "jupyter>=1.1.1",
    "linearmodels>=6.1",
    "llvmlite>=0.44.0",
    "lxml>=5.3.1",
    "matplotlib>=3.10.1",
    "moviepy>=2.1.2",
    "nbformat>=5.10.4",
    "nltk>=3.9.1",
    "numba>=0.61.2",
    "numpy>=2.2.4",
    "ollama>=0.4.8",
    "openai>=1.66.3",
    "opencv-python>=4.11.0.86",
    "openpyxl>=3.1.5",
    "pandas>=2.2.3",
    "pandas-datareader>=0.10.0",
    "pdfminer-six>=20250506",
    "plotly>=6.0.1",
    "pyarrow>=19.0.1",
    "pydantic>=2.10.6",
    "pymupdf>=1.25.4",
    "pymupdf4llm>=0.0.17",
    "pynndescent>=0.5.13",
    "pypandoc>=1.15",
    "pypdf2>=3.0.1",
    "python-docx>=1.1.2",
    "pytubefix>=8.12.2",
    "pyvis>=0.3.2",
    "reportlab>=4.3.1",
    "scikit-image>=0.25.2",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.2",
    "seaborn>=0.13.2",
    "seleniumbase>=4.35.7",
    "simpleaudio>=1.0.4",
    "spacy>=3.8.4",
    "sqlalchemy>=2.0.39",
    "statsmodels>=0.14.4",
    "thefuzz>=0.22.1",
    "tls-client>=1.0.1",
    "tokenizers>=0.21.1",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "tqdm>=4.67.1",
    "transformers>=4.49.0",
    "treelib>=1.7.1",
    "umap-learn>=0.5.7",
    "xlsxwriter>=3.2.2",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
tag-regex = "^v(?P<version>\\d+\\.\\d+\\.\\d+)$"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["mitoolspro"]

[tool.hatch.build]
include = [
    "mitoolspro/**/*.py",
]

[tool.hatch.build.targets.sdist]
include = [
    "mitoolspro/**/*.py",
]

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
    "commitizen>=3.29.0",
    "pre-commit>=4.0.0",
    "hatch-vcs>=0.5.0",
    "setuptools-scm>=8.2.0",
]
[project.scripts]
mitoolspro = "mitoolspro.cli:main"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "scm"
update_changelog_on_bump = true
major_version_zero = false
changelog_file = "CHANGELOG.md"
changelog_format = "{{ version_title }}\n{% if previous_version %}{% for type, messages in changelog.items() %}{% if messages %}### {{ type | title }}\n{% for scope, message in messages %}{% if scope %}**{{ scope }}**: {{ message }}{% else %}{{ message }}{% endif %}\n{% endfor %}{% endif %}{% endfor %}{% else %}Initial release{% endif %}\n"

[tool.commitizen.settings]
allowed_prefixes = ["Merge", "Revert", "Pull request", "fixup!", "squash!"]
