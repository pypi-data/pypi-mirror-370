# coding: utf-8

"""
    CyborgDB Service

    REST API for CyborgDB: The Confidential Vector Database

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cyborgdb.openapi_client.models.upsert_request import UpsertRequest

class TestUpsertRequest(unittest.TestCase):
    """UpsertRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpsertRequest:
        """Test UpsertRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpsertRequest`
        """
        model = UpsertRequest()
        if include_optional:
            return UpsertRequest(
                index_key = '',
                index_name = '',
                items = [
                    cyborgdb.openapi_client.models.vector_item.VectorItem(
                        id = '', 
                        vector = [
                            1.337
                            ], 
                        contents = null, 
                        metadata = { }, )
                    ]
            )
        else:
            return UpsertRequest(
                index_key = '',
                index_name = '',
                items = [
                    cyborgdb.openapi_client.models.vector_item.VectorItem(
                        id = '', 
                        vector = [
                            1.337
                            ], 
                        contents = null, 
                        metadata = { }, )
                    ],
        )
        """

    def testUpsertRequest(self):
        """Test UpsertRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
