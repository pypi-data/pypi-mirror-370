[project]
name = "asyncio-thread-runner"
authors = [{name = "lemon24"}]
license = "BSD-3-Clause"
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">=3.11"
keywords = ["async", "sync", "asyncio", "runner", "thread"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Typing :: Typed",
]

[project.urls]
Documentation = "https://github.com/lemon24/asyncio-thread-runner/blob/main/README.md"
Repository = "https://github.com/lemon24/asyncio-thread-runner"
Issues = "https://github.com/lemon24/asyncio-thread-runner/issues"
Changelog = "https://github.com/lemon24/asyncio-thread-runner/blob/main/CHANGES.md"

[dependency-groups]
dev = [
    "pre-commit",
    "tox",
    "flit",
]
tests = [
    "pytest",
    "coverage",
]
typing = [
    "mypy",
]

[build-system]
requires = ["flit_core >=3.11,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
include = [
    ".flake8",
    ".pre-commit-config.yaml",
    "CHANGES.md",
    "run.sh",
    "tests/",
    "*/conftest.py",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.coverage.run]
branch = true
source = ["asyncio_thread_runner", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.mypy]
files = ["src"]
exclude = [".*/conftest.py"]
show_error_codes = true
pretty = true
strict = true

[tool.isort]
profile = "black"
py_version = 311
src_paths = ["src", "tests"]
skip_gitignore = true
force_single_line = true
order_by_type = false
lines_after_imports = 2

[tool.tox]
env_list = [
    "coverage-clean",
    "py314", "py313", "py312", "py311", "pypy311",
    "coverage-report",
    "typing",
]

[tool.tox.env_run_base]
commands = [["./run.sh", "coverage-run", "--append"]]
allowlist_externals = ["./run.sh"]
dependency_groups = ["tests"]

[tool.tox.env.coverage-clean]
deps = ["coverage"]
dependency_groups = []
skip_install = true
commands = [["coverage", "erase"]]

[tool.tox.env.py314]
depends = ["coverage-clean"]
[tool.tox.env.py313]
depends = ["coverage-clean"]
[tool.tox.env.py312]
depends = ["coverage-clean"]
[tool.tox.env.py311]
depends = ["coverage-clean"]
[tool.tox.env.pypy311]
depends = ["coverage-clean"]

[tool.tox.env.coverage-report]
deps = ["coverage"]
dependency_groups = []
skip_install = true
commands = [["./run.sh", "coverage-report"]]
depends = ["py314", "py313", "py312", "py311", "pypy311"]

[tool.tox.env.typing]
dependency_groups = ["typing"]
skip_install = true
commands = [["./run.sh", "typing"]]
