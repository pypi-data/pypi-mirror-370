[build-system]
requires = ["uv_build>=0.8.2,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = "src"
source-exclude = ["bin"]
namespace = false


[project]
name = "edc-test-utils"
version = "2.0.0"
description = "Class and functions for tests for clinicedc/edc projects"
readme = {file = "README.rst", content-type = "text/x-rst"}
license = "GPL-3.0-or-later"
license-files = ["LICEN[CS]E*"]
requires-python = ">=3.12,<3.14"
authors = [
    { name = "Erik van Widenfelt", email = "ew2789@gmail.com" },
]
keywords = [
    "Edc",
    "clinical",
    "clinicedc",
    "django",
    "tests",
    "trials",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "django-webtest>=1.9.13",
    "faker>=37.5.3",
    "model-bakery>=1.20.5",
    "python-dateutil>=2.9.0.post0",
    "requests>=2.32.4",
]

[project.urls]
Homepage = "https://github.com/clinicedc/edc-test-utils"
Documentation = "https://github.com/clinicedc/edc-test-utils/docs"
Repository = "https://github.com/clinicedc/edc-test-utils.git"
Changelog = "https://github.com/clinicedc/edc-test-utils/blob/main/CHANGES"

[dependency-groups]
docs = [
    "furo>=2025.7.19",
    "sphinx>=8.2.3",
    "sphinx-design>=0.6.1",
    "sphinx-inline-tabs>=2023.4.21",
]
lint = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort==5.13.2",
    "ruff>=0.12.5",
]

test = [
    "coverage>=7.10.3",
    "django>=5.2",
    "edc-test-settings>=1.1.2",
    "tox-uv>=1.28.0",
]

[tool.black]
line-length = 88
target-version = ["py312"]
extend-exclude = '''^(.*\/)*\b(migrations|\.venv)\b($|\/.*$)'''

[tool.isort]
profile = "black"
py_version = "312"
skip = [".tox", ".eggs", "migrations", "_version.py", ".venv"]

[tool.coverage.run]
parallel = false
branch = true
source = ["src"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = ["requirements.txt"]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.rstcheck]
ignore_directives = ["toctree"]

[tool.uv.sources]
edc-test-utils = { workspace = true }
