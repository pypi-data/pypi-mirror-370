Metadata-Version: 2.4
Name: antishlopcli
Version: 1.0.1
Summary: AI-Powered Security Vulnerability Scanner
Author: itscool2b
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: openai
Requires-Dist: colorama
Requires-Dist: rich
Requires-Dist: python-dotenv
Requires-Dist: langchain==0.3.23
Requires-Dist: langchain-core==0.3.62
Requires-Dist: langchain-anthropic==0.3.14
Requires-Dist: langchain-community==0.3.21
Requires-Dist: langchain-openai==0.3.12
Requires-Dist: langchain-pinecone==0.2.8
Requires-Dist: langchain-text-splitters==0.3.8
Requires-Dist: langgraph==0.2.67
Requires-Dist: langgraph-checkpoint==2.0.10
Requires-Dist: langgraph-sdk==0.1.51
Requires-Dist: langsmith==0.2.11
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# AntishlopCLI - AI-Powered Security Vulnerability Scanner

A sophisticated security analysis tool that uses intelligent multi-agent systems to detect vulnerabilities in codebases with precision and efficiency.

## Features

- Pattern Detection: Fast regex-based vulnerability scanning
- Context Analysis: Deep AI-powered code flow analysis  
- Compliance Mapping: OWASP, CWE, and regulatory standards
- Intelligent Orchestration: Smart routing based on file risk assessment
- Rich CLI: Terminal interface with live progress tracking
- Multiple Output Formats: Terminal, JSON, and HTML reports

## Installation

```bash
pip install antishlopcli
```

## Quick Start

1. Set your OpenAI API key:
```bash
antishlop --set-key sk-your-openai-api-key-here
```

2. Scan your codebase:
```bash
antishlop /path/to/your/code
```

3. Get JSON output:
```bash
antishlop --output json /path/to/your/code
```

## Usage Examples

### Basic Scan
```bash
# Scan current directory
antishlop .

# Scan specific project
antishlop /home/user/my-webapp
```

### Advanced Options
```bash
# JSON output for CI/CD integration
antishlop --output json ./src > security-report.json

# Scan with file statistics
antishlop --show-stats ./backend
```

## How It Works

AntishlopCLI uses an intelligent multi-agent architecture:

1. **Orchestrator Agent**: Analyzes file risk and routes intelligently
2. **Pattern Detection Agent**: Fast vulnerability scanning
3. **Context Analysis Agent**: Deep code understanding
4. **Compliance Agent**: Standards mapping

## Supported Vulnerability Types

- Injection Flaws: SQL, Command, XSS, XXE, LDAP
- Authentication Issues: Bypass, weak sessions, JWT flaws
- Cryptographic Problems: Weak algorithms, poor randomness
- Business Logic Flaws: Authorization, race conditions
- Framework Vulnerabilities: Django, Flask, React, Express
- Configuration Issues: Hardcoded secrets, insecure settings

## Configuration

Create a `.env` file or use environment variables:

```bash
export OPENAI_API_KEY="sk-your-key-here"
export ANTISHLOP_MODEL="gpt-4o"  # Optional: specify model
```

## License

This project is licensed under the MIT License.

## Security Notice

This tool is for defensive security analysis only. Use responsibly and only on codebases you own or have permission to analyze.
