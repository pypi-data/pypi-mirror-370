[build-system]
requires = ["setuptools", "wheel", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[project]
name = "q-elo-mmr-py"
version = "1.0.2"
readme = "README.md"
description = "Python bindings for Elo-MRR"

[[tool.setuptools-rust.ext-modules]]
target = "elo_mmr_py.elo_mmr_python_bindings"

[tool.cibuildwheel]
skip = "*musllinux* cp38-* cp314* cp313-win32 cp313-win_amd64"
build-verbosity = 1
environment = { VERBOSE = "1" }
test-requires = "pytest"
test-command = "pytest {project}/tests -s -v"

[tool.cibuildwheel.linux]
archs = 'x86_64 aarch64'
environment = 'PATH="$HOME/.cargo/bin:$PATH"'
before-build = "yum install -y openssl-devel && curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y && rustup show"

[tool.cibuildwheel.macos]
archs = 'x86_64 arm64'
environment = 'PATH="$HOME/.cargo/bin:$PATH"'
before-build = "rustup default stable && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*macos*x86_64*"
before-build = "rustup target add x86_64-apple-darwin && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*macos*arm64*"
before-build = "rustup target add aarch64-apple-darwin && rustup show"

[tool.cibuildwheel.windows]
environment = 'PATH="$UserProfile\.cargo\bin;$PATH"'

[[tool.cibuildwheel.overrides]]
select = "*win32*"
before-build = "rustup toolchain install stable-i686-pc-windows-msvc && rustup default stable-i686-pc-windows-msvc && rustup override set stable-i686-pc-windows-msvc && rustup show"

[[tool.cibuildwheel.overrides]]
select = "*win_amd64*"
before-build = "rustup toolchain install stable-x86_64-pc-windows-msvc && rustup default stable-x86_64-pc-windows-msvc && rustup override set stable-x86_64-pc-windows-msvc && rustup show"
