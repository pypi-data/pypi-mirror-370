# coding: utf-8

"""
    Aron API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from vessl.openapi_client.configuration import Configuration


class OrmStripeBillingHistory(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'billing_dt': 'datetime',
        'created_dt': 'datetime',
        'discounted_on_premise_amount': 'float',
        'discounted_seats_amount': 'float',
        'edges': 'OrmStripeBillingHistoryEdges',
        'id': 'int',
        'on_premise_amount': 'float',
        'seats_amount': 'float',
        'stripe_billing_history_organization': 'int',
        'updated_dt': 'datetime'
    }

    attribute_map = {
        'billing_dt': 'billing_dt',
        'created_dt': 'created_dt',
        'discounted_on_premise_amount': 'discounted_on_premise_amount',
        'discounted_seats_amount': 'discounted_seats_amount',
        'edges': 'edges',
        'id': 'id',
        'on_premise_amount': 'on_premise_amount',
        'seats_amount': 'seats_amount',
        'stripe_billing_history_organization': 'stripe_billing_history_organization',
        'updated_dt': 'updated_dt'
    }

    def __init__(self, billing_dt=None, created_dt=None, discounted_on_premise_amount=None, discounted_seats_amount=None, edges=None, id=None, on_premise_amount=None, seats_amount=None, stripe_billing_history_organization=None, updated_dt=None, local_vars_configuration=None):  # noqa: E501
        """OrmStripeBillingHistory - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._billing_dt = None
        self._created_dt = None
        self._discounted_on_premise_amount = None
        self._discounted_seats_amount = None
        self._edges = None
        self._id = None
        self._on_premise_amount = None
        self._seats_amount = None
        self._stripe_billing_history_organization = None
        self._updated_dt = None
        self.discriminator = None

        if billing_dt is not None:
            self.billing_dt = billing_dt
        if created_dt is not None:
            self.created_dt = created_dt
        if discounted_on_premise_amount is not None:
            self.discounted_on_premise_amount = discounted_on_premise_amount
        if discounted_seats_amount is not None:
            self.discounted_seats_amount = discounted_seats_amount
        if edges is not None:
            self.edges = edges
        if id is not None:
            self.id = id
        if on_premise_amount is not None:
            self.on_premise_amount = on_premise_amount
        if seats_amount is not None:
            self.seats_amount = seats_amount
        if stripe_billing_history_organization is not None:
            self.stripe_billing_history_organization = stripe_billing_history_organization
        if updated_dt is not None:
            self.updated_dt = updated_dt

    @property
    def billing_dt(self):
        """Gets the billing_dt of this OrmStripeBillingHistory.  # noqa: E501


        :return: The billing_dt of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: datetime
        """
        return self._billing_dt

    @billing_dt.setter
    def billing_dt(self, billing_dt):
        """Sets the billing_dt of this OrmStripeBillingHistory.


        :param billing_dt: The billing_dt of this OrmStripeBillingHistory.  # noqa: E501
        :type billing_dt: datetime
        """

        self._billing_dt = billing_dt

    @property
    def created_dt(self):
        """Gets the created_dt of this OrmStripeBillingHistory.  # noqa: E501


        :return: The created_dt of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: datetime
        """
        return self._created_dt

    @created_dt.setter
    def created_dt(self, created_dt):
        """Sets the created_dt of this OrmStripeBillingHistory.


        :param created_dt: The created_dt of this OrmStripeBillingHistory.  # noqa: E501
        :type created_dt: datetime
        """

        self._created_dt = created_dt

    @property
    def discounted_on_premise_amount(self):
        """Gets the discounted_on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501


        :return: The discounted_on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: float
        """
        return self._discounted_on_premise_amount

    @discounted_on_premise_amount.setter
    def discounted_on_premise_amount(self, discounted_on_premise_amount):
        """Sets the discounted_on_premise_amount of this OrmStripeBillingHistory.


        :param discounted_on_premise_amount: The discounted_on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501
        :type discounted_on_premise_amount: float
        """

        self._discounted_on_premise_amount = discounted_on_premise_amount

    @property
    def discounted_seats_amount(self):
        """Gets the discounted_seats_amount of this OrmStripeBillingHistory.  # noqa: E501


        :return: The discounted_seats_amount of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: float
        """
        return self._discounted_seats_amount

    @discounted_seats_amount.setter
    def discounted_seats_amount(self, discounted_seats_amount):
        """Sets the discounted_seats_amount of this OrmStripeBillingHistory.


        :param discounted_seats_amount: The discounted_seats_amount of this OrmStripeBillingHistory.  # noqa: E501
        :type discounted_seats_amount: float
        """

        self._discounted_seats_amount = discounted_seats_amount

    @property
    def edges(self):
        """Gets the edges of this OrmStripeBillingHistory.  # noqa: E501


        :return: The edges of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: OrmStripeBillingHistoryEdges
        """
        return self._edges

    @edges.setter
    def edges(self, edges):
        """Sets the edges of this OrmStripeBillingHistory.


        :param edges: The edges of this OrmStripeBillingHistory.  # noqa: E501
        :type edges: OrmStripeBillingHistoryEdges
        """

        self._edges = edges

    @property
    def id(self):
        """Gets the id of this OrmStripeBillingHistory.  # noqa: E501


        :return: The id of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrmStripeBillingHistory.


        :param id: The id of this OrmStripeBillingHistory.  # noqa: E501
        :type id: int
        """

        self._id = id

    @property
    def on_premise_amount(self):
        """Gets the on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501


        :return: The on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: float
        """
        return self._on_premise_amount

    @on_premise_amount.setter
    def on_premise_amount(self, on_premise_amount):
        """Sets the on_premise_amount of this OrmStripeBillingHistory.


        :param on_premise_amount: The on_premise_amount of this OrmStripeBillingHistory.  # noqa: E501
        :type on_premise_amount: float
        """

        self._on_premise_amount = on_premise_amount

    @property
    def seats_amount(self):
        """Gets the seats_amount of this OrmStripeBillingHistory.  # noqa: E501


        :return: The seats_amount of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: float
        """
        return self._seats_amount

    @seats_amount.setter
    def seats_amount(self, seats_amount):
        """Sets the seats_amount of this OrmStripeBillingHistory.


        :param seats_amount: The seats_amount of this OrmStripeBillingHistory.  # noqa: E501
        :type seats_amount: float
        """

        self._seats_amount = seats_amount

    @property
    def stripe_billing_history_organization(self):
        """Gets the stripe_billing_history_organization of this OrmStripeBillingHistory.  # noqa: E501


        :return: The stripe_billing_history_organization of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: int
        """
        return self._stripe_billing_history_organization

    @stripe_billing_history_organization.setter
    def stripe_billing_history_organization(self, stripe_billing_history_organization):
        """Sets the stripe_billing_history_organization of this OrmStripeBillingHistory.


        :param stripe_billing_history_organization: The stripe_billing_history_organization of this OrmStripeBillingHistory.  # noqa: E501
        :type stripe_billing_history_organization: int
        """

        self._stripe_billing_history_organization = stripe_billing_history_organization

    @property
    def updated_dt(self):
        """Gets the updated_dt of this OrmStripeBillingHistory.  # noqa: E501


        :return: The updated_dt of this OrmStripeBillingHistory.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_dt

    @updated_dt.setter
    def updated_dt(self, updated_dt):
        """Sets the updated_dt of this OrmStripeBillingHistory.


        :param updated_dt: The updated_dt of this OrmStripeBillingHistory.  # noqa: E501
        :type updated_dt: datetime
        """

        self._updated_dt = updated_dt

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrmStripeBillingHistory):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OrmStripeBillingHistory):
            return True

        return self.to_dict() != other.to_dict()
