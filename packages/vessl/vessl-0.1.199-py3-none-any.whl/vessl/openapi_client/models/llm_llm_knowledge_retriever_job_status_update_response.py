# coding: utf-8

"""
    Aron API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from vessl.openapi_client.configuration import Configuration


class LlmLLMKnowledgeRetrieverJobStatusUpdateResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'created_by_id': 'int',
        'input_yaml_serialized': 'str',
        'job_number': 'int',
        'llm_knowledge_id': 'int',
        'status': 'str',
        'status_message': 'str'
    }

    attribute_map = {
        'created_by_id': 'createdByID',
        'input_yaml_serialized': 'inputYamlSerialized',
        'job_number': 'jobNumber',
        'llm_knowledge_id': 'llmKnowledgeID',
        'status': 'status',
        'status_message': 'statusMessage'
    }

    def __init__(self, created_by_id=None, input_yaml_serialized=None, job_number=None, llm_knowledge_id=None, status=None, status_message=None, local_vars_configuration=None):  # noqa: E501
        """LlmLLMKnowledgeRetrieverJobStatusUpdateResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._created_by_id = None
        self._input_yaml_serialized = None
        self._job_number = None
        self._llm_knowledge_id = None
        self._status = None
        self._status_message = None
        self.discriminator = None

        if created_by_id is not None:
            self.created_by_id = created_by_id
        if input_yaml_serialized is not None:
            self.input_yaml_serialized = input_yaml_serialized
        if job_number is not None:
            self.job_number = job_number
        if llm_knowledge_id is not None:
            self.llm_knowledge_id = llm_knowledge_id
        if status is not None:
            self.status = status
        if status_message is not None:
            self.status_message = status_message

    @property
    def created_by_id(self):
        """Gets the created_by_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The created_by_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: int
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param created_by_id: The created_by_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type created_by_id: int
        """

        self._created_by_id = created_by_id

    @property
    def input_yaml_serialized(self):
        """Gets the input_yaml_serialized of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The input_yaml_serialized of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._input_yaml_serialized

    @input_yaml_serialized.setter
    def input_yaml_serialized(self, input_yaml_serialized):
        """Sets the input_yaml_serialized of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param input_yaml_serialized: The input_yaml_serialized of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type input_yaml_serialized: str
        """

        self._input_yaml_serialized = input_yaml_serialized

    @property
    def job_number(self):
        """Gets the job_number of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The job_number of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: int
        """
        return self._job_number

    @job_number.setter
    def job_number(self, job_number):
        """Sets the job_number of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param job_number: The job_number of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type job_number: int
        """

        self._job_number = job_number

    @property
    def llm_knowledge_id(self):
        """Gets the llm_knowledge_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The llm_knowledge_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: int
        """
        return self._llm_knowledge_id

    @llm_knowledge_id.setter
    def llm_knowledge_id(self, llm_knowledge_id):
        """Sets the llm_knowledge_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param llm_knowledge_id: The llm_knowledge_id of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type llm_knowledge_id: int
        """

        self._llm_knowledge_id = llm_knowledge_id

    @property
    def status(self):
        """Gets the status of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The status of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param status: The status of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type status: str
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501


        :return: The status_message of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.


        :param status_message: The status_message of this LlmLLMKnowledgeRetrieverJobStatusUpdateResponse.  # noqa: E501
        :type status_message: str
        """

        self._status_message = status_message

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LlmLLMKnowledgeRetrieverJobStatusUpdateResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LlmLLMKnowledgeRetrieverJobStatusUpdateResponse):
            return True

        return self.to_dict() != other.to_dict()
