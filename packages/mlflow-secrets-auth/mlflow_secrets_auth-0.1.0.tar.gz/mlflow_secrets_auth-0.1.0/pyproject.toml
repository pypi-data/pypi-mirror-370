[tool.poetry]
name = "mlflow-secrets-auth"
version = "0.1.0"
description = "MLflow plugin that injects authentication headers from secret managers"
authors = ["Hugo Carvalho <hugodanielsilvacarvalho.hc@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["mlflow", "authentication", "secrets", "vault", "aws", "azure"]
packages = [{ include = "mlflow_secrets_auth", from = "src" }]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration :: Authentication/Directory",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
mlflow-skinny = ">=2.20.4,<4.0"

# Optional provider SDKs (installable via extras)
hvac = { version = ">=2.3.0", optional = true }
boto3 = { version = ">=1.40.11", optional = true }
azure-identity = { version = ">=1.24.0", optional = true }
azure-keyvault-secrets = { version = ">=4.10.0", optional = true }

[tool.poetry.extras]
vault = ["hvac"]
aws = ["boto3"]
azure = ["azure-identity", "azure-keyvault-secrets"]

# Optional: full MLflow server/UI only when you need it locally
[tool.poetry.group.server.dependencies]
mlflow = ">=2.9,<3.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.6"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.12"
mkdocstrings = { extras = ["python"], version = "^0.29.1" }
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.2"
mkdocs-section-index = "^0.3.10"
markdown-include = "^0.8.1"
mkdocs-macros-plugin = "^1.3.7"
mike = "^2.1.3"

[tool.poetry.scripts]
mlflow-secrets-auth = "mlflow_secrets_auth.cli:main"

# MLflow plugin entry point
[tool.poetry.plugins."mlflow.request_auth_provider"]
mlflow_secrets_auth = "mlflow_secrets_auth:SecretsAuthProviderFactory"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

# -------------------------
# Tooling configuration
# -------------------------

[tool.ruff]
preview = true
line-length = 88
target-version = "py311"
fix = true
show-fixes = true

[tool.ruff.lint]
ignore = [
  "E501",  # Line too long (let Black/formatter handle)
  "D203",  # one-blank-line-before-class
  "D213",  # multi-line-summary-second-line
  "BLE001",# blind-except
  "SIM117",# nested-with
]
select = [
  "D","E","F","W","C90","U","ASYNC","T20","COM","EM","ISC","PIE","PT","SIM",
  "TID","ARG","BLE","B","S","C","N","PGH","ERA","PD","RSE","RET","RUF","SLF","FURB"
]
exclude = [".venv","build","dist",".git","__pycache__","migrations"]

[tool.ruff.lint.per-file-ignores]
"scripts/*" = ["T20"]
"tests/*" = ["S101","S108","ARG001","ARG002","ARG005","PT004"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests/unit", "tests/integration"]
markers = [
  "unit: marks tests as unit tests",
  "integration: marks tests as integration tests",
]
filterwarnings = ["ignore::DeprecationWarning"]