[build-system]
requires = ["setuptools>=64.0", "wheel", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "bocode"
description = "BOCoDe is a Python library contains optimization benchmark problems."
license = "MIT"
keywords = ["engineering design", "optimization", "benchmark", "engineering", "bayesian-optimization"]
authors = [
      { name = "Rosen Yu" },
      { name = "Advaith Narayanan" },
      { name = "Cyril Picard" },
      { name = "Faez Ahmed" },
]
dependencies = [
    "botorch",
    "torch",
    "numpy",
    "cocopp",
    "coco-experiment",
    "pygame",
    "Box2D",
    "slientruss3d",
    "openpyxl",
    "diversipy",
    "optproblems",
    "opfunu",
    "gym",
    "gymnasium[MuJoCo]",
    "scipy",
    "gpy >= 1.13.0",
    "onnxruntime>=1.22.0",
    "modact",
    "pandas",
]
readme = "README.md"
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Science/Research",
]

[project.optional-dependencies]
viz = [
    "dash",
    "plotly",
    "matplotlib",
]

[dependency-groups]
doc = [
    "sphinx>=7.0.0,<8.0.0",
    "furo==2024.04.27",
    "sphinx_copybutton==0.5.2",
]

test = [
    "pytest",
    "pytest-cov",
]

dev = [{include-group = "test"}, {include-group = "doc"}]

full = [
    "LassoBench @ git+https://github.com/ksehic/LassoBench.git",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["bocode*"]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[project.urls]
Homepage = "https://github.com/rosenyu304/BOCoDe/"
Repository = "https://github.com/rosenyu304/BOCoDe/"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=bocode --cov-report html --cov-report term"
testpaths = [
    "tests",
]

[tool.ruff]
# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
ignore = ["E741"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
