[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "influxio"
description = "Import and export data into/from InfluxDB"
readme = "README.rst"
keywords = [
  "export",
  "ilp",
  "import",
  "influx",
  "influxdb",
  "line-protocol",
  "lineprotocol",
  "rdbms",
  "sql",
  "sqlalchemy",
  "timeseries",
  "timeseries-data",
  "transfer",
]
license = { text = "MIT" }
authors = [
  { name = "Andreas Motl", email = "andreas.motl@panodata.org" },
  { name = "Richard Pobering", email = "richard.pobering@panodata.org" },
]
requires-python = ">=3.8,<3.14"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Communications",
  "Topic :: Database",
  "Topic :: Documentation",
  "Topic :: Education",
  "Topic :: File Formats",
  "Topic :: Office/Business",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Human Machine Interfaces",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Archiving",
  "Topic :: System :: Logging",
  "Topic :: System :: Monitoring",
  "Topic :: System :: Networking",
  "Topic :: System :: Recovery Tools",
  "Topic :: System :: Systems Administration",
  "Topic :: Text Processing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "click<9",
  "colorama<1",
  "cratedb-toolkit",
  "dask[dataframe]>=2020",
  "fsspec[s3,http]",
  "importlib-metadata; python_version<='3.9'",
  "influx-line==1.0.0",
  "influxdb-client[ciso]<2",
  "line-protocol-parser<2",
  "pandas<2.4",
  "polars<2",
  "psycopg2-binary<3",
  "pueblo>=0.0.7",
  "pyarrow; python_version<='3.9'",
  "sqlalchemy-cratedb>=0.37,<1",
  "sqlalchemy-utils<0.42",
  "universal-pathlib<0.3",
  "yarl<2",
]
optional-dependencies.develop = [
  "black<26",
  "mypy<1.18",
  "poethepoet<1",
  "pyproject-fmt<3",
  "ruff<0.13",
  "sphinx-autobuild==2021.3.14", # Newer versions stopped "watching" appropriately?
  "validate-pyproject<1",
]
optional-dependencies.docs = [
  "furo",
  "myst-parser[linkify]>=0.18,<5",
  "sphinx<9",
  "sphinx-copybutton",
  "sphinx-design-elements<1",
  "sphinxcontrib-mermaid<2",
  "sphinxext-opengraph<1",
]
optional-dependencies.release = [
  "build<2",
  "twine<7",
]
optional-dependencies.test = [
  "pytest<9",
  "pytest-cov<7",
]
urls.changelog = "https://github.com/daq-tools/influxio/blob/main/CHANGES.rst"
urls.documentation = "https://github.com/daq-tools/influxio"
urls.homepage = "https://github.com/daq-tools/influxio"
urls.repository = "https://github.com/daq-tools/influxio"
scripts.influxio = "influxio.cli:cli"

[tool.setuptools.packages.find]
namespaces = false

# ===================
# Tasks configuration
# ===================

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.extend-ignore = [
  # zip() without an explicit strict= parameter
  "B905",
  # df is a bad variable name. Be kinder to your future self.
  "PD901",
  # Unnecessary variable assignment before `return` statement
  "RET504",
  # Unnecessary `elif` after `return` statement
  "RET505",
]

lint.per-file-ignores."doc/conf.py" = [ "A001", "ERA001" ]
lint.per-file-ignores."influxio/util/report.py" = [ "T201" ]
lint.per-file-ignores."tests/*" = [ "S101" ]                 # Use of `assert` detected

[tool.pytest.ini_options]
addopts = "-rA --verbosity=3 --cov --cov-report=term-missing --cov-report=xml"
minversion = "2.0"
log_level = "DEBUG"
log_cli_level = "DEBUG"
log_format = "%(asctime)-15s [%(name)-24s] %(levelname)-8s: %(message)s"
testpaths = [
  "influxio",
  "tests",
]
xfail_strict = true
markers = [
  "examples",
  "slow",
]

[tool.coverage.run]
branch = false
omit = [
  "tests/*",
]
source = [ "influxio" ]

[tool.coverage.report]
fail_under = 0
show_missing = true

[tool.mypy]
packages = [ "influxio" ]
install_types = true
ignore_missing_imports = true
implicit_optional = true
non_interactive = true

[tool.versioningit.vcs]
method = "git-archive"
default-tag = "v0.0.0"
describe-subst = "$Format:%(describe:tags,match=v*)$"

[tool.poe.tasks]

check = [
  "lint",
  "test",
]

docs-autobuild = [
  { cmd = "sphinx-autobuild --open-browser --watch influxio doc doc/_build" },
]
docs-html = [
  { cmd = "sphinx-build -W --keep-going doc doc/_build" },
]
docs-linkcheck = [
  { cmd = "sphinx-build -W --keep-going -b linkcheck doc doc/_build" },
]

format = [
  { cmd = "black ." },
  # Configure Ruff not to auto-fix (remove!) unused variables (F841) and `print` statements (T201).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff check ." },
  { cmd = "black --check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  # { cmd = "mypy" },
]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload --skip-existing dist/*" },
]

test = { cmd = "pytest" }
