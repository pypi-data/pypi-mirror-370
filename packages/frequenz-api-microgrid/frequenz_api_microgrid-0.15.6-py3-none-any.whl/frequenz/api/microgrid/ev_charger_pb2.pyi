"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Contains definitions specific to EV charging stations.

Copyright:
Copyright 2022 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import collections.abc
import frequenz.api.common.components_pb2
import frequenz.api.common.metrics.electrical_pb2
import frequenz.api.common.metrics_pb2
import frequenz.api.microgrid.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ComponentState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ComponentStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ComponentState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    COMPONENT_STATE_UNSPECIFIED: _ComponentState.ValueType  # 0
    """Default state.
    This value is used only when the state information is not available.
    """
    COMPONENT_STATE_STARTING: _ComponentState.ValueType  # 1
    """The EV charging station is starting up."""
    COMPONENT_STATE_NOT_READY: _ComponentState.ValueType  # 2
    """The EV charging station is unplugged or RFID is not working."""
    COMPONENT_STATE_READY: _ComponentState.ValueType  # 3
    """The EV charging station is ready and waiting for a charging request"""
    COMPONENT_STATE_CHARGING: _ComponentState.ValueType  # 4
    """The EV charging station is charging an EV."""
    COMPONENT_STATE_DISCHARGING: _ComponentState.ValueType  # 5
    """The EV charging station is discharging from an EV into the local
    microgrid.
    """
    COMPONENT_STATE_ERROR: _ComponentState.ValueType  # 6
    """The EV charging station is in an error state."""
    COMPONENT_STATE_AUTHORIZATION_REJECTED: _ComponentState.ValueType  # 7
    """The EV charging station rejected the last authorization."""
    COMPONENT_STATE_INTERRUPTED: _ComponentState.ValueType  # 8
    """The EV charging process hes been temporarily interrupted."""
    COMPONENT_STATE_UNKNOWN: _ComponentState.ValueType  # 9
    """The state is provided by the device, but it can not be parsed as any of the
    above (known) states.
    """

class ComponentState(_ComponentState, metaclass=_ComponentStateEnumTypeWrapper):
    """The possible states of an EV charging station."""

COMPONENT_STATE_UNSPECIFIED: ComponentState.ValueType  # 0
"""Default state.
This value is used only when the state information is not available.
"""
COMPONENT_STATE_STARTING: ComponentState.ValueType  # 1
"""The EV charging station is starting up."""
COMPONENT_STATE_NOT_READY: ComponentState.ValueType  # 2
"""The EV charging station is unplugged or RFID is not working."""
COMPONENT_STATE_READY: ComponentState.ValueType  # 3
"""The EV charging station is ready and waiting for a charging request"""
COMPONENT_STATE_CHARGING: ComponentState.ValueType  # 4
"""The EV charging station is charging an EV."""
COMPONENT_STATE_DISCHARGING: ComponentState.ValueType  # 5
"""The EV charging station is discharging from an EV into the local
microgrid.
"""
COMPONENT_STATE_ERROR: ComponentState.ValueType  # 6
"""The EV charging station is in an error state."""
COMPONENT_STATE_AUTHORIZATION_REJECTED: ComponentState.ValueType  # 7
"""The EV charging station rejected the last authorization."""
COMPONENT_STATE_INTERRUPTED: ComponentState.ValueType  # 8
"""The EV charging process hes been temporarily interrupted."""
COMPONENT_STATE_UNKNOWN: ComponentState.ValueType  # 9
"""The state is provided by the device, but it can not be parsed as any of the
above (known) states.
"""
global___ComponentState = ComponentState

class _CableState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CableStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CableState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CABLE_STATE_UNSPECIFIED: _CableState.ValueType  # 0
    """Default state."""
    CABLE_STATE_UNPLUGGED: _CableState.ValueType  # 1
    """No cable is connected to the EV charging station."""
    CABLE_STATE_CHARGING_STATION_PLUGGED: _CableState.ValueType  # 2
    """A cable is connected to the EV charging station, but is not locked with
    it.
    """
    CABLE_STATE_CHARGING_STATION_LOCKED: _CableState.ValueType  # 3
    """A cable is connected to and locked with the EV charging station."""
    CABLE_STATE_EV_PLUGGED: _CableState.ValueType  # 4
    """A cable is connected to and locked with the EV charging station.
    The same cable is connected to the EV, but is not locked with it.
    """
    CABLE_STATE_EV_LOCKED: _CableState.ValueType  # 5
    """A cable is connected to and locked with the EV charging station.
    The same cable is connected to and locked with the EV.
    """

class CableState(_CableState, metaclass=_CableStateEnumTypeWrapper):
    """The possible states of the cable connecting an EV charging station and an
    EV.
    """

CABLE_STATE_UNSPECIFIED: CableState.ValueType  # 0
"""Default state."""
CABLE_STATE_UNPLUGGED: CableState.ValueType  # 1
"""No cable is connected to the EV charging station."""
CABLE_STATE_CHARGING_STATION_PLUGGED: CableState.ValueType  # 2
"""A cable is connected to the EV charging station, but is not locked with
it.
"""
CABLE_STATE_CHARGING_STATION_LOCKED: CableState.ValueType  # 3
"""A cable is connected to and locked with the EV charging station."""
CABLE_STATE_EV_PLUGGED: CableState.ValueType  # 4
"""A cable is connected to and locked with the EV charging station.
The same cable is connected to the EV, but is not locked with it.
"""
CABLE_STATE_EV_LOCKED: CableState.ValueType  # 5
"""A cable is connected to and locked with the EV charging station.
The same cable is connected to and locked with the EV.
"""
global___CableState = CableState

class _ErrorCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ERROR_CODE_UNSPECIFIED: _ErrorCode.ValueType  # 0
    """Unspecified."""
    ERROR_CODE_SWITCH_ON_FAULT: _ErrorCode.ValueType  # 1
    """Something is preventing the DC contactor from being switched on."""
    ERROR_CODE_UNDERVOLTAGE: _ErrorCode.ValueType  # 2
    """AC supply voltage is lower than expected."""
    ERROR_CODE_OVERVOLTAGE: _ErrorCode.ValueType  # 3
    """AC supply voltage is higher than expected."""
    ERROR_CODE_OVERCURRENT: _ErrorCode.ValueType  # 4
    """DC charging voltage is higher than expected."""
    ERROR_CODE_OVERTEMPERATURE: _ErrorCode.ValueType  # 5
    """Temperature in the charging station is higher than expected."""
    ERROR_CODE_UNEXPECTED_PILOT_FAILURE: _ErrorCode.ValueType  # 6
    """EV has sent an unexpected pilot signal."""
    ERROR_CODE_FAULT_CURRENT: _ErrorCode.ValueType  # 7
    """A fault current has been detected."""
    ERROR_CODE_SHORT_CIRCUIT: _ErrorCode.ValueType  # 8
    """A short circuit has been detected."""
    ERROR_CODE_CONFIG_ERROR: _ErrorCode.ValueType  # 9
    """The system is incorrectly configured."""
    ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED: _ErrorCode.ValueType  # 10
    """The system received a request to move to an illegal state."""
    ERROR_CODE_HARDWARE_INACCESSIBLE: _ErrorCode.ValueType  # 11
    """The system cannot access the internal hardware."""
    ERROR_CODE_INTERNAL: _ErrorCode.ValueType  # 12
    """The system has detected an unspecified internal error."""
    ERROR_CODE_CABLE_LOST: _ErrorCode.ValueType  # 13
    """The charging cable was unplugged unexpectedly."""
    ERROR_CODE_CABLE_LOCK_FAILED: _ErrorCode.ValueType  # 14
    """The charging cable could not be locked."""
    ERROR_CODE_CABLE_INVALID: _ErrorCode.ValueType  # 15
    """The charging cable could not be locked."""
    ERROR_CODE_PLUG_UNKNOWN: _ErrorCode.ValueType  # 16
    """The charging cable has an unrecognised plug."""
    ERROR_CODE_CONSUMER_NON_STANDARD: _ErrorCode.ValueType  # 17
    """The connected consumer is not a standard-compliant EV."""

class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper):
    """Enumerated EV charger error codes."""

ERROR_CODE_UNSPECIFIED: ErrorCode.ValueType  # 0
"""Unspecified."""
ERROR_CODE_SWITCH_ON_FAULT: ErrorCode.ValueType  # 1
"""Something is preventing the DC contactor from being switched on."""
ERROR_CODE_UNDERVOLTAGE: ErrorCode.ValueType  # 2
"""AC supply voltage is lower than expected."""
ERROR_CODE_OVERVOLTAGE: ErrorCode.ValueType  # 3
"""AC supply voltage is higher than expected."""
ERROR_CODE_OVERCURRENT: ErrorCode.ValueType  # 4
"""DC charging voltage is higher than expected."""
ERROR_CODE_OVERTEMPERATURE: ErrorCode.ValueType  # 5
"""Temperature in the charging station is higher than expected."""
ERROR_CODE_UNEXPECTED_PILOT_FAILURE: ErrorCode.ValueType  # 6
"""EV has sent an unexpected pilot signal."""
ERROR_CODE_FAULT_CURRENT: ErrorCode.ValueType  # 7
"""A fault current has been detected."""
ERROR_CODE_SHORT_CIRCUIT: ErrorCode.ValueType  # 8
"""A short circuit has been detected."""
ERROR_CODE_CONFIG_ERROR: ErrorCode.ValueType  # 9
"""The system is incorrectly configured."""
ERROR_CODE_ILLEGAL_COMPONENT_STATE_REQUESTED: ErrorCode.ValueType  # 10
"""The system received a request to move to an illegal state."""
ERROR_CODE_HARDWARE_INACCESSIBLE: ErrorCode.ValueType  # 11
"""The system cannot access the internal hardware."""
ERROR_CODE_INTERNAL: ErrorCode.ValueType  # 12
"""The system has detected an unspecified internal error."""
ERROR_CODE_CABLE_LOST: ErrorCode.ValueType  # 13
"""The charging cable was unplugged unexpectedly."""
ERROR_CODE_CABLE_LOCK_FAILED: ErrorCode.ValueType  # 14
"""The charging cable could not be locked."""
ERROR_CODE_CABLE_INVALID: ErrorCode.ValueType  # 15
"""The charging cable could not be locked."""
ERROR_CODE_PLUG_UNKNOWN: ErrorCode.ValueType  # 16
"""The charging cable has an unrecognised plug."""
ERROR_CODE_CONSUMER_NON_STANDARD: ErrorCode.ValueType  # 17
"""The connected consumer is not a standard-compliant EV."""
global___ErrorCode = ErrorCode

@typing.final
class Metadata(google.protobuf.message.Message):
    """The EV charger metadata."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    type: frequenz.api.common.components_pb2.EvChargerType.ValueType
    """The EV charger type."""
    def __init__(
        self,
        *,
        type: frequenz.api.common.components_pb2.EvChargerType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["type", b"type"]) -> None: ...

global___Metadata = Metadata

@typing.final
class State(google.protobuf.message.Message):
    """State message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMPONENT_STATE_FIELD_NUMBER: builtins.int
    CABLE_STATE_FIELD_NUMBER: builtins.int
    component_state: global___ComponentState.ValueType
    """The state of the overall component."""
    cable_state: global___CableState.ValueType
    """The state of the charging cable."""
    def __init__(
        self,
        *,
        component_state: global___ComponentState.ValueType = ...,
        cable_state: global___CableState.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cable_state", b"cable_state", "component_state", b"component_state"]) -> None: ...

global___State = State

@typing.final
class Error(google.protobuf.message.Message):
    """Error message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    MSG_FIELD_NUMBER: builtins.int
    code: global___ErrorCode.ValueType
    """The error code."""
    level: frequenz.api.microgrid.common_pb2.ErrorLevel.ValueType
    """The error severity level."""
    msg: builtins.str
    """The error message."""
    def __init__(
        self,
        *,
        code: global___ErrorCode.ValueType = ...,
        level: frequenz.api.microgrid.common_pb2.ErrorLevel.ValueType = ...,
        msg: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "level", b"level", "msg", b"msg"]) -> None: ...

global___Error = Error

@typing.final
class Data(google.protobuf.message.Message):
    """EV charger data."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DC_FIELD_NUMBER: builtins.int
    AC_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    @property
    def dc(self) -> frequenz.api.common.metrics.electrical_pb2.DC:
        """DC metrics of the EV charging station.
        Contains data only if DC charging is supported by the EV charging station.
        (in which case, the type of the EV charging station is TYPE_DC or
        TYPE_HYBRID)
        """

    @property
    def ac(self) -> frequenz.api.common.metrics.electrical_pb2.AC:
        """AC metrics of the EV charging station.
        Contains data only if AC charging is supported by the EV charging station.
        (in which case, the type of the EV charging station is TYPE_AC or
        TYPE_HYBRID)
        """

    @property
    def temperature(self) -> frequenz.api.common.metrics_pb2.Metric:
        """The overall temperature of the EV charger.
        In degree Celsius (°C).
        """

    def __init__(
        self,
        *,
        dc: frequenz.api.common.metrics.electrical_pb2.DC | None = ...,
        ac: frequenz.api.common.metrics.electrical_pb2.AC | None = ...,
        temperature: frequenz.api.common.metrics_pb2.Metric | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["ac", b"ac", "dc", b"dc", "temperature", b"temperature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["ac", b"ac", "dc", b"dc", "temperature", b"temperature"]) -> None: ...

global___Data = Data

@typing.final
class Properties(google.protobuf.message.Message):
    """EV charger properties."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIRMWARE_VER_FIELD_NUMBER: builtins.int
    firmware_ver: builtins.str
    """The firmware version of the component."""
    def __init__(
        self,
        *,
        firmware_ver: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["firmware_ver", b"firmware_ver"]) -> None: ...

global___Properties = Properties

@typing.final
class EvCharger(google.protobuf.message.Message):
    """EvCharger details"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROPERTIES_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> global___Properties:
        """The component properties"""

    @property
    def state(self) -> global___State:
        """The EV charging station's state."""

    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Error]:
        """A list of errors encountered the component. An empty list implies no error."""

    @property
    def data(self) -> global___Data:
        """An EV charger data object."""

    def __init__(
        self,
        *,
        properties: global___Properties | None = ...,
        state: global___State | None = ...,
        errors: collections.abc.Iterable[global___Error] | None = ...,
        data: global___Data | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "properties", b"properties", "state", b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "errors", b"errors", "properties", b"properties", "state", b"state"]) -> None: ...

global___EvCharger = EvCharger
