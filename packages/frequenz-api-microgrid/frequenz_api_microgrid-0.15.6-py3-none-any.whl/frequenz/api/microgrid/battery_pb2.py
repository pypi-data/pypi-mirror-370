# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frequenz/api/microgrid/battery.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from frequenz.api.microgrid import common_pb2 as frequenz_dot_api_dot_microgrid_dot_common__pb2
from frequenz.api.common import components_pb2 as frequenz_dot_api_dot_common_dot_components__pb2
from frequenz.api.common import metrics_pb2 as frequenz_dot_api_dot_common_dot_metrics__pb2
from frequenz.api.common.metrics import electrical_pb2 as frequenz_dot_api_dot_common_dot_metrics_dot_electrical__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$frequenz/api/microgrid/battery.proto\x12\x1e\x66requenz.api.microgrid.battery\x1a#frequenz/api/microgrid/common.proto\x1a$frequenz/api/common/components.proto\x1a!frequenz/api/common/metrics.proto\x1a,frequenz/api/common/metrics/electrical.proto\"E\n\x08Metadata\x12\x39\n\x04type\x18\x01 \x01(\x0e\x32+.frequenz.api.common.components.BatteryType\"\x91\x01\n\x05State\x12G\n\x0f\x63omponent_state\x18\x01 \x01(\x0e\x32..frequenz.api.microgrid.battery.ComponentState\x12?\n\x0brelay_state\x18\x02 \x01(\x0e\x32*.frequenz.api.microgrid.battery.RelayState\"\x87\x01\n\x05\x45rror\x12\x37\n\x04\x63ode\x18\x01 \x01(\x0e\x32).frequenz.api.microgrid.battery.ErrorCode\x12\x38\n\x05level\x18\x02 \x01(\x0e\x32).frequenz.api.microgrid.common.ErrorLevel\x12\x0b\n\x03msg\x18\x03 \x01(\t\"\x82\x02\n\x04\x44\x61ta\x12\x36\n\x02\x64\x63\x18\x01 \x01(\x0b\x32*.frequenz.api.common.metrics.electrical.DC\x12;\n\x03soc\x18\x02 \x01(\x0b\x32..frequenz.api.common.metrics.MetricAggregation\x12\x43\n\x0btemperature\x18\x03 \x01(\x0b\x32..frequenz.api.common.metrics.MetricAggregation\x12@\n\x08humidity\x18\x04 \x01(\x0b\x32..frequenz.api.common.metrics.MetricAggregation\"4\n\nProperties\x12\x14\n\x0c\x66irmware_ver\x18\x01 \x01(\t\x12\x10\n\x08\x63\x61pacity\x18\x02 \x01(\x02\"\xea\x01\n\x07\x42\x61ttery\x12>\n\nproperties\x18\x01 \x01(\x0b\x32*.frequenz.api.microgrid.battery.Properties\x12\x34\n\x05state\x18\x02 \x01(\x0b\x32%.frequenz.api.microgrid.battery.State\x12\x35\n\x06\x65rrors\x18\x03 \x03(\x0b\x32%.frequenz.api.microgrid.battery.Error\x12\x32\n\x04\x64\x61ta\x18\x04 \x01(\x0b\x32$.frequenz.api.microgrid.battery.Data*\xbc\x02\n\x0e\x43omponentState\x12\x1f\n\x1b\x43OMPONENT_STATE_UNSPECIFIED\x10\x00\x12\x17\n\x13\x43OMPONENT_STATE_OFF\x10\x01\x12\x18\n\x14\x43OMPONENT_STATE_IDLE\x10\x02\x12\x1c\n\x18\x43OMPONENT_STATE_CHARGING\x10\x03\x12\x1f\n\x1b\x43OMPONENT_STATE_DISCHARGING\x10\x04\x12\x19\n\x15\x43OMPONENT_STATE_ERROR\x10\x05\x12\x1a\n\x16\x43OMPONENT_STATE_LOCKED\x10\x06\x12 \n\x1c\x43OMPONENT_STATE_SWITCHING_ON\x10\x07\x12!\n\x1d\x43OMPONENT_STATE_SWITCHING_OFF\x10\x08\x12\x1b\n\x17\x43OMPONENT_STATE_UNKNOWN\x10\t*\xa5\x01\n\nRelayState\x12\x1b\n\x17RELAY_STATE_UNSPECIFIED\x10\x00\x12\x16\n\x12RELAY_STATE_OPENED\x10\x01\x12\x1b\n\x17RELAY_STATE_PRECHARGING\x10\x02\x12\x16\n\x12RELAY_STATE_CLOSED\x10\x03\x12\x15\n\x11RELAY_STATE_ERROR\x10\x04\x12\x16\n\x12RELAY_STATE_LOCKED\x10\x05*\xf2\x05\n\tErrorCode\x12\x1a\n\x16\x45RROR_CODE_UNSPECIFIED\x10\x00\x12\"\n\x1e\x45RROR_CODE_HIGH_CURRENT_CHARGE\x10\x01\x12%\n!ERROR_CODE_HIGH_CURRENT_DISCHARGE\x10\x02\x12\x1b\n\x17\x45RROR_CODE_HIGH_VOLTAGE\x10\x03\x12\x1a\n\x16\x45RROR_CODE_LOW_VOLTAGE\x10\x04\x12\x1f\n\x1b\x45RROR_CODE_HIGH_TEMPERATURE\x10\x05\x12\x1e\n\x1a\x45RROR_CODE_LOW_TEMPERATURE\x10\x06\x12\x1c\n\x18\x45RROR_CODE_HIGH_HUMIDITY\x10\x07\x12\"\n\x1e\x45RROR_CODE_EXCEEDED_SOP_CHARGE\x10\x08\x12%\n!ERROR_CODE_EXCEEDED_SOP_DISCHARGE\x10\t\x12\x1f\n\x1b\x45RROR_CODE_SYSTEM_IMBALANCE\x10\n\x12\x16\n\x12\x45RROR_CODE_LOW_SOH\x10\x0b\x12\x1a\n\x16\x45RROR_CODE_BLOCK_ERROR\x10\x0c\x12\x1f\n\x1b\x45RROR_CODE_CONTROLLER_ERROR\x10\r\x12\x1a\n\x16\x45RROR_CODE_RELAY_ERROR\x10\x0e\x12(\n$ERROR_CODE_RELAY_CYCLE_LIMIT_REACHED\x10\x0f\x12\x19\n\x15\x45RROR_CODE_FUSE_ERROR\x10\x10\x12*\n&ERROR_CODE_EXTERNAL_POWER_SWITCH_ERROR\x10\x11\x12\x1e\n\x1a\x45RROR_CODE_PRECHARGE_ERROR\x10\x12\x12(\n$ERROR_CODE_SYSTEM_PLAUSIBILITY_ERROR\x10\x13\x12+\n\'ERROR_CODE_SYSTEM_UNDERVOLTAGE_SHUTDOWN\x10\x14\x12!\n\x1d\x45RROR_CODE_CALIBRATION_NEEDED\x10\x15\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'frequenz.api.microgrid.battery_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_COMPONENTSTATE']._serialized_start=1138
  _globals['_COMPONENTSTATE']._serialized_end=1454
  _globals['_RELAYSTATE']._serialized_start=1457
  _globals['_RELAYSTATE']._serialized_end=1622
  _globals['_ERRORCODE']._serialized_start=1625
  _globals['_ERRORCODE']._serialized_end=2379
  _globals['_METADATA']._serialized_start=228
  _globals['_METADATA']._serialized_end=297
  _globals['_STATE']._serialized_start=300
  _globals['_STATE']._serialized_end=445
  _globals['_ERROR']._serialized_start=448
  _globals['_ERROR']._serialized_end=583
  _globals['_DATA']._serialized_start=586
  _globals['_DATA']._serialized_end=844
  _globals['_PROPERTIES']._serialized_start=846
  _globals['_PROPERTIES']._serialized_end=898
  _globals['_BATTERY']._serialized_start=901
  _globals['_BATTERY']._serialized_end=1135
# @@protoc_insertion_point(module_scope)
