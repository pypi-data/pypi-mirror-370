# -------------------------------------------
# Managed by modulesync - DO NOT EDIT
# -------------------------------------------

[project]
name = "easys-ordermanager"
requires-python = ">= 3.11"
dynamic = [
    "authors",
    "classifiers",
    "dependencies",
    "description",
    "license",
    "readme",
    "version",
]

[tool.djlint]
indent = 4
blank_line_after_tag = "load,extends"
profile = "django"
max_line_length = 120
max_attribute_length = 10

# -------------------------------------------
# stubs for static type hinting
# https://github.com/typeddjango/django-stubs
# https://github.com/typeddjango/djangorestframework-stubs
# -------------------------------------------

[tool.django-stubs]
django_settings_module = "example.settings"

#####################################################################
### all settings to be found on https://docs.astral.sh/ruff/settings/
#####################################################################

[tool.ruff]
exclude = [
    ".cache",
    ".git",
    "__pycache",
    "docs",
    "migrations",
    "rh_django_shared",
    "src",
]
line-length = 120

[tool.ruff.lint]
dummy-variable-rgx = "_|dummy"
# See https://docs.astral.sh/ruff/rules/ for all supported rules
select = [
    "A",        # flake8-builtins
    "B",        # flake8-bugbear
    "BLE",      # flake8-blind-except
    "C4",       # flake8-comprehensions
    "C90",      # mccabe
    "COM",      # flake8-commas
    "DJ",       # flake8-django
    "DTZ",      # flake8-datetimez
    "E",        # pycodestyle
    "ERA",      # eradicate
    "F",        # pyflakes
    "G",        # flake8-logging-format
    "I",        # isort
    "ICN",      # flake8-import-conventions
    "INP",      # flake8-no-pep420
    "N",        # pep8-naming
    "PIE",      # flake8-pie
    "PGH",      # pygrep-hooks
    "PL",       # pylint
    "PTH",      # flake8-use-pathlib
    "RET",      # flake8-return
    "RSE",      # flake8-raise
    "RUF",      # ruff-specific rules
    "S",        # flake8-bandit
    "SIM",      # flake8-simplify
    "T20",      # flake8-print
    "TID",      # flake8-tidy-imports
    "UP",       # pyupgrade
    "W",        # pycodestyle
    "YTT",      # flake8-2020
    "ASYNC",    # flake8-async
    "T10",      # flake8-debugger
    "EXE",      # flake8-executable
    "INT",      # flake8-gettext
    "ISC",      # flake8-implicit-str-concat
    "LOG",      # flake8-logging
    "Q",        # flake8-quotes
    "SLOT",     # flake8-slots
    "FLY",      # flynt
    "PERF",     # Perflint
    "FURB",     # refurb
    # useful but too much work to activate all at once
    # "FBT",      # flake8-boolean-trap
    # "SLF",      # flake8-self => check work
    # "ARG",      # flake8-unused-arguments
]

ignore = [
    "N802",     # Function name `{name}` should be lowercase
    "N803",     # Argument name `{name}` should be lowercase
    "N806",     # Variable `{name}` in function should be lowercase
    "N815",     # Variable `{name}` in class scope should not be mixedCase
    "N818",     # Exception name `{name}` should be named with an Error suffix
    "A003",     # Class attribute `{name}` is shadowing a python builtin
    "RUF012",   # Mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.per-file-ignores]
"*/tests/*" = ["S106"]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.mccabe]
max-complexity = 16

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.pylint]
max-branches = 16
max-args = 10
max-public-methods = 50

[tool.coverage.run]
source = [
    "."
]
omit = [
    "../*migrations*",
    "*/migrations/*",
    "*/management/commands/*",
    "*site-packages*",
    "*/tests/*",
    "*/tests.py",
    "*test_*",
    "*factories.py"
]

[tool.coverage.report]
exclude_lines = [
    "def __str__",
    "@abstractmethod",
    "@abc.abstractmethod"
]
omit = [
    "../*migrations*",
    "*/migrations/*",
    "*/management/commands/*",
    "*site-packages*",
    "*/tests/*",
    "*/tests.py",
    "*test_*",
    "*factories.py"
]
