name: Build & publish wheels

on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Upload the built wheels to PyPI?"
        type: boolean
        required: false
        default: false

jobs:
  build:
    name: build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, ubuntu-22.04]
    env:
      CIBW_BUILD: "cp3*-*"
      CIBW_SKIP: "pp* *-musllinux* *-manylinux_i686 *-manylinux2014_i686"
      CIBW_TEST_SKIP: "*"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
      CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
      CIBW_ARCHS_MACOS: arm64
      CIBW_ARCHS_WINDOWS: AMD64
      CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=14.0"
      CIBW_BEFORE_ALL_LINUX: |
        if command -v dnf >/dev/null; then
          dnf install -y 'dnf-command(config-manager)'
          dnf config-manager --set-enabled crb
          dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
          dnf install -y boost-devel gsl-devel CGAL-devel
        else
          yum install -y yum-utils
          yum-config-manager --enable epel
          yum install -y epel-release
          yum install -y boost-devel gsl-devel CGAL-devel || {
            echo "CGAL-devel not found on EL7; exit"; exit 1;
          }
        fi
      CIBW_BEFORE_ALL_MACOS: |
          export MACOSX_DEPLOYMENT_TARGET=14.0
          brew update
          brew install boost@1.85 cgal gsl gmp mpfr
          brew link --overwrite --force boost@1.85
      CIBW_BEFORE_ALL_WINDOWS: >-
        vcpkg install boost:x64-windows gsl:x64-windows cgal:x64-windows
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - run: python -m pip install --upgrade pip cibuildwheel~=2.21 build

      # build wheels
      - run: python -m cibuildwheel --output-dir wheelhouse

      # make a source distribution once
      - if: matrix.os == 'ubuntu-22.04'
        run: python -m build --sdist --outdir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*

  publish:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages-dir: dist
          password: ${{ secrets.PYPI_API_TOKEN }}
