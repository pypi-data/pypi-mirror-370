import jax

from camar import camar_v0
from camar.render import SVG_Visualizer

map_str = """
.....................................
.....................................
.....@@@@..@@@..@...@..@@@..@@@@.....
....@.....@...@.@@.@@.@...@.@...@....
....@.....@...@.@.@.@.@...@.@...@....
....@.....@@@@@.@...@.@@@@@.@@@@.....
....@.....@...@.@...@.@...@.@.@......
....@.....@...@.@...@.@...@.@..@.....
.....@@@@.@...@.@...@.@...@.@...@....
.....................................
.....................................
..@..@@@.......@@..@@@...@@@....@....
....@...@.....@...@...@.@...@...@....
..@.@.........@...@...@.@.....@@@@@..
..@..@@@....@@@@@.@@@@@..@@@....@....
..@.....@.....@...@...@.....@...@....
..@.@...@.....@...@...@.@...@...@....
..@..@@@......@...@...@..@@@....@....
.....................................
.....................................
..............@@@...@@@..............
.............@@@@@.@@@@@.............
.............@@@@@@@@@@@.............
..............@@@@@@@@@..............
...............@@@@@@@...............
................@@@@@................
.................@@@.................
..................@..................
.....................................
"""
env = camar_v0("string_grid", num_agents=32, map_str=map_str)
obs, state = env.reset(jax.random.key(4))

SVG_Visualizer(env, state).save_svg("images/string_grid_camar.svg")

#########################################################
env = camar_v0()
for seed in [1, 2]:
    obs, state = env.reset(jax.random.key(seed))
    SVG_Visualizer(env, state).save_svg(f"images/random_grid_{seed}.svg")


#########################################################
map_str = """
.....#.....
.....#.....
...........
.....#.....
.....#.....
#.####.....
.....###.##
.....#.....
.....#.....
...........
.....#.....
"""
env = camar_v0("string_grid", num_agents=8, map_str=map_str)

for seed in [1, 2]:
    obs, state = env.reset(jax.random.key(seed))

    SVG_Visualizer(env, state).save_svg(f"images/string_grid_{seed}.svg")


#########################################################
map_str_batch = [
    """
.....#.....
.....#.....
...........
.....#.....
.....#.....
#.####.....
.....###.##
.....#.....
.....#.....
...........
.....#.....
""",
    """
..#....#...
..#....#...
.......##..
.......#...
..#....#...
..#....#...
..#....#...
..#........
.##........
..#....#...
..#....#...
""",
]
env = camar_v0("batched_string_grid", num_agents=8, map_str_batch=map_str_batch)

for seed in [1, 3]:
    obs, state = env.reset(jax.random.key(seed))
    SVG_Visualizer(env, state).save_svg(f"images/batched_string_grid_{seed}.svg")


#########################################################
env = camar_v0(
    "labmaze_grid",
    num_maps=2,
    height=41,
    width=41,
    seed=0,
    num_agents=200,
)

for seed in [0, 3]:
    obs, state = env.reset(jax.random.key(seed))
    SVG_Visualizer(env, state).save_svg(f"images/labmaze_grid_{seed}.svg")


#########################################################
env = camar_v0(
    "movingai",
    map_names=["street/Milan_0_256", "bgmaps/AR0072SR"],
    height=128,
    width=128,
    num_agents=400,
)

for seed in [0, 3]:
    obs, state = env.reset(jax.random.key(seed))
    SVG_Visualizer(env, state).save_svg(f"images/movingai_{seed}.svg")


#########################################################
env = camar_v0("caves_cont")

for seed in [2, 9]:
    obs, state = env.reset(jax.random.key(seed))
    SVG_Visualizer(env, state).save_svg(f"images/caves_cont_{seed}.svg")
