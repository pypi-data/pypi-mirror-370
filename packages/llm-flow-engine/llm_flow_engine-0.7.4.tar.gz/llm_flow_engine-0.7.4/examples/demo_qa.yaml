metadata:
  version: "1.1"
  description: "基于增强参数传递的多模型问答汇总工作流"

input:
  type: "start"
  name: "workflow_input"
  data:
    question: ""  # 这将由运行时输入填充

executors:
  - name: text_processing
    type: "task"
    func: text_process
    custom_vars:
      text: "${workflow_input.question}"

  - name: model1_answer
    type: "task"
    func: llm_simple_call
    custom_vars:
      user_input: "${text_processing.output}"
      model: "openai/gpt-oss-20b:free"
    depends_on: ["text_processing"]
    timeout: 30
    retry: 1
    retry_interval: 2

  - name: model2_answer
    type: "task"
    func: llm_simple_call
    custom_vars:
      user_input: "${text_processing.output}"
      model: "z-ai/glm-4.5-air:free"
    depends_on: ["text_processing"]
    timeout: 30
    retry: 1
    retry_interval: 2


  # 使用新的引用格式进行深度分析
  - name: deep_analysis
    type: "task"
    func: llm_simple_call
    custom_vars:
      user_input: "请简要分析以下两个回答的关键信息：\n1. ${model1_answer.output}\n\n2. ${model2_answer.output}"
      model: "openai/gpt-oss-20b:free"
    depends_on: ["model1_answer", "model2_answer"]
    timeout: 120
    retry: 2
    retry_interval: 3

output:
  type: "end"
  name: "workflow_output"
  data:
    original_question: "${workflow_input.question}"
    processed_question: "${text_processing.output}"
    model_answers:
      gemma3_1b: "${model1_answer.output}"
      qwen2_5_0_5b: "${model2_answer.output}"
    deep_analysis: "${deep_analysis.output}"
    summary: "基于 ${model1_answer.output} 和 ${model2_answer.output} 的分析结果：${deep_analysis.output}"
