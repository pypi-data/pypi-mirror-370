Metadata-Version: 2.4
Name: frequenz-client-electricity-trading
Version: 0.12.2
Summary: Electricity Trading API client for Python
Author-email: Frequenz Energy-as-a-Service GmbH <floss@frequenz.com>
License: MIT
Project-URL: Documentation, https://frequenz-floss.github.io/frequenz-client-electricity-trading-python/
Project-URL: Changelog, https://github.com/frequenz-floss/frequenz-client-electricity-trading-python/releases
Project-URL: Issues, https://github.com/frequenz-floss/frequenz-client-electricity-trading-python/issues
Project-URL: Repository, https://github.com/frequenz-floss/frequenz-client-electricity-trading-python
Project-URL: Support, https://github.com/frequenz-floss/frequenz-client-electricity-trading-python/discussions/categories/support
Keywords: frequenz,python,lib,library,client-electricity-trading,client,api,python,trading,electricity-trading
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development :: Libraries
Classifier: Typing :: Typed
Requires-Python: <4,>=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click<9,>=8.1.8
Requires-Dist: entsoe-py<0.8.0,>=0.6.16
Requires-Dist: frequenz-api-common<1,>=0.6.5
Requires-Dist: frequenz-api-electricity-trading<0.9.0,>=0.8.0
Requires-Dist: frequenz-channels<2,>=1.6.1
Requires-Dist: frequenz-client-base<0.12.0,>=0.11.0
Requires-Dist: frequenz-client-common<0.4.0,>=0.1.0
Requires-Dist: grpcio<2,>=1.72.1
Requires-Dist: protobuf<8,>=6.31.1
Provides-Extra: dev-flake8
Requires-Dist: flake8==7.3.0; extra == "dev-flake8"
Requires-Dist: flake8-docstrings==1.7.0; extra == "dev-flake8"
Requires-Dist: flake8-pyproject==1.2.3; extra == "dev-flake8"
Requires-Dist: pydoclint==0.6.6; extra == "dev-flake8"
Requires-Dist: pydocstyle==6.3.0; extra == "dev-flake8"
Provides-Extra: dev-formatting
Requires-Dist: black==25.1.0; extra == "dev-formatting"
Requires-Dist: isort==6.0.1; extra == "dev-formatting"
Provides-Extra: dev-mkdocs
Requires-Dist: black==25.1.0; extra == "dev-mkdocs"
Requires-Dist: Markdown==3.8.2; extra == "dev-mkdocs"
Requires-Dist: mike==2.1.3; extra == "dev-mkdocs"
Requires-Dist: mkdocs-gen-files==0.5.0; extra == "dev-mkdocs"
Requires-Dist: mkdocs-literate-nav==0.6.2; extra == "dev-mkdocs"
Requires-Dist: mkdocs-macros-plugin==1.3.7; extra == "dev-mkdocs"
Requires-Dist: mkdocs-material==9.6.15; extra == "dev-mkdocs"
Requires-Dist: mkdocstrings[python]==0.29.1; extra == "dev-mkdocs"
Requires-Dist: mkdocstrings-python==1.16.12; extra == "dev-mkdocs"
Requires-Dist: frequenz-repo-config[lib]==0.13.5; extra == "dev-mkdocs"
Provides-Extra: dev-mypy
Requires-Dist: mypy==1.16.1; extra == "dev-mypy"
Requires-Dist: grpc-stubs==1.53.0.6; extra == "dev-mypy"
Requires-Dist: pandas-stubs==2.3.0.250703; extra == "dev-mypy"
Requires-Dist: types-Markdown==3.8.0.20250415; extra == "dev-mypy"
Requires-Dist: types-protobuf==6.30.2.20250516; extra == "dev-mypy"
Requires-Dist: frequenz-client-electricity-trading[dev-mkdocs,dev-noxfile,dev-pytest]; extra == "dev-mypy"
Provides-Extra: dev-noxfile
Requires-Dist: nox==2025.5.1; extra == "dev-noxfile"
Requires-Dist: frequenz-repo-config[lib]==0.13.5; extra == "dev-noxfile"
Provides-Extra: dev-pylint
Requires-Dist: pylint==3.3.7; extra == "dev-pylint"
Requires-Dist: frequenz-client-electricity-trading[dev-mkdocs,dev-noxfile,dev-pytest]; extra == "dev-pylint"
Provides-Extra: dev-pytest
Requires-Dist: pytest==8.4.1; extra == "dev-pytest"
Requires-Dist: frequenz-repo-config[extra-lint-examples]==0.13.5; extra == "dev-pytest"
Requires-Dist: pytest-mock==3.14.1; extra == "dev-pytest"
Requires-Dist: pytest-asyncio==1.0.0; extra == "dev-pytest"
Requires-Dist: async-solipsism==0.7; extra == "dev-pytest"
Requires-Dist: deepdiff==8.5.0; extra == "dev-pytest"
Provides-Extra: dev
Requires-Dist: frequenz-client-electricity-trading[dev-flake8,dev-formatting,dev-mkdocs,dev-mypy,dev-noxfile,dev-pylint,dev-pytest]; extra == "dev"
Dynamic: license-file

# Frequenz Electricity Trading API Client

[![Build Status](https://github.com/frequenz-floss/frequenz-client-electricity-trading-python/actions/workflows/ci.yaml/badge.svg)](https://github.com/frequenz-floss/frequenz-client-electricity-trading-python/actions/workflows/ci.yaml)
[![PyPI Package](https://img.shields.io/pypi/v/frequenz-client-electricity-trading)](https://pypi.org/project/frequenz-client-electricity-trading/)
[![Docs](https://img.shields.io/badge/docs-latest-informational)](https://frequenz-floss.github.io/frequenz-client-electricity-trading-python/)

## Introduction

Electricity Trading API client for Python
The Frequenz Electricity Trading API client for Python is an easy-to-use Python interface built to interact with the Frequenz Electricity Trading API. It allows you to create orders, get market data, and manage your orders.

## Features

* **Create and manage gridpool orders**: Place new orders, update existing ones, and cancel orders when necessary.
* **Stream live data**: Get real-time updates on market data, including order books, trades, and market prices.
* **Retrieve historical data**: Access historical data on market trades.

## Supported Platforms

The following platforms are officially supported (tested):

* **Python:** 3.11
* **Operating System:** Ubuntu Linux 20.04
* **Architectures:** amd64, arm64

## Usage

### Installation

We assume you are on a system with Python available. If that is not the case,
please [download and install Python](https://www.python.org/downloads/) first.


To install the Frequenz Electricity Trading AP, you probably want to create a new virtual
environment first. For example, if you use a `sh` compatible shell, you can do this:

```sh
python3 -m venv .venv
. .venv/bin/activate
```

Then, just install using `pip`. Replace `VERSION` with the specific version you wish to install:

```sh
# Choose the version you want to install
VERSION=0.2.3
pip install frequenz-client-electricity-trading==$VERSION
```


## Documentation

For more information, please visit the [documentation
website](https://frequenz-floss.github.io/frequenz-client-electricity-trading-python/).


## Contributing

If you want to know how to build this project and contribute to it, please
check out the [Contributing Guide](CONTRIBUTING.md).
