[project]
name = "SoL"
version = "5.14"
description = "Carrom tournaments management"
authors = [
    { name = "Lele Gaifax", email = "lele@metapensiero.it" },
]
dependencies = [
    "alembic",
    "babel",
    "itsdangerous",
    "mako",
    "markupsafe",
    "metapensiero.extjs.desktop",
    "metapensiero.sqlalchemy.proxy",
    "pycountry",
    "pynacl",
    "pyramid",
    "pyramid-mailer",
    "pyramid-mako",
    "pyramid-tm",
    "python-rapidjson",
    "reportlab",
    "repoze.sendmail",
    "ruamel.yaml",
    "ruamel.yaml.clib",
    "sqlalchemy",
    "transaction",
    "translationstring",
    "waitress",
    "xlsxwriter",
    "zope.sqlalchemy",
]
requires-python = ">=3.10"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: JavaScript",
    "Operating System :: OS Independent",
    "Framework :: Pyramid",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Natural Language :: Italian",
    "Topic :: Games/Entertainment",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Development Status :: 5 - Production/Stable",
]
keywords = [
    "web",
    "wsgi",
    "pyramid",
    "carrom",
    "tournaments",
    "swiss system",
    "knockout system",
    "round-robin system",
]

[project.license]
text = "GPLv3+"

[project.urls]
Homepage = "https://sol5.metapensiero.it"
Repository = "https://gitlab.com/metapensiero/SoL"

[project.scripts]
soladmin = "sol.scripts.admin:main"

[project.entry-points."paste.app_factory"]
main = "sol:main"

[project.optional-dependencies]
test = [
    "coverage",
    "metapensiero.sqlalchemy.dbloady",
    "pytest",
    "pytest-cov",
    "webtest",
]
dev = [
    "build",
    "bump-my-version",
    "calmjs.parse",
    "hupper",
    "pygments",
    "requests",
    "rjsmin",
    "secretstorage",
    "sphinx",
    "twine",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.bumpversion]
current_version = "5.14"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<pre_label>[a-zA-Z-]+)(?P<pre_number>0|[1-9]\\d*))?"
serialize = [
    "{major}.{minor}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[tool.bumpversion.parts.pre_label]
values = [
    "dev",
    "rc",
    "final",
]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
glob = "docs/**/conf.py"
search = "release = '{current_version}'"
replace = "release = '{new_version}'"

[[tool.bumpversion.files]]
filename = "src/sol/__init__.py"
search = "__exact_version__ = 'v{current_version}'"
replace = "__exact_version__ = 'v{new_version}'"

[[tool.bumpversion.files]]
glob = "src/sol/locale/*/LC_MESSAGES/sol-*.po"
search = "Project-Id-Version: SoL {current_version}"
replace = "Project-Id-Version: SoL {new_version}"

[tool.pdm.build]
includes = [
    "alembic",
    "src",
]
excludes = [
    "alembic/script.py.mako",
    "alembic/versions/placeholder.txt",
]
package-dir = "src"

[tool.pytest.ini_options]
addopts = "-ra --cov=sol --doctest-modules --ignore=docs"
filterwarnings = [
    "default::DeprecationWarning",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::DeprecationWarning:pyramid.path",
    "ignore::DeprecationWarning:webob.compat",
]
norecursedirs = [
    "_build",
    "alembic",
    "env",
    "tmp",
    ".git",
]

[tool.coverage.run]
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.basedpyright]
include = [
    "src",
]
extraPaths = [
    "src",
    "env/lib/python3.11/site-packages/",
]
reportAny = false
reportImplicitOverride = false
reportImplicitStringConcatenation = false
reportMissingParameterType = false
reportMissingSuperCall = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportUninitializedInstanceVariable = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryComparison = false
reportUntypedFunctionDecorator = false
reportUnusedCallResult = false

[tool.ruff]
src = [
    "src",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.isort]
case-sensitive = true
force-single-line = true
order-by-type = false
