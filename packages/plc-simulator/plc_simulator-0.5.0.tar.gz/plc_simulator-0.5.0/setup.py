# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['plcsimulator']

package_data = \
{'': ['*'], 'plcsimulator': ['examples/*']}

modules = \
['plc-simulator-conf']
entry_points = \
{'console_scripts': ['plcsimulator = plcsimulator.__main__:main']}

setup_kwargs = {
    'name': 'plc-simulator',
    'version': '0.5.0',
    'description': 'PLC Simulation Environment',
    'long_description': '# PLC Simulator\n\nThis project provides an extensible PLC simulation environment.  The MemoryManager provides a configurable linear memory space that is independent of any particular model of PLC.  The IoManager supports a number of simulation functions that can be specified to update memory locations in the MemoryManager\'s memory space.  The FieldbusManager instantiates configured fieldbus-specific objects that simulate the request/response protocols of PLCs.  The fieldbus-specific object to handle incoming requests is mapped by TCP listening port.  The Listener provides a TCP/IP interface with which clients, such as the [plc-data-server](https://github.com/paul-breen/plc-data-server) (PDS), can connect and query simulated PLCs.\n\nSee the [API documentation](https://paul-breen.github.io/plc-simulator/) for further details of each of the simulator\'s components.\n\n## Install\n\nThe [package](https://pypi.org/project/plc-simulator/) can be installed from PyPI (note the package distribution name):\n\n```bash\n$ pip install plc-simulator\n```\n\n## Running the application\n\nThe general usage is to call the plcsimulator package main followed by a configuration file.  As a convenience, the package installs a console script called `plcsimulator` that wraps the call to the package main.  Thus the following two command line invocations are identical:\n\n```bash\n$ python -m plcsimulator plc-simulator-conf.json\n$ plcsimulator plc-simulator-conf.json\n```\n\nSpecifying the `--help` option, will print the [CLI](https://en.wikipedia.org/wiki/Command-line_interface) usage and quit:\n\n```bash\n$ python -m plcsimulator --help \n```\n\n## The configuration\n\nThe configuration contains sections that map to components of the simulator.  These sections specify:\n\n* listener: Socket connection parameters such as host and port.\n* fieldbus_manager: A list of available fieldbus-specific modules.  Each module configuration in the list specifies:\n  + The module and class that provides the fieldbus interface.\n  + The TCP port number that maps to the corresponding one specified in the `listener` configuration.\n  * (Optional) Static configuration used when instantiating the fieldbus object.\n* memory_manager: The size of the required memory space sections.\n  + blen: The number of bits in the `bits` section.  This should be a multiple of 8 and will be rounded up to be so if necessary.\n  + w16len: The number of 16-bit words in the `words16` section.\n  + w32len: The number of 32-bit words in the `words32` section.\n  + w64len: The number of 64-bit words in the `words64` section.\n* io_manager: A list of simulations to run.  What is specified for each simulation configuration depends on the simulation function, but typically includes:\n  + id: (Optional) A meaningful label which is included in logging output.\n  + memspace: The memory space section name, starting address, and number of references (`nbits` for `bits` section, `nwords` for `words*` sections) that the simulation should read/write to.\n  + source: (Optional) Some simulations require the value from a source `memspace` configuration to act as an input to the simulation function.\n  + operands: (Optional) The `operation` function-type simulation requires a list of operands.  An operand can either be a constant value or the value from a source `memspace` configuration.  The operator name must be an operator from the Python [operator library](https://docs.python.org/3/library/operator.html).\n  + function: The function type and any static parameters.\n  + pause: Time (s) to pause between calls of the simulation.\n* logging: A Python logging configuration, provided as input to `logging.config.dictConfig()`.\n \n### An example configuration\n\nThe following example configuration shows most of the available options:\n\n```json\n{\n    "listener": {\n        "host": "localhost",\n        "port": 5555,\n        "backlog": 10\n    },\n    "fieldbus_manager": {\n        "modules": [\n            {\n                "module": "plcsimulator.ModbusModule",\n                "class": "ModbusModule",\n                "id": "modbus",\n                "port": 5555,\n                "conf": {}\n            }\n        ]\n    },\n    "memory_manager": {\n        "memspace": {\n            "blen": 64,\n            "w16len": 800,\n            "w32len": 0,\n            "w64len": 0\n        }\n    },\n    "io_manager": {\n        "simulations": [\n            {\n                "memspace": {"section": "words16", "addr": 0, "nwords": 1},\n                "function": {"type": "counter"},\n                "pause": 0.001\n            },\n            {\n                "memspace": {"section": "words16", "addr": 1, "nwords": 1},\n                "function": {"type": "binary"},\n                "pause": 5\n            },\n            {\n                "memspace": {"section": "words16", "addr": 2, "nwords": 1},\n                "function": {"type": "static", "value": 321},\n                "pause": 60\n            },\n            {\n                "memspace": {"section": "words16", "addr": 3, "nwords": 1},\n                "function": {"type": "sine"},\n                "pause": 0.001\n            },\n            {\n                "memspace": {"section": "words16", "addr": 4, "nwords": 1},\n                "function": {"type": "cosine"},\n                "pause": 0.001\n            },\n            {\n                "memspace": {"section": "words16", "addr": 5, "nwords": 1},\n                "function": {"type": "sawtooth"},\n                "pause": 0.001\n            },\n            {\n                "memspace": {"section": "words16", "addr": 6, "nwords": 1},\n                "function": {"type": "square"},\n                "pause": 0.001\n            },\n            {\n                "id": "range_counter",\n                "memspace": {"section": "words16", "addr": 7, "nwords": 1},\n                "function": {"type": "counter", "range": [10]},\n                "pause": 0.1\n            },\n            {\n                "id": "dec_range_counter",\n                "memspace": {"section": "words16", "addr": 8, "nwords": 1},\n                "function": {"type": "counter", "range": [10, 0]},\n                "pause": 0.1\n            },\n            {\n                "id": "step_range_counter",\n                "memspace": {"section": "words16", "addr": 9, "nwords": 1},\n                "function": {"type": "counter", "range": [0, 10, 2]},\n                "pause": 0.1\n            },\n            {\n                "id": "randrange",\n                "memspace": {"section": "words16", "addr": 10, "nwords": 1},\n                "function": {"type": "randrange", "range": [50, 61]},\n                "pause": 1\n            },\n            {\n                "id": "lognormal",\n                "memspace": {"section": "words16", "addr": 11, "nwords": 1},\n                "function": {"type": "lognormal"},\n                "pause": 1\n            },\n            {\n                "id": "uniform",\n                "memspace": {"section": "words16", "addr": 12, "nwords": 1},\n                "function": {"type": "uniform"},\n                "pause": 1\n            },\n            {\n                "id": "copy_source_0",\n                "memspace": {"section": "words16", "addr": 13, "nwords": 1},\n                "function": {"type": "binary"},\n                "pause": 15\n            },\n            {\n                "id": "copy_source_1",\n                "memspace": {"section": "words16", "addr": 14, "nwords": 1},\n                "function": {"type": "binary"},\n                "pause": 60\n            },\n            {\n                "id": "copy_source_2",\n                "memspace": {"section": "words16", "addr": 15, "nwords": 1},\n                "function": {"type": "binary"},\n                "pause": 20\n            },\n            {\n                "id": "copy_source_3",\n                "memspace": {"section": "words16", "addr": 16, "nwords": 1},\n                "function": {"type": "counter", "range": [80, 0]},\n                "pause": 1\n            },\n            {\n                "id": "copy_dest",\n                "memspace": {"section": "words16", "addr": 20, "nwords": 4},\n                "source": {\n                    "memspace": {"section": "words16", "addr": 13, "nwords": 4}\n                },\n                "function": {"type": "copy"},\n                "pause": 1\n            },\n            {\n                "id": "transform_on",\n                "memspace": {"section": "words16", "addr": 24, "nwords": 1},\n                "source": {\n                    "memspace": {"section": "words16", "addr": 16, "nwords": 1}\n                },\n                "function": {"type": "transform",\n                             "transform": {"in": [0, 10], "out": 1}\n                },\n                "pause": 1\n            },\n            {\n                "id": "transform_off",\n                "memspace": {"section": "words16", "addr": 24, "nwords": 1},\n                "source": {\n                    "memspace": {"section": "words16", "addr": 16, "nwords": 1}\n                },\n                "function": {"type": "transform",\n                             "transform": {"in": [11, 80], "out": 0}\n                },\n                "pause": 1\n            },\n            {\n                "id": "op_arg_a",\n                "memspace": {"section": "words16", "addr": 30, "nwords": 1},\n                "function": {"type": "counter", "range": [1, 11]},\n                "pause": 1\n            },\n            {\n                "id": "op_arg_b",\n                "memspace": {"section": "words16", "addr": 31, "nwords": 1},\n                "function": {"type": "counter", "range": [1, 11]},\n                "pause": 1\n            },\n            {\n                "id": "op_add",\n                "memspace": {"section": "words16", "addr": 32, "nwords": 1},\n                "operands": [\n                    {"memspace": {"section": "words16", "addr": 30, "nwords": 1}},\n                    {"memspace": {"section": "words16", "addr": 31, "nwords": 1}}\n                ],\n                "function": {"type": "operation", "operator": "add"},\n                "pause": 0.5\n            },\n            {\n                "id": "op_floordiv",\n                "memspace": {"section": "words16", "addr": 33, "nwords": 1},\n                "operands": [\n                    {"memspace": {"section": "words16", "addr": 30, "nwords": 1}},\n                    {"value": 2}\n                ],\n                "function": {"type": "operation", "operator": "floordiv"},\n                "pause": 0.5\n            },\n            {\n                "id": "byte_0_bit_0_flip",\n                "memspace": {"section": "bits", "addr": 0, "nbits": 1},\n                "function": {"type": "binary"},\n                "pause": 5\n            },\n            {\n                "id": "byte_0_bit_1_flip",\n                "memspace": {"section": "bits", "addr": 1, "nbits": 1},\n                "function": {"type": "binary"},\n                "pause": 2\n            },\n            {\n                "id": "byte_1_fixed_bits_0_to_2",\n                "memspace": {"section": "bits", "addr": 8, "nbits": 8},\n                "function": {"type": "static", "value": 7},\n                "pause": 60\n            },\n            {\n                "id": "byte_2_range_counter_cycling_bits",\n                "memspace": {"section": "bits", "addr": 16, "nbits": 8},\n                "function": {"type": "counter", "range": [255]},\n                "pause": 0.1\n            }\n        ]\n    },\n    "logging": {\n        "version": 1,\n        "handlers": {\n            "file": {\n                "class": "logging.FileHandler",\n                "filename": "/dev/null",\n                "mode": "a",\n                "formatter": "default"\n            },\n            "console": {\n                "class": "logging.StreamHandler",\n                "formatter": "brief"\n            }\n        },\n        "root": {\n            "level": "INFO",\n            "handlers": ["console", "file"]\n        },\n        "formatters": {\n            "default": {\n                "format": "%(asctime)s %(levelname)s %(threadName)s %(message)s",\n                "datefmt": "%Y-%m-%dT%H:%M:%S"\n            },\n            "brief": {\n                "format": "%(levelname)s %(threadName)s %(message)s"\n            }\n        }\n    }\n}\n```\n\n',
    'author': 'Paul Breen',
    'author_email': 'pbree@bas.ac.uk',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/paul-breen/plc-simulator',
    'packages': packages,
    'package_data': package_data,
    'py_modules': modules,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
