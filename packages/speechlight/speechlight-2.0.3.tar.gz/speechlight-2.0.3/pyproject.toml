[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "speechlight"
authors = [
    { name = "Nick Stockton", email = "nstockton@users.noreply.github.com" },
]
description = "A lightweight Python library providing a common interface to multiple TTS and screen reader APIs."
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "knickknacks>=0.6.0,<1.0.0",
    "pyobjc>=10.0,<11.0; sys_platform == \"darwin\"",
    "pywin32>=306,<400; sys_platform == \"win32\"",
]
dynamic = []
keywords = [
    "blind",
    "braille",
    "screen reader",
    "tts",
    "speech",
    "accessibility",
    "jaws",
    "nvda",
    "sapi",
    "system access",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: MacOS",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Topic :: Adaptive Technologies",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
version = "2.0.3"

[project.license]
text = "MIT"

[project.urls]
homepage = "https://github.com/nstockton/speechlight"
repository = "https://github.com/nstockton/speechlight"
documentation = "https://nstockton.github.io/speechlight"

[dependency-groups]
dev = [
    "pre-commit>=3.5,<4.0",
    "types-pywin32>=306,<400; sys_platform == \"win32\"",
]
docs = [
    "jinja2==3.0.3",
    "mkdocs==1.2.3",
    "mkdocs-autorefs==0.3.1",
    "mkdocs-material==8.1.3",
    "mkdocs-material-extensions==1.0.3",
    "mkdocstrings==0.17.0",
    "pytkdocs @ git+https://github.com/nstockton/pytkdocs.git@9991d493b408c403ac5691074e2af2e509f22926",
]
lint = [
    "isort>=5.13,<6.0",
    "mypy>=1.14,<2.0",
    "ruff>=0.9,<1.0",
]
test = [
    "coverage[toml]>=7.6,<8.0",
]

[tool.pdm.build]
package-dir = "src"
includes = [
    "src/speechlight",
]
excludes = []
source-includes = [
    "tests",
    "uv.lock",
]

[tool.pdm.version]
fallback_version = "0.0.0"
source = "scm"
tag_filter = "[vV][0-9]*"
tag_regex = "^(?:[vV])(?P<version>\\d+\\.\\d+\\.\\d+)(?:.*)$"
write_to = "speechlight/_version.py"
write_template = "__version__: str = \"{}\"\r\n"

[tool.uv]
default-groups = [
    "dev",
    "docs",
    "lint",
    "test",
]
upgrade-package = [
    "speechlight",
]

[tool.ruff]
extend-include = [
    "*.pyw",
]
force-exclude = true
line-length = 110

[tool.ruff.format]
docstring-code-format = false
indent-style = "tab"
line-ending = "cr-lf"

[tool.ruff.lint]
preview = true
select = [
    "ALL",
]
extend-select = [
    "D213",
]
ignore = [
    "ANN",
    "ARG",
    "B019",
    "COM812",
    "D105",
    "D206",
    "D212",
    "EM",
    "G",
    "I",
    "PT",
    "T20",
    "TCH",
    "TRY003",
    "UP007",
    "UP045",
    "W191",
]
typing-modules = [
    "knickknacks.typedef",
]
unfixable = []

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = []

[tool.ruff.lint.flake8-copyright]
author = "Nick Stockton"
min-file-size = 1

[tool.ruff.lint.flake8-implicit-str-concat]
allow-multiline = false

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "D1",
]
"**/_version.py" = [
    "CPY001",
]
"./tests/**" = [
    "D1",
    "PLR0913",
    "PLR0917",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = [
    "typing.overload",
]

[tool.ruff.lint.ruff]
parenthesize-tuple-in-subscript = true

[tool.coverage.report]
precision = 0
fail_under = 100.0
show_missing = true
skip_covered = true
sort = "Cover"
exclude_lines = [
    "\\#\\s*pragma: no cover",
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*def __repr__",
    "^\\s*def __str__",
    "^\\s*if __name__ == .__main__.:",
]

[tool.coverage.run]
source = [
    "speechlight",
]
omit = [
    "src/speechlight/speech_libs/*",
]

[tool.isort]
line_length = 110
color_output = false
supported_extensions = [
    "py",
    "pyi",
    "pys",
    "pyw",
]
extend_skip = []
indent = "tab"
atomic = true
dedup_headings = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
indented_import_headings = false
float_to_top = true
lines_after_imports = 2
force_adds = false
from_first = false
combine_as_imports = false
order_by_type = true
reverse_relative = true
add_imports = [
    "from __future__ import annotations",
]
default_section = "STDLIB"
import_heading_future = "Future Modules:"
import_heading_stdlib = "Built-in Modules:"
import_heading_thirdparty = "Third-party Modules:"
known_third_party = [
    "knickknacks",
    "pywin32",
    "win32com",
    "pywintypes",
    "Cocoa",
]
import_heading_firstparty = "Speechlight Modules:"
known_first_party = [
    "speechlight",
]
import_heading_localfolder = "Local Modules:"

[tool.mypy]
files = [
    "src/speechlight",
    "tests",
    "com_server.py",
]
exclude = "^$"
local_partial_types = true
strict = true
disallow_any_unimported = true
disallow_any_decorated = true
warn_unreachable = true
show_error_codes = true
no_color_output = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = [
    "Cocoa.*",
    "win32com.*",
]
ignore_missing_imports = true
