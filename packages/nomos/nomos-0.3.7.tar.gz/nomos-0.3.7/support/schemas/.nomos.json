{
  "$defs": {
    "ArgDef": {
      "description": "Documentation for an argument of a tool.",
      "properties": {
        "key": {
          "title": "Key",
          "type": "string"
        },
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Desc"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Type"
        }
      },
      "required": [
        "key"
      ],
      "title": "ArgDef",
      "type": "object"
    },
    "BaseModel": {
      "properties": {},
      "title": "BaseModel",
      "type": "object"
    },
    "ExternalTool": {
      "description": "Configuration for an external tool.",
      "properties": {
        "tag": {
          "title": "Tag",
          "type": "string"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Name"
        },
        "kwargs": {
          "anyOf": [
            {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kwargs"
        }
      },
      "required": [
        "tag",
        "name"
      ],
      "title": "ExternalTool",
      "type": "object"
    },
    "FlowConfig": {
      "description": "Configuration for a flow.",
      "properties": {
        "flow_id": {
          "description": "Unique identifier for the flow",
          "title": "Flow Id",
          "type": "string"
        },
        "enters": {
          "description": "Step IDs that can enter this flow",
          "items": {
            "type": "string"
          },
          "title": "Enters",
          "type": "array"
        },
        "exits": {
          "description": "Step IDs that can exit this flow",
          "items": {
            "type": "string"
          },
          "title": "Exits",
          "type": "array"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "components": {
          "additionalProperties": {
            "additionalProperties": true,
            "type": "object"
          },
          "description": "Components to be used in the flow, e.g., memory, tools",
          "title": "Components",
          "type": "object"
        }
      },
      "required": [
        "flow_id",
        "enters",
        "exits"
      ],
      "title": "FlowConfig",
      "type": "object"
    },
    "LLMConfig": {
      "description": "Configuration class for LLM integrations in Nomos.\n\nAttributes:\n    type (str): Type of LLM integration (e.g., \"openai\", \"mistral\", \"gemini\").\n    model (str): Model name to use.\n    kwargs (dict): Additional parameters for the LLM API.",
      "properties": {
        "provider": {
          "enum": [
            "openai",
            "mistral",
            "google",
            "ollama",
            "huggingface"
          ],
          "title": "Provider",
          "type": "string"
        },
        "model": {
          "title": "Model",
          "type": "string"
        },
        "kwargs": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "title": "Kwargs",
          "type": "object"
        }
      },
      "required": [
        "provider",
        "model"
      ],
      "title": "LLMConfig",
      "type": "object"
    },
    "LoggingConfig": {
      "description": "Configuration for logging.",
      "properties": {
        "enable": {
          "title": "Enable",
          "type": "boolean"
        },
        "handlers": {
          "default": [],
          "items": {
            "$ref": "#/$defs/LoggingHandler"
          },
          "title": "Handlers",
          "type": "array"
        }
      },
      "required": [
        "enable"
      ],
      "title": "LoggingConfig",
      "type": "object"
    },
    "LoggingHandler": {
      "description": "Configuration for a logging handler.",
      "properties": {
        "type": {
          "title": "Type",
          "type": "string"
        },
        "level": {
          "title": "Level",
          "type": "string"
        },
        "format": {
          "default": "{time:YYYY-MM-DD at HH:mm:ss} | {level} | {message}",
          "title": "Format",
          "type": "string"
        }
      },
      "required": [
        "type",
        "level"
      ],
      "title": "LoggingHandler",
      "type": "object"
    },
    "MemoryConfig": {
      "description": "Configuration class for memory management in Nomos Agent.\n\nAttributes:\n    type (str): Type of memory management (e.g., \"memory\", \"no_memory\").\n    kwargs (dict): Additional parameters for the memory management.",
      "properties": {
        "type": {
          "default": "base",
          "enum": [
            "base",
            "summarization"
          ],
          "title": "Type",
          "type": "string"
        },
        "kwargs": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kwargs"
        }
      },
      "title": "MemoryConfig",
      "type": "object"
    },
    "Route": {
      "description": "Represents a route (transition) from one step to another in the flow.\n\nAttributes:\n    target (str): The target step ID.\n    condition (str): The condition for taking this route.",
      "properties": {
        "target": {
          "description": "Target step ID to move to when this route is taken.",
          "title": "Target",
          "type": "string"
        },
        "condition": {
          "description": "Condition that must be met to take this route.",
          "title": "Condition",
          "type": "string"
        }
      },
      "required": [
        "target",
        "condition"
      ],
      "title": "Route",
      "type": "object"
    },
    "ServerConfig": {
      "description": "Configuration for the FastAPI server.",
      "properties": {
        "redis_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Redis Url"
        },
        "database_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Database Url"
        },
        "enable_tracing": {
          "default": false,
          "title": "Enable Tracing",
          "type": "boolean"
        },
        "port": {
          "default": 8000,
          "title": "Port",
          "type": "integer"
        },
        "workers": {
          "default": 1,
          "title": "Workers",
          "type": "integer"
        }
      },
      "title": "ServerConfig",
      "type": "object"
    },
    "Step": {
      "description": "Represents a step in the agent's flow.\n\nAttributes:\n    step_id (str): Unique identifier for the step.\n    description (str): Description of the step.\n    routes (List[Route]): List of possible routes from this step.\n    available_tools (List[str]): List of tool names available in this step.\n    tools (List[Tool]): List of Tool objects available in this step.\n    answer_model (Optional[Dict[str, Dict[str, Any]]]): Pydantic model for the agent's answer structure.\n    auto_flow (bool): Flag indicating if the step should automatically flow without additonal inputs or answering.\n    provide_suggestions (bool): Flag indicating if the step should provide suggestions to the user.\nMethods:\n    get_available_routes() -> List[str]: Get the list of available route targets.",
      "properties": {
        "step_id": {
          "title": "Step Id",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "routes": {
          "default": [],
          "items": {
            "$ref": "#/$defs/Route"
          },
          "title": "Routes",
          "type": "array"
        },
        "available_tools": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Available Tools",
          "type": "array"
        },
        "answer_model": {
          "anyOf": [
            {
              "additionalProperties": {
                "additionalProperties": true,
                "type": "object"
              },
              "type": "object"
            },
            {
              "$ref": "#/$defs/BaseModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Answer Model"
        },
        "auto_flow": {
          "default": false,
          "title": "Auto Flow",
          "type": "boolean"
        },
        "quick_suggestions": {
          "default": false,
          "title": "Quick Suggestions",
          "type": "boolean"
        },
        "flow_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Flow Id"
        }
      },
      "required": [
        "step_id",
        "description"
      ],
      "title": "Step",
      "type": "object"
    },
    "ToolDef": {
      "description": "Documentation for a tool.",
      "properties": {
        "desc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Desc"
        },
        "args": {
          "items": {
            "$ref": "#/$defs/ArgDef"
          },
          "title": "Args",
          "type": "array"
        }
      },
      "required": [
        "args"
      ],
      "title": "ToolDef",
      "type": "object"
    },
    "ToolsConfig": {
      "description": "Configuration for tools used by the agent.",
      "properties": {
        "tool_files": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Tool Files",
          "type": "array"
        },
        "external_tools": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalTool"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "External Tools"
        },
        "tool_defs": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/ToolDef"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tool Defs"
        }
      },
      "title": "ToolsConfig",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "Configuration for the agent, including model settings and flow steps.\n\nAttributes:\n    name (str): Name of the agent.\n    persona (Optional[str]): Persona of the agent. Recommended to use a default persona.\n    steps (List[Step]): List of steps in the flow.\n    start_step_id (str): ID of the starting step.\n    tool_arg_descriptions (Dict[str, Dict[str, str]]): Descriptions for tool arguments.\n    system_message (Optional[str]): System message for the agent. Default system message will be used if not provided.\n    show_steps_desc (bool): Flag to show step descriptions.\n    max_errors (int): Maximum number of errors allowed.\n    max_iter (int): Maximum number of iterations allowed.\n    llm (Optional[LLMConfig]): Optional LLM configuration.\nMethods:\n    from_yaml(file_path: str) -> \"AgentConfig\": Load configuration from a YAML file.\n    to_yaml(file_path: str) -> None: Save configuration to a YAML file.",
  "properties": {
    "name": {
      "title": "Name",
      "type": "string"
    },
    "persona": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Persona"
    },
    "steps": {
      "items": {
        "$ref": "#/$defs/Step"
      },
      "title": "Steps",
      "type": "array"
    },
    "start_step_id": {
      "title": "Start Step Id",
      "type": "string"
    },
    "system_message": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "System Message"
    },
    "show_steps_desc": {
      "default": false,
      "title": "Show Steps Desc",
      "type": "boolean"
    },
    "max_errors": {
      "default": 3,
      "title": "Max Errors",
      "type": "integer"
    },
    "max_iter": {
      "default": 10,
      "title": "Max Iter",
      "type": "integer"
    },
    "llm": {
      "anyOf": [
        {
          "$ref": "#/$defs/LLMConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "memory": {
      "anyOf": [
        {
          "$ref": "#/$defs/MemoryConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    },
    "flows": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/$defs/FlowConfig"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Flows"
    },
    "server": {
      "$ref": "#/$defs/ServerConfig",
      "default": {
        "redis_url": null,
        "database_url": null,
        "enable_tracing": false,
        "port": 8000,
        "workers": 1
      }
    },
    "tools": {
      "$ref": "#/$defs/ToolsConfig",
      "default": {
        "tool_files": [],
        "external_tools": null,
        "tool_defs": null
      }
    },
    "logging": {
      "anyOf": [
        {
          "$ref": "#/$defs/LoggingConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    }
  },
  "required": [
    "name",
    "steps",
    "start_step_id"
  ],
  "title": "AgentConfig",
  "type": "object"
}
