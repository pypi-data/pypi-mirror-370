[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "makemcp"
version = "0.1.0"
description = "A lightweight, easy-to-use wrapper for creating MCP (Model Context Protocol) servers in Python"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "MakeMCP Contributors"},
]
keywords = ["mcp", "model-context-protocol", "llm", "ai", "server"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp>=0.1.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

http = [
    "uvicorn>=0.20.0",
    "starlette>=0.27.0",
]

all = [
    "makemcp[dev,http]",
]

[project.urls]
Homepage = "https://github.com/leifmarkthaler/makemcp"
Documentation = "https://github.com/leifmarkthaler/makemcp#readme"
Repository = "https://github.com/leifmarkthaler/makemcp"
Issues = "https://github.com/leifmarkthaler/makemcp/issues"

[project.scripts]
makemcp = "makemcp.cli:main"
mcp-factory = "makemcp.cli_factory:main"

[tool.hatch.build.targets.wheel]
packages = ["src/makemcp"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true