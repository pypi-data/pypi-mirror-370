Metadata-Version: 2.4
Name: marketminer
Version: 0.4.0
Summary: A Python library for scraping financial data from various sources.
Home-page: https://github.com/vaibhavjha100/marketminer
Author: Vaibhav Jha
Author-email: vaibhavjha100@gmail.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries
Classifier: Intended Audience :: Financial and Insurance Industry
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: requests
Requires-Dist: beautifulsoup4
Requires-Dist: pandas
Requires-Dist: aiohttp
Requires-Dist: nest_asyncio
Requires-Dist: selenium
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# MarketMiner

MarketMiner is a Python library for scraping finance-related information — from market news to company fundamentals — in an easy and structured way.

It is designed for analysts, traders, and developers who want quick programmatic access to financial data without relying on expensive APIs.

## Features

- **News Scraper**: Get historical news articles from various sources.
- **Company Fundamentals**: Access financial statements and key metrics for public companies.
- **Utility Functions**: Common helpers for parsing, cleaning, and making requests.

## Installation
```bash
pip install marketminer
```

## Usage

### 1. Scraping News Articles
```python
from marketminer import scrape_economic_times

df = scrape_economic_times(start_date='2023-01-01', end_date='2023-10-01')
print(df.head())
```

### 2. Fetching Company Fundamentals
```python
from marketminer import scrape_fundamentals
financial_data = scrape_fundamentals("TCS")

print("Profit & Loss Statement:")
print(financial_data['profit_loss'].head())
print("Balance Sheet:")
print(financial_data['balance_sheet'].head())
```

## Dependencies

- `requests`: For making HTTP requests.
- `pandas`: For data manipulation and analysis.
- `beautifulsoup4`: For parsing HTML content.
- `selenium`: For web scraping dynamic content.

Note: For fundamentals scraping, ensure you have Google Chrome + ChromeDriver installed.
- Download ChromeDriver: https://chromedriver.chromium.org/downloads

## License
MIT License. Free to use and modify.
