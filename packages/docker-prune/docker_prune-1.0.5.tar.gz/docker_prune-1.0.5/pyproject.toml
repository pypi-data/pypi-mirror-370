[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "docker-prune"
dynamic = ["version"]
authors = [
  { name="t4skforce", email="7422037+t4skforce@users.noreply.github.com" },
]
description = "This tool is ideal for maintaining a clean, performant, and clutter-free Docker ecosystem."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development",
    "Topic :: Utilities",
]

dependencies = [
    "click>=8.2.1",
    "certifi>=2025.8.3",
    "docker>=7.1.0",
    "python-dateutil>=2.9.0",
    "PyYAML>=6.0.2",
    "jsonschema>=4.25.0",
]

license = "MIT"
license-files = ["LICEN[CS]E*"]

[project.scripts]
docker-prune = "docker_prune.main:cli"

[project.urls]
Homepage = "https://github.com/t4skforce/docker-prune"
Source = "https://github.com/t4skforce/docker-prune"
Issues = "https://github.com/t4skforce/docker-prune/issues"

[tool.hatch.version]
source = "regex"
path = "docker_prune/version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/docker_prune",
]

[tool.hatch.build.targets.wheel]
packages = ["docker_prune"]

[tool.pytest.ini_options]
addopts = "--tb=short --strict-markers --cov=docker_prune --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["docker_prune"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
fail_under = 95

[tool.pylint.main]
fail-under = 10
ignore = ["tests"]
ignore-patterns = ["^\\.#"]
jobs = 0
suggestion-mode = true
