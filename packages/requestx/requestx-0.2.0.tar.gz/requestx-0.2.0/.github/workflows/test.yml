name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run Rust tests
      run: cargo test --verbose

    - name: Build Python package
      run: uv run maturin develop

    - name: Verify Python import
      run: uv run python -c "import requestx; print('RequestX import successful')"

    - name: Run Python unit tests
      run: uv run python -m unittest discover tests/ -v

    - name: Run comprehensive tests
      run: uv run python -m unittest discover tests/ -v



  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv run maturin develop

    - name: Run coverage tests
        run: uv run python -m coverage run -m unittest discover tests/ -v && uv run python -m coverage report

    - name: Generate coverage report
      run: |
        uv run coverage run --source=requestx -m unittest discover tests/
        uv run coverage report
        uv run coverage xml
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false