name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  code-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install Python dependencies
      run: uv sync --dev

    - name: Check Rust formatting
      run: cargo fmt --check

    - name: Run Rust clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Check Python formatting with Black
      run: uv run black --check .

    - name: Run Python linting with Ruff
      run: uv run ruff check .

    - name: Run Python type checking with MyPy
      run: uv run mypy .
      continue-on-error: true  # Type checking may have false positives

  build-validation:
    name: Build Validation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Build Rust library
      run: cargo build --release

    - name: Build Python package
      run: uv run maturin develop --release

    - name: Verify package import
      run: uv run python -c "import requestx; print(f'RequestX {requestx.__version__} imported successfully')"

    - name: Run basic functionality test
      run: |
        uv run python -c "
        import requestx
        response = requestx.get('https://httpbin.org/get')
        assert response.status_code == 200
        print('Basic functionality test passed')
        "

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run Rust security audit
      run: cargo audit

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run Python security audit
      run: uv run safety check
      continue-on-error: true  # Safety check may have false positives

  documentation:
    name: Documentation Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --dev

    - name: Build documentation
      run: |
        cd docs
        uv run make html

    - name: Check documentation links
      run: |
        cd docs
        uv run make linkcheck
      continue-on-error: true  # Link checking may fail due to external dependencies