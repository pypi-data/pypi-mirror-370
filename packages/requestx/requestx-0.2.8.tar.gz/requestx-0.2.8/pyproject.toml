[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "requestx"
version = "0.2.8"
description = "High-performance HTTP client for Python with requests-compatible API"
authors = [
{name = "RequestX Team", email = "wu.qunfei@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["http", "requests", "client", "async", "performance"]
dependencies = [
    "coverage>=7.6.1",
    "maturin>=1.9.3",
    "psutil>=7.0.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "httpx>=0.24",
    "aiohttp>=3.8",
    "requests>=2.28",
    "psutil>=7.0.0",
    "black>=23.0",
    "ruff>=0.1",
    "mypy>=1.0",
    "maturin>=1.9.1",
]

[project.urls]
Homepage = "https://github.com/neuesql/requestx"
Repository = "https://github.com/neuesql/requestx"
Documentation = "https://requestx.readthedocs.io"
"Bug Tracker" = "https://github.com/neuesql/requestx/issues"

[tool.maturin]
python-source = "python"
module-name = "requestx._requestx"
features = ["pyo3/extension-module"]
# Cross-platform wheel building configuration
strip = true
# Ensure compatibility with older glibc versions on Linux
compatibility = "linux"
# Build universal2 wheels on macOS for both x86_64 and arm64
universal2 = true

# Using Python's built-in unittest framework instead of pytest
# Test discovery: python -m unittest discover tests/ -v

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "aiohttp>=3.10.11",
    "black>=24.8.0",
    "furo>=2024.8.6",
    "httpx>=0.28.1",
    "linkify-it-py>=2.0.3",
    "mypy>=1.14.1",
    "myst-parser>=3.0.1",
    "requests>=2.32.4",
    "ruff>=0.12.5",
    "sphinx>=7.1.2",
    "sphinx-autodoc-typehints>=2.0.1",
    "sphinx-copybutton>=0.5.2",
]
