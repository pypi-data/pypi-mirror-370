[tool.poetry]
name = "ipor_fusion"
version = "0.23.0"
description = "The IPOR Fusion SDK for Python"
authors = ["Adam Mydlarz <amydlarz@gmail.com>", "rav <rav@ipor.io>"]
readme = "README.md"
license = "BSD-3"
homepage = "https://ipor.io"
repository = "https://github.com/IPOR-Labs/ipor-fusion.py"
documentation = "https://docs.ipor.io/ipor-fusion/fusion-introduction"
keywords = ["ethereum", "solidity", "testing", "development", "framework"]
packages = [{ include = "ipor_fusion", from = "src" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Cython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Natural Language :: English"
]

[tool.poetry.dependencies]
python = "^3.10"
eth-typing = "^5.0.0"
eth-abi = "^5.1.0"
web3 = "^7.7.0"
python-dotenv = "^1.0.1"

[tool.poetry.dev-dependencies]
pytest = "^8.3.3"
testcontainers = "^4.8.2"

[tool.poetry.group.dev.dependencies]
black = "24.8.0"
pylint = "3.3.1"

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
unstable = false

[tool.pylint]
config-file = "pylintrc.toml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
build_command = "rm -rf dist/* && pip install poetry && poetry build"
logging_use_named_masks = true
commit_parser = "angular"
major_on_zero = true
#version_variables = ["semantic_release/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.remote]
type = "github"
token = { env = "GH_TOKEN" }
