[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-instana"
version = "0.1.1"
description = "MCP server for Instana"
authors = [
    {name = "Elina Priyadarshinee", email = "Elina.priyadarshinee1@ibm.com"},
    {name = "Guangya Liu", email = "gyliu@ibm.com"},
    {name = "Isabell Sippli", email = "ischwert@de.ibm.com"},
    {name = "Jay Sharma", email = "Jay.Sharma3@ibm.com"},
    {name = "Madhu Tadiparthi", email = "madhu.tadiparthi@ibm.com"},
    {name = "Riya Kumari", email = "Riya.Kumari3@ibm.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Apache-2.0"}
dependencies = [
    "accelerate==1.6.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.12.14",
    "aiosignal==1.4.0",
    "altair==5.5.0",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "attrs==25.3.0",
    "blinker==1.9.0",
    "cachetools==5.5.2",
    "certifi==2025.1.31",
    "charset-normalizer==3.4.1",
    "click==8.1.8",
    "coverage>=7.10.1",
    "dataclasses-json==0.6.7",
    "fastapi==0.116.1",
    "fastmcp==2.10.3",
    "filelock==3.18.0",
    "frozenlist==1.5.0",
    "fsspec==2025.3.2",
    "gitdb==4.0.12",
    "GitPython==3.1.44",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "httpx-sse==0.4.0",
    "huggingface-hub==0.33.2",
    "ibm-cos-sdk==2.14.2",
    "ibm-cos-sdk-core==2.14.2",
    "ibm-cos-sdk-s3transfer==2.14.2",
    "ibm_watsonx_ai==1.3.26",
    "idna==3.10",
    "instana_client==1.0.0",
    "Jinja2==3.1.6",
    "jmespath==1.0.1",
    "jsonpatch==1.33",
    "jsonpointer==3.0.0",
    "jsonschema==4.24.0",
    "jsonschema-specifications==2024.10.1",
    "jsonschema_pydantic==0.6",
    "langchain==0.3.23",
    "langchain-community==0.3.21",
    "langchain-core==0.3.51",
    "langchain-ibm==0.3.13",
    "langchain-text-splitters==0.3.8",
    "langsmith==0.3.30",
    "lomond==0.3.3",
    "markdown-it-py==3.0.0",
    "MarkupSafe==3.0.2",
    "marshmallow==3.26.1",
    "mcp==1.10.1",
    "mdurl==0.1.2",
    "mpmath==1.3.0",
    "multidict==6.4.3",
    "mypy-extensions==1.0.0",
    "narwhals==1.34.1",
    "nest-asyncio==1.6.0",
    "networkx==3.4.2",
    "numpy==2.2.4",
    "orjson==3.10.16",
    "packaging==24.2",
    "pandas==2.2.3",
    "propcache==0.3.1",
    "protobuf==5.29.5",
    "psutil==7.0.0",
    "pyarrow==19.0.1",
    "pydantic==2.11.7",
    "pydantic-settings==2.10.1",
    "pydantic_core==2.33.2",
    "pydeck==0.9.1",
    "Pygments==2.19.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "pytz==2025.2",
    "PyYAML==6.0.2",
    "referencing==0.36.2",
    "regex==2024.11.6",
    "requests==2.32.4",
    "requests-toolbelt==1.0.0",
    "rich==14.0.0",
    "rpds-py==0.24.0",
    "safetensors==0.5.3",
    "shellingham==1.5.4",
    "six==1.17.0",
    "smmap==5.0.2",
    "sniffio==1.3.1",
    "SQLAlchemy==2.0.40",
    "sse-starlette==2.2.1",
    "starlette==0.47.2",
    "streamlit==1.44.1",
    "sympy==1.13.1",
    "tabulate==0.9.0",
    "tenacity==9.1.2",
    "tokenizers==0.21.1",
    "toml==0.10.2",
    "tornado==6.5",
    "tqdm==4.67.1",
    "transformers==4.53.1",
    "typer==0.15.2",
    "typing-inspect==0.9.0",
    "typing-inspection==0.4.0",
    "typing_extensions==4.13.2",
    "tzdata==2025.2",
    "urllib3==2.5.0",
    "uv==0.8.6",
    "uvicorn==0.35.0",
    "yarl==1.19.0",
    "zstandard==0.23.0",
    "ruff==0.5.0",
]

[project.scripts]
mcp-instana = "src.core.server:main"
test = "tests.run_all_tests:main"
test-coverage = "tests.run_all_tests_with_coverage:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
# Target Python 3.11
target-version = "py311"

# Same as Black
line-length = 88

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), isort (I), and more
select = ["E", "F", "I", "W", "N", "B", "C4", "ARG", "SIM", "ERA", "PL", "RUF"]
ignore = [
    "E501",   # Line too long
    "SIM117", # Use a single with statement with multiple contexts
    "PLR0912", # Too many branches
    "E402",   # Module level import not at top of file
    "ARG001", # Unused function argument
    "PLR2004", # Magic value comparison
    "PLR0915", # Too many statements
    "PLR0911", # Too many return statements
    "B904",    # Within an except clause, raise exceptions with raise from
    "ARG002",  # Unused method argument
    "RUF012",  # Mutable class attributes should be annotated with ClassVar
    "F401",    # Imported but unused
    "N803",    # Argument name should be lowercase
    "N806",    # Variable in function should be lowercase
    "SIM102",  # Use a single if statement instead of nested if statements
    "ARG005",  # Unused lambda argument
    "N818",    # Exception name should be named with Error suffix
    "F811",    # Redefinition of unused name
    "PLW2901", # With statement variable overwritten by assignment target
    "SIM108",  # Use ternary operator instead of if-else-block
    "PLR0913", # Too many arguments in function definition
]

# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10
max-complexity = 10

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
