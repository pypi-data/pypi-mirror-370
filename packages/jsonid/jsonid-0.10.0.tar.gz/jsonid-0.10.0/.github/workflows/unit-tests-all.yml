---
name: "unit tests - all"
on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  tox:
    name: "Python ${{ matrix.python-version }} -- ${{ matrix.os }} "
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]
        experimental: [false]
        # Include experimental or bleeding-edge releases.
        # Windows is not included as it can be unreliable, e.g.
        # psycopg2-binary is only released some time after a Python
        # major/minor version is formally released.
        #
        # Uncomment below (including 'include:') when the next
        # reasonable test candidate is made available:
        include:
          #
          # Versions list: https://github.com/actions/python-versions/releases
          # Example formatting: 3.11.0-alpha.1, 3.9.0-beta.8, 3.10.0-rc.3
          #
          - os: ubuntu-latest
            python-version: "3.13"
            experimental: true
          - os: macos-latest
            python-version: "3.13"
            experimental: true
          - os: windows-latest
            python-version: "3.13"
            experimental: true
    steps:
      - name: "check out repository"
        uses: "actions/checkout@v4"
        with:
          submodules: 'true'
      - name: "set up python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "get pip cache dir"
        id: "pip-cache"
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: "show outputs.dir"
        run: echo "${{ steps.pip-cache.outputs.dir }}" && echo "${{ runner.os }}"
      - name: "install magic on macos"
        if: matrix.os == 'macos-latest'
        run: |
            brew install libmagic
      - name: "cache pip packages (windows)"
        uses: "actions/cache@v4"
        if: matrix.os == 'windows-latest'
        with:
          path: ~\AppData\Local\pip
          key: "${{ runner.os }}-pip-${{ hashFiles('**/local.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "cache pip packages (all platforms)"
        uses: "actions/cache@v4"
        if: matrix.os != 'windows-latest'
        with:
          path: "${{ steps.pip-cache.outputs.dir }}"
          key: "${{ runner.os }}-pip-${{ hashFiles('**/local.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "install tox"
        run: |
          python -m pip install --upgrade pip
          pip install tox-gh-actions
          python -m pip install -r requirements/local.txt
      - name: "run tox (all platforms)"
        if: matrix.os != 'windows-latest'
        run: tox
      - name: "run pytest (windows)"
        if: matrix.os == 'windows-latest'
        run: pytest -c pytest.ini tests/
