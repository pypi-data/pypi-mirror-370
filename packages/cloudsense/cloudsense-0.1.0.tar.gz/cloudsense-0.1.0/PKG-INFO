Metadata-Version: 2.4
Name: cloudsense
Version: 0.1.0
Summary: A minimal web interface for tracking AWS costs with customizable budget alerts and service breakdowns
Author-email: CloudSense Team <cloudsense@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/cloudsense
Project-URL: Repository, https://github.com/yourusername/cloudsense
Project-URL: Issues, https://github.com/yourusername/cloudsense/issues
Keywords: aws,cost,budget,dashboard,monitoring,cloud
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: flask>=3.0.0
Requires-Dist: boto3>=1.26.0

# CloudSense

An interactive tool for AWS cost.

## Features

- **Secure AWS cost tracking** using Cost Explorer API with authentication
- **Entire account and per service** usage can be displayed
- **Intelligent caching** - Cost data cached for 1 hour to improve performance
- **Flexible time ranges** (7, 14, 30, 90 days, current month, previous month, custom month, specific day)
- **Budget comparison** and usage tracking with alerts
- **Daily cost trends** visualization with interactive charts
- **Detailed service breakdown** by cost with EBS/EC2 analysis
- **Responsive web interface** with real-time updates
- **Performance optimized** with AWS session caching

## Caching cost data to reduce cost 

AWS Cost Explorer API calls are $.01 for each call.

- CloudSense caches cost data for **1 hour** to reduce cost
- Cache status displayed in the interface with last update timestamp
- Click **"Update Cost Data"** button to force refresh cached data

## Installation

**Recommended: Use a virtual environment**
```bash
# Create virtual environment
python -m venv cloudsense-env

# Activate virtual environment
source cloudsense-env/bin/activate
```

1. **Install CloudSense:**
   ```bash
   pip install cloudsense
   ```

2. **Configure AWS credentials (Required):**
   ```bash
   aws configure
   # or set environment variables:
   export AWS_ACCESS_KEY_ID=<your-key>
   export AWS_SECRET_ACCESS_KEY=<your-secret>
   export AWS_DEFAULT_REGION=us-east-1
   ```
   
   **Authentication Required**: CloudSense requires valid AWS credentials to access cost data.

3. **Run CloudSense:**
   ```bash
   cloudsense
   ```
   
   **Security Note**: By default, CloudSense binds to `127.0.0.1` (localhost only) for security.

4. **Access the interface:**
   Open http://localhost:8080 in your browser

## Command Line Options

```bash
cloudsense --help                   # Show help
cloudsense --port 5000              # Run on custom port
cloudsense --host 127.0.0.1         # Bind to specific host (default: localhost)
cloudsense --debug                  # Enable debug mode (development only)
```

**Security Options:**
- `--host 127.0.0.1` (default): Localhost only - most secure
- `--host 0.0.0.0`: All interfaces - use with caution, requires firewall

## AWS Permissions Required

Your AWS credentials need the following permissions:
```json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ce:GetCostAndUsage",
                "ce:GetUsageReport",
                "sts:GetCallerIdentity"
            ],
            "Resource": "*"
        }
    ]
}
```

**Note**: `sts:GetCallerIdentity` is required for authentication validation and account ID display.

## Screen shots
