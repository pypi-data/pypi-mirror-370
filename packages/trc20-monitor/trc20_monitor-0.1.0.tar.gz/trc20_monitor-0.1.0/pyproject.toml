[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trc20-monitor"
version = "0.1.0"
authors = [
    {name = "TRC20 Monitor Team", email = "support@trc20monitor.com"},
]
description = "Professional TRC20 transaction monitoring for Tron blockchain"
readme = "README.md"
license = {text = "MIT"}
keywords = ["tron", "trc20", "usdt", "blockchain", "monitoring", "cryptocurrency"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.8.1"
dependencies = [
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "base58>=2.1.0",
    "aiosqlite>=0.19.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# SQLAlchemy support
sqlalchemy = [
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.28.0",  # For PostgreSQL
    "aiomysql>=0.2.0",  # For MySQL
]

# Full feature set
full = [
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.28.0",  # For PostgreSQL
    "aiomysql>=0.2.0",  # For MySQL
]

[project.urls]
Homepage = "https://github.com/kun-g/trc20-monitor"
Documentation = "https://trc20-monitor.readthedocs.io/"
Repository = "https://github.com/kun-g/trc20-monitor.git"
Issues = "https://github.com/kun-g/trc20-monitor/issues"
Changelog = "https://github.com/kun-g/trc20-monitor/blob/main/CHANGELOG.md"

[project.scripts]
trc20-monitor = "trc20_monitor.cli:main"

[tool.setuptools]
packages = ["trc20_monitor"]

[tool.setuptools.package-data]
trc20_monitor = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "base58",
    "aiosqlite",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=trc20_monitor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["trc20_monitor"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]