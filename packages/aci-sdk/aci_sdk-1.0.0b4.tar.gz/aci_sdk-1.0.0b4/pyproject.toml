[project]
name = "aci-sdk"
version = "1.0.0b4"
description = "The Python SDK for the Agent Computer Interface (ACI) by Aipotheosis Labs"
authors = [{ name = "Aipolabs", email = "support@aipolabs.xyz" }]
maintainers = [{ name = "Aipolabs", email = "support@aipolabs.xyz" }]
readme = "README.md"
requires-python = ">=3.10"
homepage = "https://aci.dev"
repository = "https://github.com/aipotheosis-labs/aci-python-sdk"
packages = [{ include = "aci", from = "." }]
classifiers = [
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "Agent Computer Interface",
    "ACI",
    "MCP",
    "API",
    "LLM",
    "Tool Calling",
    "Function Calling",
    "Aipolabs",
    "Aipotheosis Labs",
]
dependencies = [
    "griffe>=1.7.2",
    "httpx>=0.27.2",
    "pydantic>=2.11.3",
    "tenacity>=8.2.3",
    "typing-extensions>=4.13.2",
]

[tool.ruff]
line-length = 100


[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "RUF", # ruff-specific rules
    "C4",  # flake8-comprehensions
]
extend-ignore = ["E501"]


[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true


[tool.mypy]
python_version = "3.10"
# Keep import-not-found errors
ignore_missing_imports = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "openai>=1.75.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "respx>=0.22.0",
    "rich>=14.0.0",
    "ruff>=0.11.6",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["aci"]

[tool.hatch.build.targets.wheel.force-include]
"aci/py.typed" = "aci/py.typed"
