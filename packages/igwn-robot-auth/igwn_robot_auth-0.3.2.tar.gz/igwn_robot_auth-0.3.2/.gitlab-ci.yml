workflow:
  rules:
    # run for merge requests
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # don't run on branches if there's an open merge request
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    # run on branches and tags
    - if: $CI_COMMIT_BRANCH || $CI_COMMIT_TAG

include:
  # -- Python ------------------------

  - component: $CI_SERVER_FQDN/computing/gitlab/components/python/all@2
    inputs:
      merge_request_pipelines: true
      install_extra: "htcondor,test"
      code_quality_analyzer: "ruff"
      run_advanced_sast: true
      python_versions:
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
      extra_test_commands:
        - python -m coverage run --append -m igwn_robot_auth --help

  - component: $CI_SERVER_FQDN/computing/gitlab/components/python/type-checking@2

  # -- Debian packaging --------------

  - component: $CI_SERVER_FQDN/computing/gitlab/components/debian/all@2
    inputs:
      merge_request_pipelines: true
      needs: [sdist]
      debian_versions:
        - bullseye
        - bookworm
      test_install: &system_test_install >-
        igwn-robot-auth
        python3-pytest
        python3-pytest-cov
      test_script: &system_test_script
        - /usr/bin/python3 -m pytest
            -ra
            --cov=igwn_robot_auth
            --cov-report=
            --durations=0
            --junit-xml=$CI_PROJECT_DIR/junit.xml
            --pyargs
            --verbose
            igwn_robot_auth
        - /usr/bin/python3 -m coverage run --append --source=igwn_robot_auth -m igwn_robot_auth --help
        - /usr/bin/python3 -m coverage report -m
        - /usr/bin/python3 -m coverage xml -o $CI_PROJECT_DIR/coverage.xml

  # -- Red Hat packaging -------------

  - component: $CI_SERVER_FQDN/computing/gitlab/components/redhat/all@2
    inputs:
      merge_request_pipelines: true
      needs: [sdist]
      redhat_versions:
        - 8
        - 9
      test_install: *system_test_install
      test_script: *system_test_script

  # -- Docker build ------------------

  # https://computing.docs.ligo.org/guide/gitlab/components/docker/all/
  - component: $CI_SERVER_FQDN/computing/gitlab/components/docker/all@2
    inputs:
      merge_request_pipelines: true
      upstream_project_path: "computing/software/igwn-robot-auth"
      # build/test options
      test_script:
        - /opt/igwn-robot-auth/bin/igwn-robot-get --help
      # deploy options
      deploy_tag: $CI_COMMIT_REF_NAME  # use verbatim tag name
      deploy_when: tags

  # -- Documentation -----------------

  - component: $CI_SERVER_FQDN/computing/gitlab/components/sphinx/build@~latest
    inputs:
      apt_packages: "graphviz"
      image: "python:3.12"
      requirements: ".[docs]"

dependency_scanning:
  before_script:
    - apt-get -yqq update
    - apt-get -yqq install
        libkrb5-dev

# overwrite the entrypoint for the docker_test job to allow running commands
docker_test:
  image:
    name: "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
    entrypoint: [""]

redhat_test_el8:
  variables:
    # don't include sources, we have patched them in the RPM
    GIT_STRATEGY: none
