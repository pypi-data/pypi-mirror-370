[build-system]
requires = [
  "setuptools >=70.0.0",
  "setuptools_scm[toml] >=3.4.3",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "igwn-robot-auth"
description = "Auth credential management for IGWN robots"
readme = "README.md"
authors = [
  { name = "Duncan Macleod", email = "duncan.macleod@ligo.org" },
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.9"
dependencies = [
  "igwn-auth-utils[gettoken,kerberos] >=1.3.0",
]
dynamic = [
  "version",
]

[project.optional-dependencies]
docs = [
  "furo",
  "myst-parser >=4.0.1",
  "Sphinx >=7.1.0",
  "sphinx-argparse",
  "sphinx-automodapi",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-github-style",
  "sphinx-substitution-extensions",
]
htcondor = [
  "htcondor",
]
test = [
  "pytest >= 3.9.3",
  "pytest-cov",
]

[project.scripts]
igwn-robot-get = "igwn_robot_auth.tools.get:main"

[project.urls]
"Homepage" = "https://git.ligo.org/computing/software/igwn-robot-auth/"
"Documentation" = "https://rtd.igwn.org/projects/igwn-robot-auth/"
"Issues" = "https://git.ligo.org/computing/software/igwn-robot-auth/-/issues/"
"Source Code" = "https://git.ligo.org/computing/software/igwn-robot-auth.git"

# -- tools ------------------

# -- argparse-manpage

[tool.build_manpages]
manpages = [
  "man/igwn-robot-get.1:function=create_parser:module=igwn_robot_auth.tools.get",
]

# -- coverage.py

[tool.coverage.paths]
# map standard install paths back to the source to
# enable merging coverage of installed module from
# multiple platforms
source = [
  "igwn_robot_auth/",  # <-- source path, must come first
  "*/igwn_robot_auth/",  # <-- any installed path
]

[tool.coverage.report]
exclude_lines = [
  # ignore when asked
  "pragma: no( |-)cover",
  # don't complain about typing blocks
  "if (typing\\.)?TYPE_CHECKING",
]
omit = [
  "*/_version.py",
]
# print report with one decimal point
precision = 1

# -- mypy

[tool.mypy]
check_untyped_defs = true
exclude = [
  "^docs/",
]
ignore_missing_imports = true

# -- pytest

[tool.pytest.ini_options]
addopts = "-r a --color=yes"
filterwarnings = [
  "error",
  # ignore HTCondor configuration warning
  "ignore:Neither the environment variable CONDOR_CONFIG",
]

# -- ruff

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN003",  # type annotations for **kwargs
  "D203",  # blank line before class docstring
  "D213",  # docstring summary on second line
  "D413",  # blank line after last section
  "PLR0913",  # too many arguments
  "SIM108",  # if-else instead of ternary if
]
# allow 'mock_...' variables to go unused in tests
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?)|mock_.*)$"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",  # unused-import
  "F403",  # undefined-local-with-import-star
]
"*/tests/*" = [
  "ANN",  # type annotations
  "B904",  # raise from
  "EM101",  # string literal in exception
  "PLR2004",  # magic value used in comparison
  "S101",  # assert
]
"docs/*" = [
  "A",  # builtins
  "ANN",  # type annotations
  "D",  # docstrings
  "INP001",  # implicit namespace package
]

# -- setuptools

[tool.setuptools.packages.find]
include = [
  "igwn_robot_auth*",
]

# -- setuptools-scm

[tool.setuptools_scm]
write_to = "igwn_robot_auth/_version.py"
