# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
from ......discover.resources.route.discover_route_config import DiscoverRouteConfig
import pydantic
import typing
from .static_asset_takeover_fingerprint import StaticAssetTakeoverFingerprint
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class PentestRouteStaticAssetTakeoverConfig(UniversalBaseModel):
    route_capture_config: DiscoverRouteConfig = pydantic.Field(alias="routeCaptureConfig")
    successful_only: bool = pydantic.Field(alias="successfulOnly")
    fingerprints: typing.List[StaticAssetTakeoverFingerprint]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
