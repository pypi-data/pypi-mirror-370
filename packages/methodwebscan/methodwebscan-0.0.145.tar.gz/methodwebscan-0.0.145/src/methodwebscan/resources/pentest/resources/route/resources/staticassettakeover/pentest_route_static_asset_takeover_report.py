# This file was auto-generated by Fern from our API Definition.

from .......core.pydantic_utilities import UniversalBaseModel
import typing
from ......common.resources.http.http_request_response import HttpRequestResponse
import pydantic
from .static_asset_takeover_attempt import StaticAssetTakeoverAttempt
from .pentest_route_static_asset_takeover_config import PentestRouteStaticAssetTakeoverConfig
from .......core.pydantic_utilities import IS_PYDANTIC_V2


class PentestRouteStaticAssetTakeoverReport(UniversalBaseModel):
    target: str
    base_request: typing.Optional[HttpRequestResponse] = pydantic.Field(alias="baseRequest", default=None)
    attempts: typing.Optional[typing.List[StaticAssetTakeoverAttempt]] = None
    config: PentestRouteStaticAssetTakeoverConfig
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
