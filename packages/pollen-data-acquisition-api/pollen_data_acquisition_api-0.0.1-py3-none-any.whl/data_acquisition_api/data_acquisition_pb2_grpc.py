# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import data_acquisition_pb2 as data__acquisition__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DataAcquisitionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDatasetList = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/GetDatasetList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.DatasetList.FromString,
                )
        self.AddDataset = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/AddDataset',
                request_serializer=data__acquisition__pb2.Dataset.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.RemoveDataset = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/RemoveDataset',
                request_serializer=data__acquisition__pb2.Dataset.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.UpdateDataset = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/UpdateDataset',
                request_serializer=data__acquisition__pb2.Dataset.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.ClearAllDatasets = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/ClearAllDatasets',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.StartSession = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/StartSession',
                request_serializer=data__acquisition__pb2.SessionParams.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.StopSession = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/StopSession',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.StartEpisode = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/StartEpisode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.StopEpisode = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/StopEpisode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.SaveEpisode = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/SaveEpisode',
                request_serializer=data__acquisition__pb2.EpisodeRating.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.UploadSession = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/UploadSession',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.RemoveSession = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/RemoveSession',
                request_serializer=data__acquisition__pb2.SessionParams.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )
        self.ClearAllSessions = channel.unary_unary(
                '/data.acquisition.DataAcquisitionService/ClearAllSessions',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=data__acquisition__pb2.ActionAck.FromString,
                )


class DataAcquisitionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDatasetList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearAllDatasets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartEpisode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopEpisode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveEpisode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearAllSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataAcquisitionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDatasetList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatasetList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.DatasetList.SerializeToString,
            ),
            'AddDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDataset,
                    request_deserializer=data__acquisition__pb2.Dataset.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'RemoveDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDataset,
                    request_deserializer=data__acquisition__pb2.Dataset.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'UpdateDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDataset,
                    request_deserializer=data__acquisition__pb2.Dataset.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'ClearAllDatasets': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearAllDatasets,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'StartSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSession,
                    request_deserializer=data__acquisition__pb2.SessionParams.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'StopSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSession,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'StartEpisode': grpc.unary_unary_rpc_method_handler(
                    servicer.StartEpisode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'StopEpisode': grpc.unary_unary_rpc_method_handler(
                    servicer.StopEpisode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'SaveEpisode': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveEpisode,
                    request_deserializer=data__acquisition__pb2.EpisodeRating.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'UploadSession': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadSession,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'RemoveSession': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSession,
                    request_deserializer=data__acquisition__pb2.SessionParams.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
            'ClearAllSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearAllSessions,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=data__acquisition__pb2.ActionAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'data.acquisition.DataAcquisitionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataAcquisitionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDatasetList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/GetDatasetList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.DatasetList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/AddDataset',
            data__acquisition__pb2.Dataset.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/RemoveDataset',
            data__acquisition__pb2.Dataset.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/UpdateDataset',
            data__acquisition__pb2.Dataset.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearAllDatasets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/ClearAllDatasets',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/StartSession',
            data__acquisition__pb2.SessionParams.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/StopSession',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartEpisode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/StartEpisode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopEpisode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/StopEpisode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveEpisode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/SaveEpisode',
            data__acquisition__pb2.EpisodeRating.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/UploadSession',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/RemoveSession',
            data__acquisition__pb2.SessionParams.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearAllSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data.acquisition.DataAcquisitionService/ClearAllSessions',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            data__acquisition__pb2.ActionAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
