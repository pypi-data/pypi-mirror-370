[tool.poetry]
name = "crux-odin"
version = "1.12.0"
description = "Open Data Integration Nomenclature (ODIN) is Crux’s standard for declarative data delivery"
authors = ["Crux Data <help@cruxdata.com>"]
packages = [{include = "crux_odin"}]
readme = "README.md"


[tool.poetry.dependencies]
python = ">=3.8.1"
jsonschema = "*"
ruamel-yaml = "*"
pydantic = "*"
pyyaml = "*"
poethepoet = "*"
pytest-cov = "*"
# Only versions greater than or equal to this have the is_valid() method.
croniter = ">=0.3.18"

[tool.poetry.group.dev.dependencies]
pylint = "*"
flake8 = "*"
black = "*"
pytest-mock = "*"
pytest-env = "*"
mypy = "*"
pytest = "*"
commitizen = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
version = "1.12.0"
tag_format="$major.$minor.$patch$prerelease"
update_changelog_on_bump=true
bump_message = "feat(release): $current_version → $new_version"
version_files = [
    "pyproject.toml:^version",
]

[tool.poe]
poetry_command = ""

[tool.poe.tasks]
test="pytest"
format_check="black --check ."
format="black ."
lint=[
    { cmd = "flake8" },
    { cmd = "pylint --ignore-paths '$(bin/format_whitelist_for_pylint)' ."}
]
version_check="cz bump --dry-run"
version_bump="cz bump"
version_bump_patch="cz bump --changelog --yes --increment patch"
version_bump_minor="cz bump --changelog --yes --increment minor"
version_bump_major="cz bump ---changelog --yes --increment major"

# We don't install crux-odin so the set_json_schema_env_from_installation()
# can't look up the location of WORKFLOW_CRD.
[tool.pytest.ini_options]
env = [
    "WORKFLOW_CRD = crux_odin/workflow_crd.yaml"
]