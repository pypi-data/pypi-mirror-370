[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spark-simplicity"
version = "1.0.1"
authors = [
    {name = "F. Barrios", email = "fabienbarrios@gmail.com"},
]
description = "Simplify Apache Spark operations with an intuitive Python API"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["spark", "pyspark", "big-data", "data-engineering", "etl"]
dependencies = [
    "pyspark>=3.5.0",
    "pandas>=2.0.0", 
    "openpyxl>=3.0.0",
    "requests>=2.28.0",
    "paramiko>=2.9.0",
    "pyarrow>=10.0.0",
    "fastparquet>=0.8.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.1.0",
    "coverage[toml]>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "mypy>=0.991",
    "bandit>=1.7.0",
    "hypothesis>=6.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
database = [
    "pyodbc>=4.0.0",
    "pymssql>=2.2.0",
]

[project.urls]
Homepage = "https://github.com/FabienBarrios/spark-simplicity"
Documentation = "https://spark-simplicity.readthedocs.io"
Repository = "https://github.com/FabienBarrios/spark-simplicity.git"
Issues = "https://github.com/FabienBarrios/spark-simplicity/issues"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
spark_simplicity = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -v --strict-markers --strict-config --cov=spark_simplicity --cov-report=xml --cov-report=html --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, with real Spark)",
    "slow: marks tests as slow running",
    "performance: marks performance/benchmark tests",
    "windows: marks Windows-specific tests",
    "spark_local: marks tests requiring local Spark cluster",
]

[tool.coverage.run]
source = ["spark_simplicity"]
branch = true
omit = [
    "tests/*",
    "examples/*",
    "spark_simplicity/__init__.py",
]

[tool.coverage.report]
show_missing = true
fail_under = 90
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyspark.*",
    "pandas.*",
]
ignore_missing_imports = true