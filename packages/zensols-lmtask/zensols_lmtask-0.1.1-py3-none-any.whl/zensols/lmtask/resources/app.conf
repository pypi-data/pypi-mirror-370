#@meta {author: "landes"}
#@meta {desc: "application CLI config", date: "2025-01-24"}


[cli]
apps = list: ${cli_config_default:apps}, show_config_cli, app, papp
cleanups = list: ${cli_config_default:cleanups}, show_config_cli, papp, app_decorator

[log_cli]
loggers = dict: {
  'zensols.lmtask.train': 'info',
  'zensols.lmtask.hf': 'info'}

[import]
config_files = list:
  resource(zensols.util): resources/default.conf,
  resource(zensols.util): resources/escape.conf,
  resource(zensols.util): resources/cli.conf,
  resource(zensols.util): resources/cli-config.conf

[config_cli]
expect = False

[config_import]
references = list: app, package, default, conf_esc
sections = list: app_conf_imp

[app_conf_imp]
type_map = dict: {'yml': 'condyaml', 'conf': 'importini'}
config_files = list: 
  ^{override},
  resource(zensols.lmtask): resources/default.conf,
  ^{config_path},
  resource(zensols.lmtask): resources/default.conf,
  resource(zensols.lmtask): resources/llama.yml,
  ^{override}, ^{config_path},
  resource(zensols.lmtask): resources/obj.yml,
  resource(zensols.lmtask): resources/tasks.yml,
  resource(zensols.lmtask): resources/quant.yml,
  resource(zensols.lmtask): resources/train.yml,
  ^{config_path}, ^{override}

[app]
class_name = zensols.lmtask.Application
task_factory = instance: lmtask_task_factory

[app_decorator]
option_excludes = set: config_factory, task_factory
option_overrides = dict: {
  'output_format': {'long_name': 'format', 'short_name': 'f'},
  'max_sample': {'long_name': 'max'},
  'long_output': {'long_name': 'verbose', 'short_name': None},
  'task_name': {'long_name': 'name', 'short_name': 'n'}}
mnemonic_overrides = dict: {
  'show_task': 'task',
  'show_trainer': 'trainer',
  'dataset_sample': 'sample'}

[papp]
class_name = zensols.lmtask.PrototypeApplication
app = instance: app
