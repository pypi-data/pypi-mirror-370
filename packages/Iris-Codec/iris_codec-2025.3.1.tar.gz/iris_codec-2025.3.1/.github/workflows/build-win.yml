name: Iris Codec Windows build

on:
    workflow_call:
      inputs:
        os:
            required: true
            type: string
        c_compiler:
            required: true
            type: string
        cpp_compiler:
            required: true
            type: string
        build_type:
            required: true
            type: string
        iris_cmake_flags:
            required: true
            type: string
        artifact:
            required: true
            type: string
          

jobs:
  build:
    runs-on: ${{ inputs.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Set build directory
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "install-dir=${{ github.workspace }}/${{ inputs.artifact }}" >> "$GITHUB_OUTPUT"

    - name: Export GitHub Actions Cache Environment Variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
          
    - name: Configure Vcpkg
      run: >
        git clone --depth 1 https://github.com/microsoft/vcpkg.git ${{ github.workspace }}\vcpkg && 
        ${{ github.workspace }}\vcpkg\bootstrap-vcpkg.bat &&
        ${{ github.workspace }}\vcpkg\vcpkg.exe install highway libjpeg-turbo libavif libpng --binarysource="clear;x-gha,readwrite"

    - name: Install Meson
      run: |
        python -m pip install --upgrade pip
        pip install meson ninja
        
    - name: Configure CMake
      run: >
        cmake -GNinja -B ${{ steps.strings.outputs.build-output-dir }}
        -S ${{ github.workspace }}
        -D CMAKE_CXX_COMPILER=${{ inputs.cpp_compiler }}
        -D CMAKE_C_COMPILER=${{ inputs.c_compiler }}
        -D CMAKE_BUILD_TYPE=${{ inputs.build_type }}
        -D CMAKE_INSTALL_PREFIX=${{ steps.strings.outputs.install-dir }}
        -D CMAKE_PREFIX_PATH="$ENV{CMAKE_PREFIX_PATH};${{ github.workspace }}/vcpkg/installed/x64-windows"
        ${{ inputs.iris_cmake_flags }}

    - name: Build 
      run: >
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ inputs.build_type }}

    - name: Package Build
      run: > 
        cmake --install ${{ steps.strings.outputs.build-output-dir }} &&
        cp ${{ github.workspace }}/LICENSE ${{ steps.strings.outputs.install-dir }} &&
        cp ${{ github.workspace }}/README.md ${{ steps.strings.outputs.install-dir }} &&
        tar -cvf iris-codec-${{ inputs.artifact }}.tar.gz -C ${{ steps.strings.outputs.install-dir }} .

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact }}
        path: iris-codec-${{ inputs.artifact }}.tar.gz