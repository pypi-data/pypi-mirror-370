[build-system]
requires = ["scikit-build-core>=0.10", "pybind11", "meson", "ninja", "setuptools-scm"]
build-backend = "scikit_build_core.build"



[project]
name = "Iris-Codec" 
dynamic = ["version"]

description = "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
readme = "./python/README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
keywords = ["Iris", "pathology", "digital pathology", "whole slide image", "digital slide"]
authors = [
  { name = "Ryan Landvater", email = "ryanlandvater@gmail.com" }
]
maintainers = [
  { name = "Ryan Landvater", email = "ryanlandvater@gmail.com" },
]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = ["openslide-bin"]

[project.urls]
"Homepage" = "https://github.com/IrisDigitalPathology/Iris-Codec"
"Bug Reports" = "https://github.com/IrisDigitalPathology/Iris-Codec/issues"
"Source" = "https://github.com/IrisDigitalPathology/Iris-Codec"



[tool.scikit-build]
wheel.expand-macos-universal-tags = true
minimum-version = "build-system.requires"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.args = [
  "-D CMAKE_INSTALL_PYTHON_LIBDIR=${SKBUILD_PLATLIB_DIR}",
  "-D CMAKE_INSTALL_LIBDIR=${SKBUILD_PLATLIB_DIR}",
  "-D IRIS_BUILD_PYTHON=ON",
  "-D IRIS_BUILD_ENCODER=ON",
  "-D IRIS_BUILD_STATIC=OFF",
  "-D IRIS_BUILD_SHARED=OFF",
  "-D IRIS_BUILD_DEPENDENCIES=ON",
]
cmake.build-type = "Release"
cmake.source-dir = "."
sdist.include = ["LICENSE", "licenses/*"]
wheel.license-files = ["LICENSE", "licenses/*"]

[tool.setuptools_scm]
fallback_version = "0.0.0"

[tool.cibuildwheel]
build-frontend = "build[uv]"

