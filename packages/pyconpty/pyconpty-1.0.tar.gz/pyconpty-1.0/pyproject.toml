# This code is part of the PyConPTY python package.
# PyConPTY: A Python wrapper for the ConPTY (Windows Pseudo-console) API
# Copyright (C) 2025  MELWYN FRANCIS CARLO

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# For queries, contact me at: melwyncarlo@gmail.com

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pyconpty"
version = "1.0"
description = "A Python wrapper for the ConPTY (Windows Pseudo-console) API"
authors = [
    { name = "Melwyn Francis Carlo", email = "melwyncarlo@gmail.com" }
]
license = "GPL-3.0-only"
license-files = ["LICENSE"]
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8"
keywords = ["pyconpty", "conpty", "windows", "pseudo", "console", "pseudoconsole", "winpty", "pty", "tty", "terminal", "subprocess"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Emulators",
    "Topic :: System :: Shells",
    "Topic :: Terminals :: Terminal Emulators/X Terminals",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Natural Language :: English"
]

[project.urls]
Homepage = "https://github.com/melwyncarlo/PyConPTY"
Issues = "https://github.com/melwyncarlo/PyConPTY/issues"

[tool.setuptools]
include-package-data = false

# Include the following option only if required:
# --full-trace \
# Include the following options to perform specific tests:
# -m specific
# (in test_pyconpty.py, include @pytest.mark.specific)
# Include the following options to see all print statements in real-time:
# -s
# Include the following option to catch Heisunbugs:
# --reruns 1
# Include the following option to catch avoid hanging:
# timeout = 10
[tool.pytest.ini_options]
addopts = """-vv -s -p no:cacheprovider \
             --maxfail=1 \
             --cache-clear \
             --cov-fail-under=100 \
             --cov-report html:cov_html_report \
             --cov-report=term \
             --cov=pyconpty"""
pythonpath = "src"
testpaths = ["tests"]
markers = ["specific"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["**/__init__.py"]

[tool.pylint.main]
ignore = ["build", "dist"]
ignore-patterns = [".pytest_cache", "__pycache__", "cov_html_report"]
extension-pkg-allow-list = ["_pyconptyinternal"]
extension-pkg-whitelist = ["_pyconptyinternal"]
fail-under = 10
enable = "all"

[tool.pylint.reports]
output-format = "colorized"

[tool.black]
line-length = 79
force-exclude = '''
/(
\.git
| \.pytest_cache
| __pycache__
| cov_html_report
| build/
| dist
)/
'''
