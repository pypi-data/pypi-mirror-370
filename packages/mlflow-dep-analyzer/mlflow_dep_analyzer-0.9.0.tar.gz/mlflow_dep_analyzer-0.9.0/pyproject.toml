[project]
name = "mlflow-dep-analyzer"
version = "0.9.0"
description = "Smart dependency analysis and minimal requirements generation for MLflow models"
authors = [
    { name = "Andrew Gross"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "mlflow"
]

[dependency-groups]
dev = [
    # Development and testing
    "pytest==7.4.0",
    "pytest-asyncio==0.21.1",
    "pytest-xdist==3.3.1",
    "pre-commit>=3.0.0",
    "ruff>=0.7.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pyspark==3.5.4",
    "types-setuptools",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "matplotlib>=3.0.0",
    "mlflow<3.0.0",
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "spark: marks tests that require Spark"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
