"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .updatehectokenrequest import UpdateHecTokenRequest, UpdateHecTokenRequestTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateInputHecTokenByIDAndTokenRequestTypedDict(TypedDict):
    id: str
    r"""HEC Source id"""
    token: str
    r"""token to update"""
    update_hec_token_request: UpdateHecTokenRequestTypedDict
    r"""UpdateHecTokenRequest object"""


class UpdateInputHecTokenByIDAndTokenRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""HEC Source id"""

    token: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""token to update"""

    update_hec_token_request: Annotated[
        UpdateHecTokenRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""UpdateHecTokenRequest object"""


class UpdateInputHecTokenByIDAndTokenResponseTypedDict(TypedDict):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class UpdateInputHecTokenByIDAndTokenResponse(BaseModel):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
