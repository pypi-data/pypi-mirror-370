"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitfilesresponse import GitFilesResponse, GitFilesResponseTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetVersionFilesRequestTypedDict(TypedDict):
    group: NotRequired[str]
    r"""Group ID"""
    id: NotRequired[str]
    r"""Commit ID"""


class GetVersionFilesRequest(BaseModel):
    group: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Group ID"""

    id: Annotated[
        Optional[str],
        pydantic.Field(alias="ID"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Commit ID"""


class GetVersionFilesResponseTypedDict(TypedDict):
    r"""a list of GitFilesResponse objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[GitFilesResponseTypedDict]]


class GetVersionFilesResponse(BaseModel):
    r"""a list of GitFilesResponse objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[GitFilesResponse]] = None
