"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, PathParamMetadata
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetConfigGroupConfigVersionByProductAndIDProduct(str, Enum):
    r"""Name of the Cribl product to get the Worker Groups or Edge Fleets for."""

    STREAM = "stream"
    EDGE = "edge"


class GetConfigGroupConfigVersionByProductAndIDRequestTypedDict(TypedDict):
    product: GetConfigGroupConfigVersionByProductAndIDProduct
    r"""Name of the Cribl product to get the Worker Groups or Edge Fleets for."""
    id: str
    r"""The <code>id</code> of the Worker Group or Edge Fleet to get the configuration version for."""


class GetConfigGroupConfigVersionByProductAndIDRequest(BaseModel):
    product: Annotated[
        GetConfigGroupConfigVersionByProductAndIDProduct,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Name of the Cribl product to get the Worker Groups or Edge Fleets for."""

    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The <code>id</code> of the Worker Group or Edge Fleet to get the configuration version for."""


class GetConfigGroupConfigVersionByProductAndIDResponseTypedDict(TypedDict):
    r"""a list of string objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[str]]


class GetConfigGroupConfigVersionByProductAndIDResponse(BaseModel):
    r"""a list of string objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[str]] = None
