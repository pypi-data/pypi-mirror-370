"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .distributedsummary import DistributedSummary, DistributedSummaryTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetSummaryMode(str, Enum):
    r"""product filter"""

    WORKER = "worker"
    MANAGED_EDGE = "managed-edge"


class GetSummaryRequestTypedDict(TypedDict):
    mode: NotRequired[GetSummaryMode]
    r"""product filter"""


class GetSummaryRequest(BaseModel):
    mode: Annotated[
        Optional[GetSummaryMode],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""product filter"""


class GetSummaryResponseTypedDict(TypedDict):
    r"""a list of DistributedSummary objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[DistributedSummaryTypedDict]]


class GetSummaryResponse(BaseModel):
    r"""a list of DistributedSummary objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[DistributedSummary]] = None
