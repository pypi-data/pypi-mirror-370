"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .useraccesscontrollist import UserAccessControlList, UserAccessControlListTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetGroupsACLByIDType(str, Enum):
    r"""resource type by which to filter access levels"""

    GROUPS = "groups"
    DATASETS = "datasets"
    DATASET_PROVIDERS = "dataset-providers"
    PROJECTS = "projects"
    DASHBOARDS = "dashboards"
    MACROS = "macros"
    NOTEBOOKS = "notebooks"
    INSIGHTS = "insights"


class GetGroupsACLByIDRequestTypedDict(TypedDict):
    id: str
    r"""Group id"""
    type: NotRequired[GetGroupsACLByIDType]
    r"""resource type by which to filter access levels"""


class GetGroupsACLByIDRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Group id"""

    type: Annotated[
        Optional[GetGroupsACLByIDType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""resource type by which to filter access levels"""


class GetGroupsACLByIDResponseTypedDict(TypedDict):
    r"""a list of UserAccessControlList objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[UserAccessControlListTypedDict]]


class GetGroupsACLByIDResponse(BaseModel):
    r"""a list of UserAccessControlList objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[UserAccessControlList]] = None
