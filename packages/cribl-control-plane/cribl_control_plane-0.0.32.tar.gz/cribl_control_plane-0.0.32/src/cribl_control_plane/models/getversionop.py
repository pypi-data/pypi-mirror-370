"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitlogresult import GitLogResult, GitLogResultTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetVersionRequestTypedDict(TypedDict):
    group: NotRequired[str]
    r"""Group ID"""
    count: NotRequired[float]
    r"""Maximum number of commits to return"""


class GetVersionRequest(BaseModel):
    group: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Group ID"""

    count: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Maximum number of commits to return"""


class GetVersionResponseTypedDict(TypedDict):
    r"""a list of GitLogResult objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[GitLogResultTypedDict]]


class GetVersionResponse(BaseModel):
    r"""a list of GitLogResult objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[GitLogResult]] = None
