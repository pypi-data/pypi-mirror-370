[project]
name = "ultrasound-metrics"
dynamic = ["version"]
description = "Metrics for ultrasound data and images"
authors = [
    { name = "Charles Guan", email = "charles@forestneurotech.org" },
    { name = "Ansh Kharbanda", email = "ansh@forestneurotech.org" },
    { name = "Jake McCall", email = "jake@forestneurotech.org" },
    { name = "Alex Rockhill", email = "alex@forestneurotech.org" },
]
maintainers = [
    { name = "Forest Neurotech Developers", email = "software-update@forestneurotech.org" },
]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "array-api-compat>=1.11.0",
    "array-api-extra>=0.7.0",
    "beartype>=0.16.0",
    "einops>=0.8.0",
    "equinox>=0.11.11",
    "jax>=0.4.38",
    "jaxtyping>=0.3.0",
    "matplotlib>=3.9.4",
    "numpy>=2.0.1",
    "opencv-python>=4.11.0",
    "pandas>=2.2.2",  # compatible with numpy 2.0 https://pandas.pydata.org/docs/whatsnew/v2.2.2.html
    "PyYAML>=5.4.1",
    "requests>=2.25.0",
    "scipy>=1.9.0",
    "scikit-image>=0.25.0",
    "xarray>=2024.10.0",
    "scikit-posthocs>=0.11.3",
    "statsmodels>=0.14.4",
]

[project.urls]
Homepage = "https://forest-neurotech-ultrasound-metrics.readthedocs-hosted.com/en/latest/"
Repository = "https://github.com/Forest-Neurotech/ultrasound-metrics"
Documentation = "https://Forest-Neurotech.github.io/ultrasound-metrics/"

[project.optional-dependencies]
backends = [
    # https://data-apis.org/array-api-compat/supported-array-libraries.html
    "numpy>=1.22",
    "jax>=0.4.32; python_version >= '3.10'",
    "torch>=1.13",
]
datasets = [
    "pyuff_ustb>=3.0.0",
]
progress = [
    "tqdm>=4.0.0"
]
interactive = [
    "napari[all]>=0.5.0",
]

[dependency-groups]
dev = [
    "bump-my-version>=1.0.0",
    "pre-commit>=2.20.0",
    "deptry>=0.22.0",
    "ty>=0.0.1a16",
    "ruff>=0.9.2",
    "copier>=9.5.0",
    {include-group = "notebook"},
    {include-group = "stubs"},
    {include-group = "test"},
]
test = [
    "array-api-strict>=2.2",
    "hypothesis>=6.30",  # copied from https://github.com/scipy/scipy/blob/v1.13.1/pyproject.toml#L90
    "pytest>=7.2.0",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=4.0.0",
    "pytest-env>=1.1.0",
    "pytest-randomly>=3.12.0",
    "scipy>=1.14.0,<1.16; python_version >= '3.10'",  # for Array-API conftest
    "tox-uv>=1.26.2",
]
stubs = [
    "pandas-stubs>=2.1.0",
    "scipy-stubs>=1.9.0; python_version >= '3.10'",
    "types-PyYAML>=5.9",
    "types-requests>=2.31.0",
]
notebook = [
    "nbdime>=3.9",
]
docs = [
    "matplotlib>=3.9.4",
    "pandas>=2.1.0",
    "sphinx>=7.0",
    "sphinx-book-theme>=1.1.3",
    "sphinx-gallery>=0.18.0",
    "napari[all]>=0.5.0",
    "pyuff_ustb>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.deptry]
known_first_party = [
    "ultrasound_metrics",
    "stats",
]
extend_exclude = [
    "docs",
    "vendor",
]
[tool.deptry.per_rule_ignores]
# No ignored dependencies currently

[tool.deptry.package_module_name_map]
sphinx-book-theme = "sphinx_book_theme"
sphinx-gallery = "sphinx_gallery"
opencv-python = "cv2"
scikit-image = "skimage"
scikit-posthocs = "scikit_posthocs"
array-api-compat = "array_api_compat"

[tool.hatch.version]
path = "src/ultrasound_metrics/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/ultrasound_metrics"]

[tool.hatch.build.targets.sdist]
include = ["src/ultrasound_metrics"]

[[tool.uv.index]]
name = "forest"
url = "https://pypi.fury.io/forest-neurotech/"
publish-url = "https://pypi.fury.io/forest-neurotech"
explicit = true

[tool.pytest.ini_options]
env = [
    # https://docs.scipy.org/doc/scipy/dev/api-dev/array_api.html#adding-tests
    "SCIPY_ARRAY_API=1",
]
filterwarnings = [
  "error",  # make warnings errors
]
markers = [
    # Borrowed from https://github.com/scipy/scipy/blob/cf073e0/pytest.ini#L29-L31
    "array_api_backends: test iterates on all array API backends",
    "skip_xp_backends(backends, reason=None, np_only=False, cpu_only=False, eager_only=False, exceptions=None): mark the desired skip configuration for the `skip_xp_backends` fixture",
    "xfail_xp_backends(backends, reason=None, np_only=False, cpu_only=False, eager_only=False, exceptions=None): mark the desired xfail configuration for the `xfail_xp_backends` fixture",
]
testpaths = ["tests"]

asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="session"

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    "B028",  # Allow warnings without stacklevel
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Allow string literals in Exceptions
    "EM101",
    # Forward annotations for jaxtyping
    "F722",
    # Undefined names in jaxtyping dimension annotations
    "F821",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Rules that may cause conflicts with formatter
    "ISC001",
    "S101", # Allow asserts
    # Ignore checks for possible passwords
    "S105",
    "S106",
    "S107",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "SIM108", # Okay to use if/else
    # Allow exception messages
    "TRY003",
    # Allow typing.Optional
    "UP007",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.ty.rules]
possibly-unbound-attribute = "ignore"  # array_namespace needs better typing

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
