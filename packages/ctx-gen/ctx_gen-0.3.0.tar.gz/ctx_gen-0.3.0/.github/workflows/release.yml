name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ctx-gen
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pip install pytest pytest-cov
          pytest tests/ --verbose

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*
          # List package contents
          python -m zipfile -l dist/*.whl

      - name: Publish to Test PyPI
        if: github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
        continue-on-error: true

      - name: Publish to PyPI
        if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Upload Release Assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    name: Build Standalone Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: ctx-gen-linux
            asset_name: ctx-gen-linux-amd64
          - os: windows-latest
            artifact_name: ctx-gen.exe
            asset_name: ctx-gen-windows-amd64.exe
          - os: macos-latest
            artifact_name: ctx-gen-macos
            asset_name: ctx-gen-macos-amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --onefile --name ${{ matrix.artifact_name }} \
            --add-data "README.md:." \
            --hidden-import typer \
            --hidden-import rich \
            --hidden-import tiktoken \
            --hidden-import pathspec \
            --hidden-import pyperclip \
            ctx_gen/__main__.py

      - name: Test binary
        run: |
          ./dist/${{ matrix.artifact_name }} version
          ./dist/${{ matrix.artifact_name }} --help
        shell: bash

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: dist/${{ matrix.artifact_name }}

      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
