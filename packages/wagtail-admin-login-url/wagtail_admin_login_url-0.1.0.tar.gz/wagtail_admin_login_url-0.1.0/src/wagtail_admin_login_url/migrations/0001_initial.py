# Generated by Django 5.2.1 on 2025-08-17 09:22

import django.core.validators
import django.utils.timezone
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, editable=False, null=True)),
                ('user_agent', models.TextField(blank=True, editable=False)),
                ('path_attempted', models.CharField(max_length=255)),
                ('referer', models.CharField(blank=True, max_length=255)),
                ('success', models.BooleanField(default=False)),
                ('reason', models.CharField(choices=[('Whitelisted', 'Whitelisted'), ('Blacklisted', 'Blacklisted'), ('Token Valid', 'Valid Token'), ('Secret Path Accessed', 'Secret Path Accessed'), ('Restricted Path Attempt', 'Restricted Path Attempt'), ('Invalid Path Attempt', 'Invalid Path Attempt'), ('Session Timeout Expired', 'Session Timeout Expired'), ('Too Many Attempts - Locked Out', 'Too Many Attempts - Locked Out'), ('FailedLoginThrottled', 'Failed Login - Throttled'), ('Throttling Disabled', 'Throttling Disabled'), ('Hide Admin Disabled', 'Hide Admin Disabled'), ('Authenticated User', 'Authenticated User'), ('Invalid Secret Path', 'Invalid Secret Path'), ('Missing Session Token', 'Missing Session Token'), ('Lockout Escalated', 'Lockout Escalated'), ('Lockout Initial', 'Initial Lockout'), ('Unknown', 'Unknown or Unexpected Condition')], default='Unknown', help_text='Reason the access attempt was logged.', max_length=64, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'Access Report',
                'verbose_name_plural': 'Access Reports',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_admin_path', models.CharField(default='portal/', help_text='The secret path to access admin if hide-admin is enabled. Example: "dashboard".', max_length=100, verbose_name='Admin Path')),
                ('session_timeout', models.PositiveIntegerField(default=300, help_text='Time the temporary admin session remains valid for non-authenticated users (e.g., 300 = 5 minutes).', validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(3600)], verbose_name='Session Timeout (seconds)')),
                ('verification_fields', multiselectfield.db.fields.MultiSelectField(choices=[('REMOTE_ADDR', 'Remote Address (IP) - ✅ Strong base token'), ('HTTP_USER_AGENT', 'User Agent - ✅ Adds entropy'), ('HTTP_ACCEPT_LANGUAGE', 'Accept-Language - ✅ Optional'), ('HTTP_REFERER', 'Referrer - Use carefully - ⚠️ Use carefully'), ('HTTP_ACCEPT_ENCODING', 'Accept-Encoding - ✅ Adds variety'), ('HTTP_ACCEPT', 'Accept - ⚠️ admin sprite and jsi18n issues'), ('HTTP_CONNECTION', 'Connection - ⚠️ Often changes randomly')], default=['REMOTE_ADDR', 'HTTP_USER_AGENT'], help_text='Headers used to sign and verify the admin token.', max_length=110, verbose_name='Verification Fields')),
                ('enabled', models.BooleanField(default=False, help_text='If enabled, unauthenticated users must use the secret path to access the Wagtail admin.', verbose_name='Enable Hide Admin Protection')),
                ('logging_enabled', models.BooleanField(default=True, help_text='Enable or disable admin access logging.', verbose_name='Enable Logging')),
                ('log_types', models.CharField(choices=[('failed', 'Failed Access'), ('success', 'Successful Access'), ('all', 'Failed and Successful')], default='failed', help_text='Types of logs to record.', max_length=255, verbose_name='Log Types')),
                ('log_retention_period', models.PositiveIntegerField(default=30, help_text='Delete logs older than this many days.', verbose_name='Log Retention Period (Days)')),
                ('throttling_login_enabled', models.BooleanField(default=False, help_text='Enable or disable login throttling per IP.', verbose_name='Enable Login Throttling')),
                ('throttle_attempt_limit', models.PositiveIntegerField(default=4, help_text='Number of failed attempts before initial lockout.', verbose_name='Max Attempts Before Lockout')),
                ('throttle_lockout_duration', models.PositiveIntegerField(default=20, help_text='Lockout duration in minutes after reaching the attempt limit.', verbose_name='Initial Lockout Duration (minutes)')),
                ('throttle_escalation_threshold', models.PositiveIntegerField(default=2, help_text='How many lockouts in 24 hours before escalating to longer lockout.', verbose_name='Escalation Threshold')),
                ('throttle_escalated_duration', models.PositiveIntegerField(default=1440, help_text='Lockout duration (in minutes) when escalated. 1440 = 24 hours.', verbose_name='Escalated Lockout Duration (minutes)')),
                ('throttle_window', models.PositiveIntegerField(default=1440, help_text='Time window to track failed attempts and lockout history (default 1440 = 24h).', verbose_name='Throttle Window (minutes)')),
                ('ip_whitelist', models.TextField(blank=True, help_text='One IP or IP range per line. These IPs will never be throttled. Ex. 127.0.0.1', verbose_name='IP Whitelist')),
                ('ip_blacklist', models.TextField(blank=True, help_text='One IP or IP range per line. These IPs will always be blocked. Ex. 127.0.0.1/24', verbose_name='IP Blacklist')),
                ('trusted_ip_headers', models.TextField(default='REMOTE_ADDR', help_text='One header per line (e.g., REMOTE_ADDR, HTTP_X_FORWARDED_FOR). Default is REMOTE_ADDR.', verbose_name='Trusted IP Origins')),
            ],
            options={
                'verbose_name': 'Admin Login URL',
                'verbose_name_plural': 'Admin Login URL',
            },
        ),
    ]
