[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "windows-sandbox-manager"
version = "0.3.1"
description = "A modern, secure, and scalable Python library for creating and managing Windows Sandbox instances"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Amal David", email = "labuka@duck.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Operating System",
    "Topic :: Security",
]
keywords = ["windows", "sandbox", "virtualization", "security", "isolation"]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "structlog>=23.0.0",
    "aiofiles>=23.0.0",
    "prometheus-client>=0.16.0",
    "grpcio>=1.54.0",
    "grpcio-tools>=1.54.0",
    "protobuf>=4.21.0",
    "rich>=13.0.0",
    "typing-extensions>=4.5.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "coverage[toml]>=7.0.0",
    "types-PyYAML>=6.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/Amal-David/python-windows-sandbox"
Documentation = "https://python-windows-sandbox.readthedocs.io"
Repository = "https://github.com/Amal-David/python-windows-sandbox"
"Bug Tracker" = "https://github.com/Amal-David/python-windows-sandbox/issues"
Changelog = "https://github.com/Amal-David/python-windows-sandbox/blob/main/CHANGELOG.md"

[project.scripts]
wsb = "windows_sandbox_manager.cli.main:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/windows_sandbox_manager"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
    "/scripts",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["windows_sandbox_manager"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=windows_sandbox_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "windows_only: Tests that require Windows",
]

[tool.coverage.run]
source = ["src/windows_sandbox_manager"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]