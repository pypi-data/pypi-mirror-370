{"version":3,"file":"lib_index_js.e52dcac7bac22ffc2fa5.js","mappings":"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","sources":["webpack://booking_extension/./src/components/DiskSpaceWidget.tsx","webpack://booking_extension/./src/handler.ts","webpack://booking_extension/./src/index.tsx","webpack://booking_extension/./src/utils/formatBytes.ts","webpack://booking_extension/./src/utils/showDiskNotifications.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { requestAPI } from '../handler';\r\n\r\nimport { ReactWidget } from '@jupyterlab/ui-components';\r\nimport { formatBytes } from '../utils/formatBytes';\r\n\r\nexport type DiskInfo = {\r\n  free: number;\r\n  total: number;\r\n  used: number;\r\n};\r\n\r\nconst POLLING_INTERVAL = 60 * 10 ** 3; // Each minute\r\n\r\nexport default function DiskSpaceWidget() {\r\n  const [diskInfo, setDiskInfo] = React.useState<null | DiskInfo>(null);\r\n\r\n  React.useEffect(() => {\r\n    const updateDiskInfo = () =>\r\n      requestAPI<DiskInfo>('disk').then(val => setDiskInfo(val));\r\n\r\n    updateDiskInfo();\r\n    const interval = setInterval(updateDiskInfo, POLLING_INTERVAL);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (diskInfo == null) return <></>;\r\n\r\n  const spaceRatio = diskInfo.used / diskInfo.total;\r\n  let className = 'booking-ds';\r\n  if (spaceRatio >= 0.5) className = 'booking-ds warn';\r\n  if (spaceRatio >= 0.75) className = 'booking-ds warn-2';\r\n  if (spaceRatio >= 0.9) className = 'booking-ds warn-3';\r\n\r\n  return (\r\n    <div className={className}>\r\n      <span>\r\n        {formatBytes(diskInfo.used)}/{formatBytes(diskInfo.total)} (\r\n        {formatBytes(diskInfo.free)} available)\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst diskWidget = ReactWidget.create(<DiskSpaceWidget />);\r\ndiskWidget.id = 'booking-widget';\r\nexport { diskWidget };\r\n","import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'booking-extension', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStatusBar } from '@jupyterlab/statusbar';\n// import { IThemeManager } from '@jupyterlab/apputils';\n\nimport { diskWidget } from './components/DiskSpaceWidget';\nimport { showDiskNotifications } from './utils/showDiskNotifications';\n\n/**\n * Initialization data for the booking_extension extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'booking_extension:plugin',\n  description: '',\n  autoStart: true,\n  optional: [ISettingRegistry, IStatusBar],\n  activate: (\n    app: JupyterFrontEnd,\n    settingRegistry: ISettingRegistry | null,\n    statusBar: IStatusBar | null\n  ) => {\n    console.log('JupyterLab extension booking_extension is activated!');\n\n    if (settingRegistry) {\n      settingRegistry\n        .load(plugin.id)\n        .then(settings => {\n          console.log('booking_extension settings loaded:', settings.composite);\n        })\n        .catch(reason => {\n          console.error(\n            'Failed to load settings for booking_extension.',\n            reason\n          );\n        });\n    }\n\n    if (statusBar != null) {\n      statusBar.registerStatusItem(diskWidget.id, {\n        item: diskWidget,\n        align: 'left',\n        rank: 2\n      });\n    }\n\n    showDiskNotifications();\n  }\n};\n\nexport default plugin;\n","export function formatBytes(bytes: number) {\r\n  if (bytes < 0) {\r\n    throw new Error('Bytes value must be non-negative');\r\n  }\r\n\r\n  const units = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const threshold = 1024;\r\n\r\n  if (bytes < threshold) {\r\n    return `${bytes} ${units[0]}`;\r\n  }\r\n\r\n  let unitIndex = 0;\r\n  while (bytes >= threshold && unitIndex < units.length - 1) {\r\n    bytes /= threshold;\r\n    unitIndex++;\r\n  }\r\n\r\n  // Round to 2 decimal places and remove trailing .00 if needed\r\n  const formattedValue =\r\n    bytes % 1 === 0 ? bytes.toString() : bytes.toFixed(2).replace(/\\.?0+$/, '');\r\n\r\n  return `${formattedValue} ${units[unitIndex]}`;\r\n}\r\n","import { Notification } from '@jupyterlab/apputils';\r\nimport { requestAPI } from '../handler';\r\nimport { DiskInfo } from '../components/DiskSpaceWidget';\r\n\r\nconst POLLING_INTERVAL = 5 * 60 * 10 ** 3; // 5 minutes\r\n\r\nexport function showDiskNotifications() {\r\n  let notificationId: null | string = null;\r\n  async function pollNotification() {\r\n    if (notificationId != null) {\r\n      const notifications = Notification.manager.notifications;\r\n      const notificationsId = notifications.map(n => n.id);\r\n      if (notificationsId.includes(notificationId)) return;\r\n    }\r\n    const { used, total } = await requestAPI<DiskInfo>('disk');\r\n    if (used / total < 0.95) return;\r\n\r\n    notificationId = Notification.warning(\r\n      'Your storage is nearly full. You may have trouble saving files or installing apps. Free up space to avoid issues.',\r\n      {\r\n        autoClose: 5000\r\n      }\r\n    );\r\n    console.log(Notification.manager.notifications);\r\n  }\r\n\r\n  pollNotification();\r\n\r\n  setInterval(pollNotification, POLLING_INTERVAL);\r\n}\r\n"],"names":[],"sourceRoot":""}